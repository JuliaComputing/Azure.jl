# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""VirtualMachineRunCommandScriptSource
Describes the script sources for run command.

    VirtualMachineRunCommandScriptSource(;
        script=nothing,
        scriptUri=nothing,
        commandId=nothing,
    )

    - script::String : Specifies the script content to be executed on the VM.
    - scriptUri::String : Specifies the script download location.
    - commandId::String : Specifies a commandId of predefined built-in script.
"""
Base.@kwdef mutable struct VirtualMachineRunCommandScriptSource <: OpenAPI.APIModel
    script::Union{Nothing, String} = nothing
    scriptUri::Union{Nothing, String} = nothing
    commandId::Union{Nothing, String} = nothing

    function VirtualMachineRunCommandScriptSource(script, scriptUri, commandId, )
        o = new(script, scriptUri, commandId, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type VirtualMachineRunCommandScriptSource

const _property_types_VirtualMachineRunCommandScriptSource = Dict{Symbol,String}(Symbol("script")=>"String", Symbol("scriptUri")=>"String", Symbol("commandId")=>"String", )
OpenAPI.property_type(::Type{ VirtualMachineRunCommandScriptSource }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_VirtualMachineRunCommandScriptSource[name]))}

function OpenAPI.check_required(o::VirtualMachineRunCommandScriptSource)
    true
end

function OpenAPI.validate_properties(o::VirtualMachineRunCommandScriptSource)
    OpenAPI.validate_property(VirtualMachineRunCommandScriptSource, Symbol("script"), o.script)
    OpenAPI.validate_property(VirtualMachineRunCommandScriptSource, Symbol("scriptUri"), o.scriptUri)
    OpenAPI.validate_property(VirtualMachineRunCommandScriptSource, Symbol("commandId"), o.commandId)
end

function OpenAPI.validate_property(::Type{ VirtualMachineRunCommandScriptSource }, name::Symbol, val)



end
