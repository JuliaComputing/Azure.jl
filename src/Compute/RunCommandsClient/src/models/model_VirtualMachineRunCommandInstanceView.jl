# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""VirtualMachineRunCommandInstanceView
The instance view of a virtual machine run command.

    VirtualMachineRunCommandInstanceView(;
        executionState=nothing,
        executionMessage=nothing,
        exitCode=nothing,
        output=nothing,
        error=nothing,
        startTime=nothing,
        endTime=nothing,
        statuses=nothing,
    )

    - executionState::String : Script execution status.
    - executionMessage::String : Communicate script configuration errors or execution messages.
    - exitCode::Int64 : Exit code returned from script execution.
    - output::String : Script output stream.
    - error::String : Script error stream.
    - startTime::ZonedDateTime : Script start time.
    - endTime::ZonedDateTime : Script end time.
    - statuses::Vector{InstanceViewStatus} : The resource status information.
"""
Base.@kwdef mutable struct VirtualMachineRunCommandInstanceView <: OpenAPI.APIModel
    executionState::Union{Nothing, String} = nothing
    executionMessage::Union{Nothing, String} = nothing
    exitCode::Union{Nothing, Int64} = nothing
    output::Union{Nothing, String} = nothing
    error::Union{Nothing, String} = nothing
    startTime::Union{Nothing, ZonedDateTime} = nothing
    endTime::Union{Nothing, ZonedDateTime} = nothing
    statuses::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{InstanceViewStatus} }

    function VirtualMachineRunCommandInstanceView(executionState, executionMessage, exitCode, output, error, startTime, endTime, statuses, )
        o = new(executionState, executionMessage, exitCode, output, error, startTime, endTime, statuses, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type VirtualMachineRunCommandInstanceView

const _property_types_VirtualMachineRunCommandInstanceView = Dict{Symbol,String}(Symbol("executionState")=>"String", Symbol("executionMessage")=>"String", Symbol("exitCode")=>"Int64", Symbol("output")=>"String", Symbol("error")=>"String", Symbol("startTime")=>"ZonedDateTime", Symbol("endTime")=>"ZonedDateTime", Symbol("statuses")=>"Vector{InstanceViewStatus}", )
OpenAPI.property_type(::Type{ VirtualMachineRunCommandInstanceView }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_VirtualMachineRunCommandInstanceView[name]))}

function OpenAPI.check_required(o::VirtualMachineRunCommandInstanceView)
    true
end

function OpenAPI.validate_properties(o::VirtualMachineRunCommandInstanceView)
    OpenAPI.validate_property(VirtualMachineRunCommandInstanceView, Symbol("executionState"), o.executionState)
    OpenAPI.validate_property(VirtualMachineRunCommandInstanceView, Symbol("executionMessage"), o.executionMessage)
    OpenAPI.validate_property(VirtualMachineRunCommandInstanceView, Symbol("exitCode"), o.exitCode)
    OpenAPI.validate_property(VirtualMachineRunCommandInstanceView, Symbol("output"), o.output)
    OpenAPI.validate_property(VirtualMachineRunCommandInstanceView, Symbol("error"), o.error)
    OpenAPI.validate_property(VirtualMachineRunCommandInstanceView, Symbol("startTime"), o.startTime)
    OpenAPI.validate_property(VirtualMachineRunCommandInstanceView, Symbol("endTime"), o.endTime)
    OpenAPI.validate_property(VirtualMachineRunCommandInstanceView, Symbol("statuses"), o.statuses)
end

function OpenAPI.validate_property(::Type{ VirtualMachineRunCommandInstanceView }, name::Symbol, val)

    if name === Symbol("executionState")
        OpenAPI.validate_param(name, "VirtualMachineRunCommandInstanceView", :enum, val, ["Unknown", "Pending", "Running", "Failed", "Succeeded", "TimedOut", "Canceled"])
    end



    if name === Symbol("exitCode")
        OpenAPI.validate_param(name, "VirtualMachineRunCommandInstanceView", :format, val, "int32")
    end



    if name === Symbol("startTime")
        OpenAPI.validate_param(name, "VirtualMachineRunCommandInstanceView", :format, val, "date-time")
    end

    if name === Symbol("endTime")
        OpenAPI.validate_param(name, "VirtualMachineRunCommandInstanceView", :format, val, "date-time")
    end

end
