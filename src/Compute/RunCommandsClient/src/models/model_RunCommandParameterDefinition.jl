# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""RunCommandParameterDefinition
Describes the properties of a run command parameter.

    RunCommandParameterDefinition(;
        name=nothing,
        type=nothing,
        defaultValue=nothing,
        required=false,
    )

    - name::String : The run command parameter name.
    - type::String : The run command parameter type.
    - defaultValue::String : The run command parameter default value.
    - required::Bool : The run command parameter required.
"""
Base.@kwdef mutable struct RunCommandParameterDefinition <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing
    defaultValue::Union{Nothing, String} = nothing
    required::Union{Nothing, Bool} = false

    function RunCommandParameterDefinition(name, type, defaultValue, required, )
        OpenAPI.validate_property(RunCommandParameterDefinition, Symbol("name"), name)
        OpenAPI.validate_property(RunCommandParameterDefinition, Symbol("type"), type)
        OpenAPI.validate_property(RunCommandParameterDefinition, Symbol("defaultValue"), defaultValue)
        OpenAPI.validate_property(RunCommandParameterDefinition, Symbol("required"), required)
        return new(name, type, defaultValue, required, )
    end
end # type RunCommandParameterDefinition

const _property_types_RunCommandParameterDefinition = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("type")=>"String", Symbol("defaultValue")=>"String", Symbol("required")=>"Bool", )
OpenAPI.property_type(::Type{ RunCommandParameterDefinition }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_RunCommandParameterDefinition[name]))}

function check_required(o::RunCommandParameterDefinition)
    o.name === nothing && (return false)
    o.type === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ RunCommandParameterDefinition }, name::Symbol, val)
end
