# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ApiErrorBase
Api error base.

    ApiErrorBase(;
        code=nothing,
        target=nothing,
        message=nothing,
    )

    - code::String : The error code.
    - target::String : The target of the particular error.
    - message::String : The error message.
"""
Base.@kwdef mutable struct ApiErrorBase <: OpenAPI.APIModel
    code::Union{Nothing, String} = nothing
    target::Union{Nothing, String} = nothing
    message::Union{Nothing, String} = nothing

    function ApiErrorBase(code, target, message, )
        o = new(code, target, message, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type ApiErrorBase

const _property_types_ApiErrorBase = Dict{Symbol,String}(Symbol("code")=>"String", Symbol("target")=>"String", Symbol("message")=>"String", )
OpenAPI.property_type(::Type{ ApiErrorBase }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ApiErrorBase[name]))}

function OpenAPI.check_required(o::ApiErrorBase)
    true
end

function OpenAPI.validate_properties(o::ApiErrorBase)
    OpenAPI.validate_property(ApiErrorBase, Symbol("code"), o.code)
    OpenAPI.validate_property(ApiErrorBase, Symbol("target"), o.target)
    OpenAPI.validate_property(ApiErrorBase, Symbol("message"), o.message)
end

function OpenAPI.validate_property(::Type{ ApiErrorBase }, name::Symbol, val)



end
