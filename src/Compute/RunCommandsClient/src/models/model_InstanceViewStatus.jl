# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""InstanceViewStatus
Instance view status.

    InstanceViewStatus(;
        code=nothing,
        level=nothing,
        displayStatus=nothing,
        message=nothing,
        time=nothing,
    )

    - code::String : The status code.
    - level::String : The level code.
    - displayStatus::String : The short localizable label for the status.
    - message::String : The detailed status message, including for alerts and error messages.
    - time::ZonedDateTime : The time of the status.
"""
Base.@kwdef mutable struct InstanceViewStatus <: OpenAPI.APIModel
    code::Union{Nothing, String} = nothing
    level::Union{Nothing, String} = nothing
    displayStatus::Union{Nothing, String} = nothing
    message::Union{Nothing, String} = nothing
    time::Union{Nothing, ZonedDateTime} = nothing

    function InstanceViewStatus(code, level, displayStatus, message, time, )
        o = new(code, level, displayStatus, message, time, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type InstanceViewStatus

const _property_types_InstanceViewStatus = Dict{Symbol,String}(Symbol("code")=>"String", Symbol("level")=>"String", Symbol("displayStatus")=>"String", Symbol("message")=>"String", Symbol("time")=>"ZonedDateTime", )
OpenAPI.property_type(::Type{ InstanceViewStatus }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_InstanceViewStatus[name]))}

function OpenAPI.check_required(o::InstanceViewStatus)
    true
end

function OpenAPI.validate_properties(o::InstanceViewStatus)
    OpenAPI.validate_property(InstanceViewStatus, Symbol("code"), o.code)
    OpenAPI.validate_property(InstanceViewStatus, Symbol("level"), o.level)
    OpenAPI.validate_property(InstanceViewStatus, Symbol("displayStatus"), o.displayStatus)
    OpenAPI.validate_property(InstanceViewStatus, Symbol("message"), o.message)
    OpenAPI.validate_property(InstanceViewStatus, Symbol("time"), o.time)
end

function OpenAPI.validate_property(::Type{ InstanceViewStatus }, name::Symbol, val)


    if name === Symbol("level")
        OpenAPI.validate_param(name, "InstanceViewStatus", :enum, val, ["Info", "Warning", "Error"])
    end




    if name === Symbol("time")
        OpenAPI.validate_param(name, "InstanceViewStatus", :format, val, "date-time")
    end
end
