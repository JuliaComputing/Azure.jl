# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct SnapshotsApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `SnapshotsApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ SnapshotsApi }) = "https://management.azure.com"

const _returntypes_snapshots_create_or_update_SnapshotsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Snapshot,
    Regex("^" * replace("202", "x"=>".") * "\$") => Snapshot,
)

function _oacinternal_snapshots_create_or_update(_api::SnapshotsApi, subscription_id::String, resource_group_name::String, snapshot_name::String, api_version::String, snapshot::Snapshot; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_snapshots_create_or_update_SnapshotsApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}", ["azure_auth", ], snapshot)
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "snapshotName", snapshot_name)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Creates or updates a snapshot.

Params:
- subscription_id::String (required)
- resource_group_name::String (required)
- snapshot_name::String (required)
- api_version::String (required)
- snapshot::Snapshot (required)

Return: Snapshot, OpenAPI.Clients.ApiResponse
"""
function snapshots_create_or_update(_api::SnapshotsApi, subscription_id::String, resource_group_name::String, snapshot_name::String, api_version::String, snapshot::Snapshot; _mediaType=nothing)
    _ctx = _oacinternal_snapshots_create_or_update(_api, subscription_id, resource_group_name, snapshot_name, api_version, snapshot; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function snapshots_create_or_update(_api::SnapshotsApi, response_stream::Channel, subscription_id::String, resource_group_name::String, snapshot_name::String, api_version::String, snapshot::Snapshot; _mediaType=nothing)
    _ctx = _oacinternal_snapshots_create_or_update(_api, subscription_id, resource_group_name, snapshot_name, api_version, snapshot; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_snapshots_delete_SnapshotsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("202", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_snapshots_delete(_api::SnapshotsApi, subscription_id::String, resource_group_name::String, snapshot_name::String, api_version::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_snapshots_delete_SnapshotsApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "snapshotName", snapshot_name)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Deletes a snapshot.

Params:
- subscription_id::String (required)
- resource_group_name::String (required)
- snapshot_name::String (required)
- api_version::String (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function snapshots_delete(_api::SnapshotsApi, subscription_id::String, resource_group_name::String, snapshot_name::String, api_version::String; _mediaType=nothing)
    _ctx = _oacinternal_snapshots_delete(_api, subscription_id, resource_group_name, snapshot_name, api_version; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function snapshots_delete(_api::SnapshotsApi, response_stream::Channel, subscription_id::String, resource_group_name::String, snapshot_name::String, api_version::String; _mediaType=nothing)
    _ctx = _oacinternal_snapshots_delete(_api, subscription_id, resource_group_name, snapshot_name, api_version; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_snapshots_get_SnapshotsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Snapshot,
)

function _oacinternal_snapshots_get(_api::SnapshotsApi, subscription_id::String, resource_group_name::String, snapshot_name::String, api_version::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_snapshots_get_SnapshotsApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "snapshotName", snapshot_name)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Gets information about a snapshot.

Params:
- subscription_id::String (required)
- resource_group_name::String (required)
- snapshot_name::String (required)
- api_version::String (required)

Return: Snapshot, OpenAPI.Clients.ApiResponse
"""
function snapshots_get(_api::SnapshotsApi, subscription_id::String, resource_group_name::String, snapshot_name::String, api_version::String; _mediaType=nothing)
    _ctx = _oacinternal_snapshots_get(_api, subscription_id, resource_group_name, snapshot_name, api_version; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function snapshots_get(_api::SnapshotsApi, response_stream::Channel, subscription_id::String, resource_group_name::String, snapshot_name::String, api_version::String; _mediaType=nothing)
    _ctx = _oacinternal_snapshots_get(_api, subscription_id, resource_group_name, snapshot_name, api_version; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_snapshots_grant_access_SnapshotsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => AccessUri,
    Regex("^" * replace("202", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_snapshots_grant_access(_api::SnapshotsApi, subscription_id::String, resource_group_name::String, snapshot_name::String, api_version::String, grant_access_data::GrantAccessData; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_snapshots_grant_access_SnapshotsApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}/beginGetAccess", ["azure_auth", ], grant_access_data)
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "snapshotName", snapshot_name)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Grants access to a snapshot.

Params:
- subscription_id::String (required)
- resource_group_name::String (required)
- snapshot_name::String (required)
- api_version::String (required)
- grant_access_data::GrantAccessData (required)

Return: AccessUri, OpenAPI.Clients.ApiResponse
"""
function snapshots_grant_access(_api::SnapshotsApi, subscription_id::String, resource_group_name::String, snapshot_name::String, api_version::String, grant_access_data::GrantAccessData; _mediaType=nothing)
    _ctx = _oacinternal_snapshots_grant_access(_api, subscription_id, resource_group_name, snapshot_name, api_version, grant_access_data; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function snapshots_grant_access(_api::SnapshotsApi, response_stream::Channel, subscription_id::String, resource_group_name::String, snapshot_name::String, api_version::String, grant_access_data::GrantAccessData; _mediaType=nothing)
    _ctx = _oacinternal_snapshots_grant_access(_api, subscription_id, resource_group_name, snapshot_name, api_version, grant_access_data; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_snapshots_list_SnapshotsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => SnapshotList,
)

function _oacinternal_snapshots_list(_api::SnapshotsApi, subscription_id::String, api_version::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_snapshots_list_SnapshotsApi, "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/snapshots", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Lists snapshots under a subscription.

Params:
- subscription_id::String (required)
- api_version::String (required)

Return: SnapshotList, OpenAPI.Clients.ApiResponse
"""
function snapshots_list(_api::SnapshotsApi, subscription_id::String, api_version::String; _mediaType=nothing)
    _ctx = _oacinternal_snapshots_list(_api, subscription_id, api_version; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function snapshots_list(_api::SnapshotsApi, response_stream::Channel, subscription_id::String, api_version::String; _mediaType=nothing)
    _ctx = _oacinternal_snapshots_list(_api, subscription_id, api_version; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_snapshots_list_by_resource_group_SnapshotsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => SnapshotList,
)

function _oacinternal_snapshots_list_by_resource_group(_api::SnapshotsApi, subscription_id::String, resource_group_name::String, api_version::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_snapshots_list_by_resource_group_SnapshotsApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Lists snapshots under a resource group.

Params:
- subscription_id::String (required)
- resource_group_name::String (required)
- api_version::String (required)

Return: SnapshotList, OpenAPI.Clients.ApiResponse
"""
function snapshots_list_by_resource_group(_api::SnapshotsApi, subscription_id::String, resource_group_name::String, api_version::String; _mediaType=nothing)
    _ctx = _oacinternal_snapshots_list_by_resource_group(_api, subscription_id, resource_group_name, api_version; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function snapshots_list_by_resource_group(_api::SnapshotsApi, response_stream::Channel, subscription_id::String, resource_group_name::String, api_version::String; _mediaType=nothing)
    _ctx = _oacinternal_snapshots_list_by_resource_group(_api, subscription_id, resource_group_name, api_version; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_snapshots_revoke_access_SnapshotsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("202", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_snapshots_revoke_access(_api::SnapshotsApi, subscription_id::String, resource_group_name::String, snapshot_name::String, api_version::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_snapshots_revoke_access_SnapshotsApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}/endGetAccess", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "snapshotName", snapshot_name)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Revokes access to a snapshot.

Params:
- subscription_id::String (required)
- resource_group_name::String (required)
- snapshot_name::String (required)
- api_version::String (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function snapshots_revoke_access(_api::SnapshotsApi, subscription_id::String, resource_group_name::String, snapshot_name::String, api_version::String; _mediaType=nothing)
    _ctx = _oacinternal_snapshots_revoke_access(_api, subscription_id, resource_group_name, snapshot_name, api_version; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function snapshots_revoke_access(_api::SnapshotsApi, response_stream::Channel, subscription_id::String, resource_group_name::String, snapshot_name::String, api_version::String; _mediaType=nothing)
    _ctx = _oacinternal_snapshots_revoke_access(_api, subscription_id, resource_group_name, snapshot_name, api_version; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_snapshots_update_SnapshotsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Snapshot,
    Regex("^" * replace("202", "x"=>".") * "\$") => Snapshot,
)

function _oacinternal_snapshots_update(_api::SnapshotsApi, subscription_id::String, resource_group_name::String, snapshot_name::String, api_version::String, snapshot::SnapshotUpdate; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PATCH", _returntypes_snapshots_update_SnapshotsApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/snapshots/{snapshotName}", ["azure_auth", ], snapshot)
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "snapshotName", snapshot_name)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Updates (patches) a snapshot.

Params:
- subscription_id::String (required)
- resource_group_name::String (required)
- snapshot_name::String (required)
- api_version::String (required)
- snapshot::SnapshotUpdate (required)

Return: Snapshot, OpenAPI.Clients.ApiResponse
"""
function snapshots_update(_api::SnapshotsApi, subscription_id::String, resource_group_name::String, snapshot_name::String, api_version::String, snapshot::SnapshotUpdate; _mediaType=nothing)
    _ctx = _oacinternal_snapshots_update(_api, subscription_id, resource_group_name, snapshot_name, api_version, snapshot; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function snapshots_update(_api::SnapshotsApi, response_stream::Channel, subscription_id::String, resource_group_name::String, snapshot_name::String, api_version::String, snapshot::SnapshotUpdate; _mediaType=nothing)
    _ctx = _oacinternal_snapshots_update(_api, subscription_id, resource_group_name, snapshot_name, api_version, snapshot; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export snapshots_create_or_update
export snapshots_delete
export snapshots_get
export snapshots_grant_access
export snapshots_list
export snapshots_list_by_resource_group
export snapshots_revoke_access
export snapshots_update
