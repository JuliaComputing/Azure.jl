# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""DiskUpdate
Disk update resource.

    DiskUpdate(;
        properties=nothing,
        tags=nothing,
        sku=nothing,
    )

    - properties::DiskUpdateProperties
    - tags::Dict{String, String} : Resource tags
    - sku::DiskSku
"""
Base.@kwdef mutable struct DiskUpdate <: OpenAPI.APIModel
    properties = nothing # spec type: Union{ Nothing, DiskUpdateProperties }
    tags::Union{Nothing, Dict{String, String}} = nothing
    sku = nothing # spec type: Union{ Nothing, DiskSku }

    function DiskUpdate(properties, tags, sku, )
        o = new(properties, tags, sku, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type DiskUpdate

const _property_types_DiskUpdate = Dict{Symbol,String}(Symbol("properties")=>"DiskUpdateProperties", Symbol("tags")=>"Dict{String, String}", Symbol("sku")=>"DiskSku", )
OpenAPI.property_type(::Type{ DiskUpdate }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DiskUpdate[name]))}

function OpenAPI.check_required(o::DiskUpdate)
    true
end

function OpenAPI.validate_properties(o::DiskUpdate)
    OpenAPI.validate_property(DiskUpdate, Symbol("properties"), o.properties)
    OpenAPI.validate_property(DiskUpdate, Symbol("tags"), o.tags)
    OpenAPI.validate_property(DiskUpdate, Symbol("sku"), o.sku)
end

function OpenAPI.validate_property(::Type{ DiskUpdate }, name::Symbol, val)



end
