# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""SnapshotSku
The snapshots sku name. Can be Standard_LRS, Premium_LRS, or Standard_ZRS.

    SnapshotSku(;
        name=nothing,
        tier=nothing,
    )

    - name::String : The sku name.
    - tier::String : The sku tier.
"""
Base.@kwdef mutable struct SnapshotSku <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    tier::Union{Nothing, String} = nothing

    function SnapshotSku(name, tier, )
        OpenAPI.validate_property(SnapshotSku, Symbol("name"), name)
        OpenAPI.validate_property(SnapshotSku, Symbol("tier"), tier)
        return new(name, tier, )
    end
end # type SnapshotSku

const _property_types_SnapshotSku = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("tier")=>"String", )
OpenAPI.property_type(::Type{ SnapshotSku }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_SnapshotSku[name]))}

function check_required(o::SnapshotSku)
    true
end

function OpenAPI.validate_property(::Type{ SnapshotSku }, name::Symbol, val)
    if name === Symbol("name")
        OpenAPI.validate_param(name, "SnapshotSku", :enum, val, ["Standard_LRS", "Premium_LRS", "Standard_ZRS"])
    end
end
