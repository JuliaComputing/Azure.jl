# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""PurchasePlan
Used for establishing the purchase context of any 3rd Party artifact through MarketPlace.

    PurchasePlan(;
        name=nothing,
        publisher=nothing,
        product=nothing,
        promotionCode=nothing,
    )

    - name::String : The plan ID.
    - publisher::String : The publisher ID.
    - product::String : Specifies the product of the image from the marketplace. This is the same value as Offer under the imageReference element.
    - promotionCode::String : The Offer Promotion Code.
"""
Base.@kwdef mutable struct PurchasePlan <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    publisher::Union{Nothing, String} = nothing
    product::Union{Nothing, String} = nothing
    promotionCode::Union{Nothing, String} = nothing

    function PurchasePlan(name, publisher, product, promotionCode, )
        o = new(name, publisher, product, promotionCode, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type PurchasePlan

const _property_types_PurchasePlan = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("publisher")=>"String", Symbol("product")=>"String", Symbol("promotionCode")=>"String", )
OpenAPI.property_type(::Type{ PurchasePlan }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_PurchasePlan[name]))}

function OpenAPI.check_required(o::PurchasePlan)
    o.name === nothing && (return false)
    o.publisher === nothing && (return false)
    o.product === nothing && (return false)
    true
end

function OpenAPI.validate_properties(o::PurchasePlan)
    OpenAPI.validate_property(PurchasePlan, Symbol("name"), o.name)
    OpenAPI.validate_property(PurchasePlan, Symbol("publisher"), o.publisher)
    OpenAPI.validate_property(PurchasePlan, Symbol("product"), o.product)
    OpenAPI.validate_property(PurchasePlan, Symbol("promotionCode"), o.promotionCode)
end

function OpenAPI.validate_property(::Type{ PurchasePlan }, name::Symbol, val)




end
