# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""DiskList
The List Disks operation response.

    DiskList(;
        value=nothing,
        nextLink=nothing,
    )

    - value::Vector{Disk} : A list of disks.
    - nextLink::String : The uri to fetch the next page of disks. Call ListNext() with this to fetch the next page of disks.
"""
Base.@kwdef mutable struct DiskList <: OpenAPI.APIModel
    value::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{Disk} }
    nextLink::Union{Nothing, String} = nothing

    function DiskList(value, nextLink, )
        o = new(value, nextLink, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type DiskList

const _property_types_DiskList = Dict{Symbol,String}(Symbol("value")=>"Vector{Disk}", Symbol("nextLink")=>"String", )
OpenAPI.property_type(::Type{ DiskList }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DiskList[name]))}

function OpenAPI.check_required(o::DiskList)
    o.value === nothing && (return false)
    true
end

function OpenAPI.validate_properties(o::DiskList)
    OpenAPI.validate_property(DiskList, Symbol("value"), o.value)
    OpenAPI.validate_property(DiskList, Symbol("nextLink"), o.nextLink)
end

function OpenAPI.validate_property(::Type{ DiskList }, name::Symbol, val)


end
