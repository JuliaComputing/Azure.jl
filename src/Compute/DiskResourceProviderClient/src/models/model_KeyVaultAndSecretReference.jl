# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""KeyVaultAndSecretReference
Key Vault Secret Url and vault id of the encryption key 

    KeyVaultAndSecretReference(;
        sourceVault=nothing,
        secretUrl=nothing,
    )

    - sourceVault::SourceVault
    - secretUrl::String : Url pointing to a key or secret in KeyVault
"""
Base.@kwdef mutable struct KeyVaultAndSecretReference <: OpenAPI.APIModel
    sourceVault = nothing # spec type: Union{ Nothing, SourceVault }
    secretUrl::Union{Nothing, String} = nothing

    function KeyVaultAndSecretReference(sourceVault, secretUrl, )
        OpenAPI.validate_property(KeyVaultAndSecretReference, Symbol("sourceVault"), sourceVault)
        OpenAPI.validate_property(KeyVaultAndSecretReference, Symbol("secretUrl"), secretUrl)
        return new(sourceVault, secretUrl, )
    end
end # type KeyVaultAndSecretReference

const _property_types_KeyVaultAndSecretReference = Dict{Symbol,String}(Symbol("sourceVault")=>"SourceVault", Symbol("secretUrl")=>"String", )
OpenAPI.property_type(::Type{ KeyVaultAndSecretReference }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_KeyVaultAndSecretReference[name]))}

function check_required(o::KeyVaultAndSecretReference)
    o.sourceVault === nothing && (return false)
    o.secretUrl === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ KeyVaultAndSecretReference }, name::Symbol, val)
end
