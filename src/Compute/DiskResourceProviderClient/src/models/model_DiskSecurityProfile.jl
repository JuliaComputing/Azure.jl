# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""DiskSecurityProfile
Contains the security related information for the resource.

    DiskSecurityProfile(;
        securityType=nothing,
        secureVMDiskEncryptionSetId=nothing,
    )

    - securityType::DiskSecurityType
    - secureVMDiskEncryptionSetId::String : ResourceId of the disk encryption set associated to Confidential VM supported disk encrypted with customer managed key
"""
Base.@kwdef mutable struct DiskSecurityProfile <: OpenAPI.APIModel
    securityType = nothing # spec type: Union{ Nothing, DiskSecurityType }
    secureVMDiskEncryptionSetId::Union{Nothing, String} = nothing

    function DiskSecurityProfile(securityType, secureVMDiskEncryptionSetId, )
        o = new(securityType, secureVMDiskEncryptionSetId, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type DiskSecurityProfile

const _property_types_DiskSecurityProfile = Dict{Symbol,String}(Symbol("securityType")=>"DiskSecurityType", Symbol("secureVMDiskEncryptionSetId")=>"String", )
OpenAPI.property_type(::Type{ DiskSecurityProfile }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DiskSecurityProfile[name]))}

function OpenAPI.check_required(o::DiskSecurityProfile)
    true
end

function OpenAPI.validate_properties(o::DiskSecurityProfile)
    OpenAPI.validate_property(DiskSecurityProfile, Symbol("securityType"), o.securityType)
    OpenAPI.validate_property(DiskSecurityProfile, Symbol("secureVMDiskEncryptionSetId"), o.secureVMDiskEncryptionSetId)
end

function OpenAPI.validate_property(::Type{ DiskSecurityProfile }, name::Symbol, val)


end
