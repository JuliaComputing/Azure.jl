# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ContainerServiceProperties
Properties of the container service.

    ContainerServiceProperties(;
        provisioningState=nothing,
        orchestratorProfile=nothing,
        customProfile=nothing,
        servicePrincipalProfile=nothing,
        masterProfile=nothing,
        agentPoolProfiles=nothing,
        windowsProfile=nothing,
        linuxProfile=nothing,
        diagnosticsProfile=nothing,
    )

    - provisioningState::String : the current deployment or provisioning state, which only appears in the response.
    - orchestratorProfile::ContainerServiceOrchestratorProfile
    - customProfile::ContainerServiceCustomProfile
    - servicePrincipalProfile::ContainerServiceServicePrincipalProfile
    - masterProfile::ContainerServiceMasterProfile
    - agentPoolProfiles::Vector{ContainerServiceAgentPoolProfile} : Properties of the agent pool.
    - windowsProfile::ContainerServiceWindowsProfile
    - linuxProfile::ContainerServiceLinuxProfile
    - diagnosticsProfile::ContainerServiceDiagnosticsProfile
"""
Base.@kwdef mutable struct ContainerServiceProperties <: OpenAPI.APIModel
    provisioningState::Union{Nothing, String} = nothing
    orchestratorProfile = nothing # spec type: Union{ Nothing, ContainerServiceOrchestratorProfile }
    customProfile = nothing # spec type: Union{ Nothing, ContainerServiceCustomProfile }
    servicePrincipalProfile = nothing # spec type: Union{ Nothing, ContainerServiceServicePrincipalProfile }
    masterProfile = nothing # spec type: Union{ Nothing, ContainerServiceMasterProfile }
    agentPoolProfiles::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{ContainerServiceAgentPoolProfile} }
    windowsProfile = nothing # spec type: Union{ Nothing, ContainerServiceWindowsProfile }
    linuxProfile = nothing # spec type: Union{ Nothing, ContainerServiceLinuxProfile }
    diagnosticsProfile = nothing # spec type: Union{ Nothing, ContainerServiceDiagnosticsProfile }

    function ContainerServiceProperties(provisioningState, orchestratorProfile, customProfile, servicePrincipalProfile, masterProfile, agentPoolProfiles, windowsProfile, linuxProfile, diagnosticsProfile, )
        OpenAPI.validate_property(ContainerServiceProperties, Symbol("provisioningState"), provisioningState)
        OpenAPI.validate_property(ContainerServiceProperties, Symbol("orchestratorProfile"), orchestratorProfile)
        OpenAPI.validate_property(ContainerServiceProperties, Symbol("customProfile"), customProfile)
        OpenAPI.validate_property(ContainerServiceProperties, Symbol("servicePrincipalProfile"), servicePrincipalProfile)
        OpenAPI.validate_property(ContainerServiceProperties, Symbol("masterProfile"), masterProfile)
        OpenAPI.validate_property(ContainerServiceProperties, Symbol("agentPoolProfiles"), agentPoolProfiles)
        OpenAPI.validate_property(ContainerServiceProperties, Symbol("windowsProfile"), windowsProfile)
        OpenAPI.validate_property(ContainerServiceProperties, Symbol("linuxProfile"), linuxProfile)
        OpenAPI.validate_property(ContainerServiceProperties, Symbol("diagnosticsProfile"), diagnosticsProfile)
        return new(provisioningState, orchestratorProfile, customProfile, servicePrincipalProfile, masterProfile, agentPoolProfiles, windowsProfile, linuxProfile, diagnosticsProfile, )
    end
end # type ContainerServiceProperties

const _property_types_ContainerServiceProperties = Dict{Symbol,String}(Symbol("provisioningState")=>"String", Symbol("orchestratorProfile")=>"ContainerServiceOrchestratorProfile", Symbol("customProfile")=>"ContainerServiceCustomProfile", Symbol("servicePrincipalProfile")=>"ContainerServiceServicePrincipalProfile", Symbol("masterProfile")=>"ContainerServiceMasterProfile", Symbol("agentPoolProfiles")=>"Vector{ContainerServiceAgentPoolProfile}", Symbol("windowsProfile")=>"ContainerServiceWindowsProfile", Symbol("linuxProfile")=>"ContainerServiceLinuxProfile", Symbol("diagnosticsProfile")=>"ContainerServiceDiagnosticsProfile", )
OpenAPI.property_type(::Type{ ContainerServiceProperties }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ContainerServiceProperties[name]))}

function check_required(o::ContainerServiceProperties)
    o.masterProfile === nothing && (return false)
    o.agentPoolProfiles === nothing && (return false)
    o.linuxProfile === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ ContainerServiceProperties }, name::Symbol, val)
end
