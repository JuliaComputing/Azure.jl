# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ContainerServiceOrchestratorProfile
Profile for the container service orchestrator.

    ContainerServiceOrchestratorProfile(;
        orchestratorType=nothing,
    )

    - orchestratorType::String : The orchestrator to use to manage container service cluster resources. Valid values are Swarm, DCOS, and Custom.
"""
Base.@kwdef mutable struct ContainerServiceOrchestratorProfile <: OpenAPI.APIModel
    orchestratorType::Union{Nothing, String} = nothing

    function ContainerServiceOrchestratorProfile(orchestratorType, )
        o = new(orchestratorType, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type ContainerServiceOrchestratorProfile

const _property_types_ContainerServiceOrchestratorProfile = Dict{Symbol,String}(Symbol("orchestratorType")=>"String", )
OpenAPI.property_type(::Type{ ContainerServiceOrchestratorProfile }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ContainerServiceOrchestratorProfile[name]))}

function OpenAPI.check_required(o::ContainerServiceOrchestratorProfile)
    o.orchestratorType === nothing && (return false)
    true
end

function OpenAPI.validate_properties(o::ContainerServiceOrchestratorProfile)
    OpenAPI.validate_property(ContainerServiceOrchestratorProfile, Symbol("orchestratorType"), o.orchestratorType)
end

function OpenAPI.validate_property(::Type{ ContainerServiceOrchestratorProfile }, name::Symbol, val)

    if name === Symbol("orchestratorType")
        OpenAPI.validate_param(name, "ContainerServiceOrchestratorProfile", :enum, val, ["Swarm", "DCOS", "Custom", "Kubernetes"])
    end

end
