# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ContainerServiceServicePrincipalProfile
Information about a service principal identity for the cluster to use for manipulating Azure APIs.

    ContainerServiceServicePrincipalProfile(;
        clientId=nothing,
        secret=nothing,
    )

    - clientId::String : The ID for the service principal.
    - secret::String : The secret password associated with the service principal.
"""
Base.@kwdef mutable struct ContainerServiceServicePrincipalProfile <: OpenAPI.APIModel
    clientId::Union{Nothing, String} = nothing
    secret::Union{Nothing, String} = nothing

    function ContainerServiceServicePrincipalProfile(clientId, secret, )
        OpenAPI.validate_property(ContainerServiceServicePrincipalProfile, Symbol("clientId"), clientId)
        OpenAPI.validate_property(ContainerServiceServicePrincipalProfile, Symbol("secret"), secret)
        return new(clientId, secret, )
    end
end # type ContainerServiceServicePrincipalProfile

const _property_types_ContainerServiceServicePrincipalProfile = Dict{Symbol,String}(Symbol("clientId")=>"String", Symbol("secret")=>"String", )
OpenAPI.property_type(::Type{ ContainerServiceServicePrincipalProfile }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ContainerServiceServicePrincipalProfile[name]))}

function check_required(o::ContainerServiceServicePrincipalProfile)
    o.clientId === nothing && (return false)
    o.secret === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ ContainerServiceServicePrincipalProfile }, name::Symbol, val)
end
