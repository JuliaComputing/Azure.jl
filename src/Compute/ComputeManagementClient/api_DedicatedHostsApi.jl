# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

struct DedicatedHostsApi <: SwaggerApi
    client::Swagger.Client
end

"""

Create or update a dedicated host .
Param: resourceGroupName::String (required)
Param: hostGroupName::String (required)
Param: hostName::String (required)
Param: parameters::DedicatedHost (required)
Param: api_version::String (required)
Param: subscriptionId::String (required)
Return: DedicatedHost
"""
function _swaggerinternal_dedicatedHostsCreateOrUpdate(_api::DedicatedHostsApi, resourceGroupName::String, hostGroupName::String, hostName::String, parameters, api_version::String, subscriptionId::String; _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "PUT", DedicatedHost, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}/hosts/{hostName}", ["azure_auth"], parameters)
    Swagger.set_param(_ctx.path, "resourceGroupName", resourceGroupName)  # type String
    Swagger.set_param(_ctx.path, "hostGroupName", hostGroupName)  # type String
    Swagger.set_param(_ctx.path, "hostName", hostName)  # type String
    Swagger.set_param(_ctx.path, "subscriptionId", subscriptionId)  # type String
    Swagger.set_param(_ctx.query, "api-version", api_version)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json"] : [_mediaType])
    return _ctx
end

function dedicatedHostsCreateOrUpdate(_api::DedicatedHostsApi, resourceGroupName::String, hostGroupName::String, hostName::String, parameters, api_version::String, subscriptionId::String; _mediaType=nothing)
    _ctx = _swaggerinternal_dedicatedHostsCreateOrUpdate(_api, resourceGroupName, hostGroupName, hostName, parameters, api_version, subscriptionId; _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function dedicatedHostsCreateOrUpdate(_api::DedicatedHostsApi, response_stream::Channel, resourceGroupName::String, hostGroupName::String, hostName::String, parameters, api_version::String, subscriptionId::String; _mediaType=nothing)
    _ctx = _swaggerinternal_dedicatedHostsCreateOrUpdate(_api, resourceGroupName, hostGroupName, hostName, parameters, api_version, subscriptionId; _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

"""

Delete a dedicated host.
Param: resourceGroupName::String (required)
Param: hostGroupName::String (required)
Param: hostName::String (required)
Param: api_version::String (required)
Param: subscriptionId::String (required)
Return: Nothing
"""
function _swaggerinternal_dedicatedHostsDelete(_api::DedicatedHostsApi, resourceGroupName::String, hostGroupName::String, hostName::String, api_version::String, subscriptionId::String; _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "DELETE", Nothing, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}/hosts/{hostName}", ["azure_auth"])
    Swagger.set_param(_ctx.path, "resourceGroupName", resourceGroupName)  # type String
    Swagger.set_param(_ctx.path, "hostGroupName", hostGroupName)  # type String
    Swagger.set_param(_ctx.path, "hostName", hostName)  # type String
    Swagger.set_param(_ctx.path, "subscriptionId", subscriptionId)  # type String
    Swagger.set_param(_ctx.query, "api-version", api_version)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json"] : [_mediaType])
    return _ctx
end

function dedicatedHostsDelete(_api::DedicatedHostsApi, resourceGroupName::String, hostGroupName::String, hostName::String, api_version::String, subscriptionId::String; _mediaType=nothing)
    _ctx = _swaggerinternal_dedicatedHostsDelete(_api, resourceGroupName, hostGroupName, hostName, api_version, subscriptionId; _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function dedicatedHostsDelete(_api::DedicatedHostsApi, response_stream::Channel, resourceGroupName::String, hostGroupName::String, hostName::String, api_version::String, subscriptionId::String; _mediaType=nothing)
    _ctx = _swaggerinternal_dedicatedHostsDelete(_api, resourceGroupName, hostGroupName, hostName, api_version, subscriptionId; _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

"""

Retrieves information about a dedicated host.
Param: resourceGroupName::String (required)
Param: hostGroupName::String (required)
Param: hostName::String (required)
Param: api_version::String (required)
Param: subscriptionId::String (required)
Param: expand::String
Return: DedicatedHost
"""
function _swaggerinternal_dedicatedHostsGet(_api::DedicatedHostsApi, resourceGroupName::String, hostGroupName::String, hostName::String, api_version::String, subscriptionId::String; expand=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", DedicatedHost, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}/hosts/{hostName}", ["azure_auth"])
    Swagger.set_param(_ctx.path, "resourceGroupName", resourceGroupName)  # type String
    Swagger.set_param(_ctx.path, "hostGroupName", hostGroupName)  # type String
    Swagger.set_param(_ctx.path, "hostName", hostName)  # type String
    Swagger.set_param(_ctx.path, "subscriptionId", subscriptionId)  # type String
    Swagger.set_param(_ctx.query, "\$expand", expand)  # type String
    Swagger.set_param(_ctx.query, "api-version", api_version)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json"] : [_mediaType])
    return _ctx
end

function dedicatedHostsGet(_api::DedicatedHostsApi, resourceGroupName::String, hostGroupName::String, hostName::String, api_version::String, subscriptionId::String; expand=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_dedicatedHostsGet(_api, resourceGroupName, hostGroupName, hostName, api_version, subscriptionId; expand=expand, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function dedicatedHostsGet(_api::DedicatedHostsApi, response_stream::Channel, resourceGroupName::String, hostGroupName::String, hostName::String, api_version::String, subscriptionId::String; expand=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_dedicatedHostsGet(_api, resourceGroupName, hostGroupName, hostName, api_version, subscriptionId; expand=expand, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

"""

Update an dedicated host .
Param: resourceGroupName::String (required)
Param: hostGroupName::String (required)
Param: hostName::String (required)
Param: parameters::DedicatedHostUpdate (required)
Param: api_version::String (required)
Param: subscriptionId::String (required)
Return: DedicatedHost
"""
function _swaggerinternal_dedicatedHostsUpdate(_api::DedicatedHostsApi, resourceGroupName::String, hostGroupName::String, hostName::String, parameters, api_version::String, subscriptionId::String; _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "PATCH", DedicatedHost, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}/hosts/{hostName}", ["azure_auth"], parameters)
    Swagger.set_param(_ctx.path, "resourceGroupName", resourceGroupName)  # type String
    Swagger.set_param(_ctx.path, "hostGroupName", hostGroupName)  # type String
    Swagger.set_param(_ctx.path, "hostName", hostName)  # type String
    Swagger.set_param(_ctx.path, "subscriptionId", subscriptionId)  # type String
    Swagger.set_param(_ctx.query, "api-version", api_version)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json"] : [_mediaType])
    return _ctx
end

function dedicatedHostsUpdate(_api::DedicatedHostsApi, resourceGroupName::String, hostGroupName::String, hostName::String, parameters, api_version::String, subscriptionId::String; _mediaType=nothing)
    _ctx = _swaggerinternal_dedicatedHostsUpdate(_api, resourceGroupName, hostGroupName, hostName, parameters, api_version, subscriptionId; _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function dedicatedHostsUpdate(_api::DedicatedHostsApi, response_stream::Channel, resourceGroupName::String, hostGroupName::String, hostName::String, parameters, api_version::String, subscriptionId::String; _mediaType=nothing)
    _ctx = _swaggerinternal_dedicatedHostsUpdate(_api, resourceGroupName, hostGroupName, hostName, parameters, api_version, subscriptionId; _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

export dedicatedHostsCreateOrUpdate, dedicatedHostsDelete, dedicatedHostsGet, dedicatedHostsUpdate
