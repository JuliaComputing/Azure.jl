# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""VirtualMachineScaleSetProperties
Describes the properties of a Virtual Machine Scale Set.

    VirtualMachineScaleSetProperties(;
        upgradePolicy=nothing,
        automaticRepairsPolicy=nothing,
        virtualMachineProfile=nothing,
        provisioningState=nothing,
        overprovision=nothing,
        doNotRunExtensionsOnOverprovisionedVMs=nothing,
        uniqueId=nothing,
        singlePlacementGroup=nothing,
        zoneBalance=nothing,
        platformFaultDomainCount=nothing,
        proximityPlacementGroup=nothing,
        hostGroup=nothing,
        additionalCapabilities=nothing,
        scaleInPolicy=nothing,
    )

    - upgradePolicy::UpgradePolicy
    - automaticRepairsPolicy::AutomaticRepairsPolicy
    - virtualMachineProfile::VirtualMachineScaleSetVMProfile
    - provisioningState::String : The provisioning state, which only appears in the response.
    - overprovision::Bool : Specifies whether the Virtual Machine Scale Set should be overprovisioned.
    - doNotRunExtensionsOnOverprovisionedVMs::Bool : When Overprovision is enabled, extensions are launched only on the requested number of VMs which are finally kept. This property will hence ensure that the extensions do not run on the extra overprovisioned VMs.
    - uniqueId::String : Specifies the ID which uniquely identifies a Virtual Machine Scale Set.
    - singlePlacementGroup::Bool : When true this limits the scale set to a single placement group, of max size 100 virtual machines. NOTE: If singlePlacementGroup is true, it may be modified to false. However, if singlePlacementGroup is false, it may not be modified to true.
    - zoneBalance::Bool : Whether to force strictly even Virtual Machine distribution cross x-zones in case there is zone outage.
    - platformFaultDomainCount::Int64 : Fault Domain count for each placement group.
    - proximityPlacementGroup::SubResource
    - hostGroup::SubResource
    - additionalCapabilities::AdditionalCapabilities
    - scaleInPolicy::ScaleInPolicy
"""
Base.@kwdef mutable struct VirtualMachineScaleSetProperties <: OpenAPI.APIModel
    upgradePolicy = nothing # spec type: Union{ Nothing, UpgradePolicy }
    automaticRepairsPolicy = nothing # spec type: Union{ Nothing, AutomaticRepairsPolicy }
    virtualMachineProfile = nothing # spec type: Union{ Nothing, VirtualMachineScaleSetVMProfile }
    provisioningState::Union{Nothing, String} = nothing
    overprovision::Union{Nothing, Bool} = nothing
    doNotRunExtensionsOnOverprovisionedVMs::Union{Nothing, Bool} = nothing
    uniqueId::Union{Nothing, String} = nothing
    singlePlacementGroup::Union{Nothing, Bool} = nothing
    zoneBalance::Union{Nothing, Bool} = nothing
    platformFaultDomainCount::Union{Nothing, Int64} = nothing
    proximityPlacementGroup = nothing # spec type: Union{ Nothing, SubResource }
    hostGroup = nothing # spec type: Union{ Nothing, SubResource }
    additionalCapabilities = nothing # spec type: Union{ Nothing, AdditionalCapabilities }
    scaleInPolicy = nothing # spec type: Union{ Nothing, ScaleInPolicy }

    function VirtualMachineScaleSetProperties(upgradePolicy, automaticRepairsPolicy, virtualMachineProfile, provisioningState, overprovision, doNotRunExtensionsOnOverprovisionedVMs, uniqueId, singlePlacementGroup, zoneBalance, platformFaultDomainCount, proximityPlacementGroup, hostGroup, additionalCapabilities, scaleInPolicy, )
        OpenAPI.validate_property(VirtualMachineScaleSetProperties, Symbol("upgradePolicy"), upgradePolicy)
        OpenAPI.validate_property(VirtualMachineScaleSetProperties, Symbol("automaticRepairsPolicy"), automaticRepairsPolicy)
        OpenAPI.validate_property(VirtualMachineScaleSetProperties, Symbol("virtualMachineProfile"), virtualMachineProfile)
        OpenAPI.validate_property(VirtualMachineScaleSetProperties, Symbol("provisioningState"), provisioningState)
        OpenAPI.validate_property(VirtualMachineScaleSetProperties, Symbol("overprovision"), overprovision)
        OpenAPI.validate_property(VirtualMachineScaleSetProperties, Symbol("doNotRunExtensionsOnOverprovisionedVMs"), doNotRunExtensionsOnOverprovisionedVMs)
        OpenAPI.validate_property(VirtualMachineScaleSetProperties, Symbol("uniqueId"), uniqueId)
        OpenAPI.validate_property(VirtualMachineScaleSetProperties, Symbol("singlePlacementGroup"), singlePlacementGroup)
        OpenAPI.validate_property(VirtualMachineScaleSetProperties, Symbol("zoneBalance"), zoneBalance)
        OpenAPI.validate_property(VirtualMachineScaleSetProperties, Symbol("platformFaultDomainCount"), platformFaultDomainCount)
        OpenAPI.validate_property(VirtualMachineScaleSetProperties, Symbol("proximityPlacementGroup"), proximityPlacementGroup)
        OpenAPI.validate_property(VirtualMachineScaleSetProperties, Symbol("hostGroup"), hostGroup)
        OpenAPI.validate_property(VirtualMachineScaleSetProperties, Symbol("additionalCapabilities"), additionalCapabilities)
        OpenAPI.validate_property(VirtualMachineScaleSetProperties, Symbol("scaleInPolicy"), scaleInPolicy)
        return new(upgradePolicy, automaticRepairsPolicy, virtualMachineProfile, provisioningState, overprovision, doNotRunExtensionsOnOverprovisionedVMs, uniqueId, singlePlacementGroup, zoneBalance, platformFaultDomainCount, proximityPlacementGroup, hostGroup, additionalCapabilities, scaleInPolicy, )
    end
end # type VirtualMachineScaleSetProperties

const _property_types_VirtualMachineScaleSetProperties = Dict{Symbol,String}(Symbol("upgradePolicy")=>"UpgradePolicy", Symbol("automaticRepairsPolicy")=>"AutomaticRepairsPolicy", Symbol("virtualMachineProfile")=>"VirtualMachineScaleSetVMProfile", Symbol("provisioningState")=>"String", Symbol("overprovision")=>"Bool", Symbol("doNotRunExtensionsOnOverprovisionedVMs")=>"Bool", Symbol("uniqueId")=>"String", Symbol("singlePlacementGroup")=>"Bool", Symbol("zoneBalance")=>"Bool", Symbol("platformFaultDomainCount")=>"Int64", Symbol("proximityPlacementGroup")=>"SubResource", Symbol("hostGroup")=>"SubResource", Symbol("additionalCapabilities")=>"AdditionalCapabilities", Symbol("scaleInPolicy")=>"ScaleInPolicy", )
OpenAPI.property_type(::Type{ VirtualMachineScaleSetProperties }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_VirtualMachineScaleSetProperties[name]))}

function check_required(o::VirtualMachineScaleSetProperties)
    true
end

function OpenAPI.validate_property(::Type{ VirtualMachineScaleSetProperties }, name::Symbol, val)
    if name === Symbol("platformFaultDomainCount")
        OpenAPI.validate_param(name, "VirtualMachineScaleSetProperties", :format, val, "int32")
    end
end
