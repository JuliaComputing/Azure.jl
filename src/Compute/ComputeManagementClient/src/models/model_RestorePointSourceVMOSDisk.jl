# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""RestorePointSourceVMOSDisk
Describes an Operating System disk.

    RestorePointSourceVMOSDisk(;
        osType=nothing,
        encryptionSettings=nothing,
        name=nothing,
        caching=nothing,
        diskSizeGB=nothing,
        managedDisk=nothing,
        diskRestorePoint=nothing,
    )

    - osType::String : Gets the Operating System type.
    - encryptionSettings::DiskEncryptionSettings
    - name::String : Gets the disk name.
    - caching::Caching
    - diskSizeGB::Int64 : Gets the disk size in GB.
    - managedDisk::ManagedDiskParameters
    - diskRestorePoint::ApiEntityReference
"""
Base.@kwdef mutable struct RestorePointSourceVMOSDisk <: OpenAPI.APIModel
    osType::Union{Nothing, String} = nothing
    encryptionSettings = nothing # spec type: Union{ Nothing, DiskEncryptionSettings }
    name::Union{Nothing, String} = nothing
    caching = nothing # spec type: Union{ Nothing, Caching }
    diskSizeGB::Union{Nothing, Int64} = nothing
    managedDisk = nothing # spec type: Union{ Nothing, ManagedDiskParameters }
    diskRestorePoint = nothing # spec type: Union{ Nothing, ApiEntityReference }

    function RestorePointSourceVMOSDisk(osType, encryptionSettings, name, caching, diskSizeGB, managedDisk, diskRestorePoint, )
        o = new(osType, encryptionSettings, name, caching, diskSizeGB, managedDisk, diskRestorePoint, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type RestorePointSourceVMOSDisk

const _property_types_RestorePointSourceVMOSDisk = Dict{Symbol,String}(Symbol("osType")=>"String", Symbol("encryptionSettings")=>"DiskEncryptionSettings", Symbol("name")=>"String", Symbol("caching")=>"Caching", Symbol("diskSizeGB")=>"Int64", Symbol("managedDisk")=>"ManagedDiskParameters", Symbol("diskRestorePoint")=>"ApiEntityReference", )
OpenAPI.property_type(::Type{ RestorePointSourceVMOSDisk }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_RestorePointSourceVMOSDisk[name]))}

function OpenAPI.check_required(o::RestorePointSourceVMOSDisk)
    true
end

function OpenAPI.validate_properties(o::RestorePointSourceVMOSDisk)
    OpenAPI.validate_property(RestorePointSourceVMOSDisk, Symbol("osType"), o.osType)
    OpenAPI.validate_property(RestorePointSourceVMOSDisk, Symbol("encryptionSettings"), o.encryptionSettings)
    OpenAPI.validate_property(RestorePointSourceVMOSDisk, Symbol("name"), o.name)
    OpenAPI.validate_property(RestorePointSourceVMOSDisk, Symbol("caching"), o.caching)
    OpenAPI.validate_property(RestorePointSourceVMOSDisk, Symbol("diskSizeGB"), o.diskSizeGB)
    OpenAPI.validate_property(RestorePointSourceVMOSDisk, Symbol("managedDisk"), o.managedDisk)
    OpenAPI.validate_property(RestorePointSourceVMOSDisk, Symbol("diskRestorePoint"), o.diskRestorePoint)
end

function OpenAPI.validate_property(::Type{ RestorePointSourceVMOSDisk }, name::Symbol, val)

    if name === Symbol("osType")
        OpenAPI.validate_param(name, "RestorePointSourceVMOSDisk", :enum, val, ["Windows", "Linux"])
    end





    if name === Symbol("diskSizeGB")
        OpenAPI.validate_param(name, "RestorePointSourceVMOSDisk", :format, val, "int32")
    end


end
