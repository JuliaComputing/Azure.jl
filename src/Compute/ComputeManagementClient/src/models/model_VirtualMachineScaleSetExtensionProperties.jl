# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""VirtualMachineScaleSetExtensionProperties
Describes the properties of a Virtual Machine Scale Set Extension.

    VirtualMachineScaleSetExtensionProperties(;
        forceUpdateTag=nothing,
        publisher=nothing,
        type=nothing,
        typeHandlerVersion=nothing,
        autoUpgradeMinorVersion=nothing,
        settings=nothing,
        protectedSettings=nothing,
        provisioningState=nothing,
        provisionAfterExtensions=nothing,
    )

    - forceUpdateTag::String : If a value is provided and is different from the previous value, the extension handler will be forced to update even if the extension configuration has not changed.
    - publisher::String : The name of the extension handler publisher.
    - type::String : Specifies the type of the extension; an example is \&quot;CustomScriptExtension\&quot;.
    - typeHandlerVersion::String : Specifies the version of the script handler.
    - autoUpgradeMinorVersion::Bool : Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
    - settings::Any : Json formatted public settings for the extension.
    - protectedSettings::Any : The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.
    - provisioningState::String : The provisioning state, which only appears in the response.
    - provisionAfterExtensions::Vector{String} : Collection of extension names after which this extension needs to be provisioned.
"""
Base.@kwdef mutable struct VirtualMachineScaleSetExtensionProperties <: OpenAPI.APIModel
    forceUpdateTag::Union{Nothing, String} = nothing
    publisher::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing
    typeHandlerVersion::Union{Nothing, String} = nothing
    autoUpgradeMinorVersion::Union{Nothing, Bool} = nothing
    settings::Union{Nothing, Any} = nothing
    protectedSettings::Union{Nothing, Any} = nothing
    provisioningState::Union{Nothing, String} = nothing
    provisionAfterExtensions::Union{Nothing, Vector{String}} = nothing

    function VirtualMachineScaleSetExtensionProperties(forceUpdateTag, publisher, type, typeHandlerVersion, autoUpgradeMinorVersion, settings, protectedSettings, provisioningState, provisionAfterExtensions, )
        OpenAPI.validate_property(VirtualMachineScaleSetExtensionProperties, Symbol("forceUpdateTag"), forceUpdateTag)
        OpenAPI.validate_property(VirtualMachineScaleSetExtensionProperties, Symbol("publisher"), publisher)
        OpenAPI.validate_property(VirtualMachineScaleSetExtensionProperties, Symbol("type"), type)
        OpenAPI.validate_property(VirtualMachineScaleSetExtensionProperties, Symbol("typeHandlerVersion"), typeHandlerVersion)
        OpenAPI.validate_property(VirtualMachineScaleSetExtensionProperties, Symbol("autoUpgradeMinorVersion"), autoUpgradeMinorVersion)
        OpenAPI.validate_property(VirtualMachineScaleSetExtensionProperties, Symbol("settings"), settings)
        OpenAPI.validate_property(VirtualMachineScaleSetExtensionProperties, Symbol("protectedSettings"), protectedSettings)
        OpenAPI.validate_property(VirtualMachineScaleSetExtensionProperties, Symbol("provisioningState"), provisioningState)
        OpenAPI.validate_property(VirtualMachineScaleSetExtensionProperties, Symbol("provisionAfterExtensions"), provisionAfterExtensions)
        return new(forceUpdateTag, publisher, type, typeHandlerVersion, autoUpgradeMinorVersion, settings, protectedSettings, provisioningState, provisionAfterExtensions, )
    end
end # type VirtualMachineScaleSetExtensionProperties

const _property_types_VirtualMachineScaleSetExtensionProperties = Dict{Symbol,String}(Symbol("forceUpdateTag")=>"String", Symbol("publisher")=>"String", Symbol("type")=>"String", Symbol("typeHandlerVersion")=>"String", Symbol("autoUpgradeMinorVersion")=>"Bool", Symbol("settings")=>"Any", Symbol("protectedSettings")=>"Any", Symbol("provisioningState")=>"String", Symbol("provisionAfterExtensions")=>"Vector{String}", )
OpenAPI.property_type(::Type{ VirtualMachineScaleSetExtensionProperties }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_VirtualMachineScaleSetExtensionProperties[name]))}

function check_required(o::VirtualMachineScaleSetExtensionProperties)
    true
end

function OpenAPI.validate_property(::Type{ VirtualMachineScaleSetExtensionProperties }, name::Symbol, val)
end
