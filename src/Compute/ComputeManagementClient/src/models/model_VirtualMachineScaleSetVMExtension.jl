# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""VirtualMachineScaleSetVMExtension
Describes a VMSS VM Extension.

    VirtualMachineScaleSetVMExtension(;
        name=nothing,
        type=nothing,
        properties=nothing,
        id=nothing,
    )

    - name::String : The name of the extension.
    - type::String : Resource type
    - properties::VirtualMachineExtensionProperties
    - id::String : Resource Id
"""
Base.@kwdef mutable struct VirtualMachineScaleSetVMExtension <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing
    properties = nothing # spec type: Union{ Nothing, VirtualMachineExtensionProperties }
    id::Union{Nothing, String} = nothing

    function VirtualMachineScaleSetVMExtension(name, type, properties, id, )
        o = new(name, type, properties, id, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type VirtualMachineScaleSetVMExtension

const _property_types_VirtualMachineScaleSetVMExtension = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("type")=>"String", Symbol("properties")=>"VirtualMachineExtensionProperties", Symbol("id")=>"String", )
OpenAPI.property_type(::Type{ VirtualMachineScaleSetVMExtension }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_VirtualMachineScaleSetVMExtension[name]))}

function OpenAPI.check_required(o::VirtualMachineScaleSetVMExtension)
    true
end

function OpenAPI.validate_properties(o::VirtualMachineScaleSetVMExtension)
    OpenAPI.validate_property(VirtualMachineScaleSetVMExtension, Symbol("name"), o.name)
    OpenAPI.validate_property(VirtualMachineScaleSetVMExtension, Symbol("type"), o.type)
    OpenAPI.validate_property(VirtualMachineScaleSetVMExtension, Symbol("properties"), o.properties)
    OpenAPI.validate_property(VirtualMachineScaleSetVMExtension, Symbol("id"), o.id)
end

function OpenAPI.validate_property(::Type{ VirtualMachineScaleSetVMExtension }, name::Symbol, val)




end
