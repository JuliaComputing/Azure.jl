# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""VirtualMachineScaleSetVMProperties
Describes the properties of a virtual machine scale set virtual machine.

    VirtualMachineScaleSetVMProperties(;
        latestModelApplied=nothing,
        vmId=nothing,
        instanceView=nothing,
        hardwareProfile=nothing,
        storageProfile=nothing,
        additionalCapabilities=nothing,
        osProfile=nothing,
        securityProfile=nothing,
        networkProfile=nothing,
        networkProfileConfiguration=nothing,
        diagnosticsProfile=nothing,
        availabilitySet=nothing,
        provisioningState=nothing,
        licenseType=nothing,
        modelDefinitionApplied=nothing,
        protectionPolicy=nothing,
    )

    - latestModelApplied::Bool : Specifies whether the latest model has been applied to the virtual machine.
    - vmId::String : Azure VM unique ID.
    - instanceView::VirtualMachineScaleSetVMInstanceView
    - hardwareProfile::HardwareProfile
    - storageProfile::StorageProfile
    - additionalCapabilities::AdditionalCapabilities
    - osProfile::OSProfile
    - securityProfile::SecurityProfile
    - networkProfile::NetworkProfile
    - networkProfileConfiguration::VirtualMachineScaleSetVMNetworkProfileConfiguration
    - diagnosticsProfile::DiagnosticsProfile
    - availabilitySet::SubResource
    - provisioningState::String : The provisioning state, which only appears in the response.
    - licenseType::String : Specifies that the image or disk that is being used was licensed on-premises. This element is only used for images that contain the Windows Server operating system. &lt;br&gt;&lt;br&gt; Possible values are: &lt;br&gt;&lt;br&gt; Windows_Client &lt;br&gt;&lt;br&gt; Windows_Server &lt;br&gt;&lt;br&gt; If this element is included in a request for an update, the value must match the initial value. This value cannot be updated. &lt;br&gt;&lt;br&gt; For more information, see [Azure Hybrid Use Benefit for Windows Server](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-hybrid-use-benefit-licensing?toc&#x3D;%2fazure%2fvirtual-machines%2fwindows%2ftoc.json) &lt;br&gt;&lt;br&gt; Minimum api-version: 2015-06-15
    - modelDefinitionApplied::String : Specifies whether the model applied to the virtual machine is the model of the virtual machine scale set or the customized model for the virtual machine.
    - protectionPolicy::VirtualMachineScaleSetVMProtectionPolicy
"""
Base.@kwdef mutable struct VirtualMachineScaleSetVMProperties <: OpenAPI.APIModel
    latestModelApplied::Union{Nothing, Bool} = nothing
    vmId::Union{Nothing, String} = nothing
    instanceView = nothing # spec type: Union{ Nothing, VirtualMachineScaleSetVMInstanceView }
    hardwareProfile = nothing # spec type: Union{ Nothing, HardwareProfile }
    storageProfile = nothing # spec type: Union{ Nothing, StorageProfile }
    additionalCapabilities = nothing # spec type: Union{ Nothing, AdditionalCapabilities }
    osProfile = nothing # spec type: Union{ Nothing, OSProfile }
    securityProfile = nothing # spec type: Union{ Nothing, SecurityProfile }
    networkProfile = nothing # spec type: Union{ Nothing, NetworkProfile }
    networkProfileConfiguration = nothing # spec type: Union{ Nothing, VirtualMachineScaleSetVMNetworkProfileConfiguration }
    diagnosticsProfile = nothing # spec type: Union{ Nothing, DiagnosticsProfile }
    availabilitySet = nothing # spec type: Union{ Nothing, SubResource }
    provisioningState::Union{Nothing, String} = nothing
    licenseType::Union{Nothing, String} = nothing
    modelDefinitionApplied::Union{Nothing, String} = nothing
    protectionPolicy = nothing # spec type: Union{ Nothing, VirtualMachineScaleSetVMProtectionPolicy }

    function VirtualMachineScaleSetVMProperties(latestModelApplied, vmId, instanceView, hardwareProfile, storageProfile, additionalCapabilities, osProfile, securityProfile, networkProfile, networkProfileConfiguration, diagnosticsProfile, availabilitySet, provisioningState, licenseType, modelDefinitionApplied, protectionPolicy, )
        OpenAPI.validate_property(VirtualMachineScaleSetVMProperties, Symbol("latestModelApplied"), latestModelApplied)
        OpenAPI.validate_property(VirtualMachineScaleSetVMProperties, Symbol("vmId"), vmId)
        OpenAPI.validate_property(VirtualMachineScaleSetVMProperties, Symbol("instanceView"), instanceView)
        OpenAPI.validate_property(VirtualMachineScaleSetVMProperties, Symbol("hardwareProfile"), hardwareProfile)
        OpenAPI.validate_property(VirtualMachineScaleSetVMProperties, Symbol("storageProfile"), storageProfile)
        OpenAPI.validate_property(VirtualMachineScaleSetVMProperties, Symbol("additionalCapabilities"), additionalCapabilities)
        OpenAPI.validate_property(VirtualMachineScaleSetVMProperties, Symbol("osProfile"), osProfile)
        OpenAPI.validate_property(VirtualMachineScaleSetVMProperties, Symbol("securityProfile"), securityProfile)
        OpenAPI.validate_property(VirtualMachineScaleSetVMProperties, Symbol("networkProfile"), networkProfile)
        OpenAPI.validate_property(VirtualMachineScaleSetVMProperties, Symbol("networkProfileConfiguration"), networkProfileConfiguration)
        OpenAPI.validate_property(VirtualMachineScaleSetVMProperties, Symbol("diagnosticsProfile"), diagnosticsProfile)
        OpenAPI.validate_property(VirtualMachineScaleSetVMProperties, Symbol("availabilitySet"), availabilitySet)
        OpenAPI.validate_property(VirtualMachineScaleSetVMProperties, Symbol("provisioningState"), provisioningState)
        OpenAPI.validate_property(VirtualMachineScaleSetVMProperties, Symbol("licenseType"), licenseType)
        OpenAPI.validate_property(VirtualMachineScaleSetVMProperties, Symbol("modelDefinitionApplied"), modelDefinitionApplied)
        OpenAPI.validate_property(VirtualMachineScaleSetVMProperties, Symbol("protectionPolicy"), protectionPolicy)
        return new(latestModelApplied, vmId, instanceView, hardwareProfile, storageProfile, additionalCapabilities, osProfile, securityProfile, networkProfile, networkProfileConfiguration, diagnosticsProfile, availabilitySet, provisioningState, licenseType, modelDefinitionApplied, protectionPolicy, )
    end
end # type VirtualMachineScaleSetVMProperties

const _property_types_VirtualMachineScaleSetVMProperties = Dict{Symbol,String}(Symbol("latestModelApplied")=>"Bool", Symbol("vmId")=>"String", Symbol("instanceView")=>"VirtualMachineScaleSetVMInstanceView", Symbol("hardwareProfile")=>"HardwareProfile", Symbol("storageProfile")=>"StorageProfile", Symbol("additionalCapabilities")=>"AdditionalCapabilities", Symbol("osProfile")=>"OSProfile", Symbol("securityProfile")=>"SecurityProfile", Symbol("networkProfile")=>"NetworkProfile", Symbol("networkProfileConfiguration")=>"VirtualMachineScaleSetVMNetworkProfileConfiguration", Symbol("diagnosticsProfile")=>"DiagnosticsProfile", Symbol("availabilitySet")=>"SubResource", Symbol("provisioningState")=>"String", Symbol("licenseType")=>"String", Symbol("modelDefinitionApplied")=>"String", Symbol("protectionPolicy")=>"VirtualMachineScaleSetVMProtectionPolicy", )
OpenAPI.property_type(::Type{ VirtualMachineScaleSetVMProperties }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_VirtualMachineScaleSetVMProperties[name]))}

function check_required(o::VirtualMachineScaleSetVMProperties)
    true
end

function OpenAPI.validate_property(::Type{ VirtualMachineScaleSetVMProperties }, name::Symbol, val)
end
