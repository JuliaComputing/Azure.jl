# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""VirtualMachineExtensionUpdateProperties
Describes the properties of a Virtual Machine Extension.

    VirtualMachineExtensionUpdateProperties(;
        forceUpdateTag=nothing,
        publisher=nothing,
        type=nothing,
        typeHandlerVersion=nothing,
        autoUpgradeMinorVersion=nothing,
        settings=nothing,
        protectedSettings=nothing,
    )

    - forceUpdateTag::String : How the extension handler should be forced to update even if the extension configuration has not changed.
    - publisher::String : The name of the extension handler publisher.
    - type::String : Specifies the type of the extension; an example is \&quot;CustomScriptExtension\&quot;.
    - typeHandlerVersion::String : Specifies the version of the script handler.
    - autoUpgradeMinorVersion::Bool : Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.
    - settings::Any : Json formatted public settings for the extension.
    - protectedSettings::Any : The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.
"""
Base.@kwdef mutable struct VirtualMachineExtensionUpdateProperties <: OpenAPI.APIModel
    forceUpdateTag::Union{Nothing, String} = nothing
    publisher::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing
    typeHandlerVersion::Union{Nothing, String} = nothing
    autoUpgradeMinorVersion::Union{Nothing, Bool} = nothing
    settings::Union{Nothing, Any} = nothing
    protectedSettings::Union{Nothing, Any} = nothing

    function VirtualMachineExtensionUpdateProperties(forceUpdateTag, publisher, type, typeHandlerVersion, autoUpgradeMinorVersion, settings, protectedSettings, )
        OpenAPI.validate_property(VirtualMachineExtensionUpdateProperties, Symbol("forceUpdateTag"), forceUpdateTag)
        OpenAPI.validate_property(VirtualMachineExtensionUpdateProperties, Symbol("publisher"), publisher)
        OpenAPI.validate_property(VirtualMachineExtensionUpdateProperties, Symbol("type"), type)
        OpenAPI.validate_property(VirtualMachineExtensionUpdateProperties, Symbol("typeHandlerVersion"), typeHandlerVersion)
        OpenAPI.validate_property(VirtualMachineExtensionUpdateProperties, Symbol("autoUpgradeMinorVersion"), autoUpgradeMinorVersion)
        OpenAPI.validate_property(VirtualMachineExtensionUpdateProperties, Symbol("settings"), settings)
        OpenAPI.validate_property(VirtualMachineExtensionUpdateProperties, Symbol("protectedSettings"), protectedSettings)
        return new(forceUpdateTag, publisher, type, typeHandlerVersion, autoUpgradeMinorVersion, settings, protectedSettings, )
    end
end # type VirtualMachineExtensionUpdateProperties

const _property_types_VirtualMachineExtensionUpdateProperties = Dict{Symbol,String}(Symbol("forceUpdateTag")=>"String", Symbol("publisher")=>"String", Symbol("type")=>"String", Symbol("typeHandlerVersion")=>"String", Symbol("autoUpgradeMinorVersion")=>"Bool", Symbol("settings")=>"Any", Symbol("protectedSettings")=>"Any", )
OpenAPI.property_type(::Type{ VirtualMachineExtensionUpdateProperties }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_VirtualMachineExtensionUpdateProperties[name]))}

function check_required(o::VirtualMachineExtensionUpdateProperties)
    true
end

function OpenAPI.validate_property(::Type{ VirtualMachineExtensionUpdateProperties }, name::Symbol, val)
end
