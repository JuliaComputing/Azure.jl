# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""VirtualMachineScaleSetUpdateVMProfile
Describes a virtual machine scale set virtual machine profile.

    VirtualMachineScaleSetUpdateVMProfile(;
        osProfile=nothing,
        storageProfile=nothing,
        networkProfile=nothing,
        securityProfile=nothing,
        diagnosticsProfile=nothing,
        extensionProfile=nothing,
        licenseType=nothing,
        billingProfile=nothing,
        scheduledEventsProfile=nothing,
        userData=nothing,
    )

    - osProfile::VirtualMachineScaleSetUpdateOSProfile
    - storageProfile::VirtualMachineScaleSetUpdateStorageProfile
    - networkProfile::VirtualMachineScaleSetUpdateNetworkProfile
    - securityProfile::SecurityProfile
    - diagnosticsProfile::DiagnosticsProfile
    - extensionProfile::VirtualMachineScaleSetExtensionProfile
    - licenseType::String : The license type, which is for bring your own license scenario.
    - billingProfile::BillingProfile
    - scheduledEventsProfile::ScheduledEventsProfile
    - userData::String : UserData for the VM, which must be base-64 encoded. Customer should not pass any secrets in here. &lt;br&gt;&lt;br&gt;Minimum api-version: 2021-03-01
"""
Base.@kwdef mutable struct VirtualMachineScaleSetUpdateVMProfile <: OpenAPI.APIModel
    osProfile = nothing # spec type: Union{ Nothing, VirtualMachineScaleSetUpdateOSProfile }
    storageProfile = nothing # spec type: Union{ Nothing, VirtualMachineScaleSetUpdateStorageProfile }
    networkProfile = nothing # spec type: Union{ Nothing, VirtualMachineScaleSetUpdateNetworkProfile }
    securityProfile = nothing # spec type: Union{ Nothing, SecurityProfile }
    diagnosticsProfile = nothing # spec type: Union{ Nothing, DiagnosticsProfile }
    extensionProfile = nothing # spec type: Union{ Nothing, VirtualMachineScaleSetExtensionProfile }
    licenseType::Union{Nothing, String} = nothing
    billingProfile = nothing # spec type: Union{ Nothing, BillingProfile }
    scheduledEventsProfile = nothing # spec type: Union{ Nothing, ScheduledEventsProfile }
    userData::Union{Nothing, String} = nothing

    function VirtualMachineScaleSetUpdateVMProfile(osProfile, storageProfile, networkProfile, securityProfile, diagnosticsProfile, extensionProfile, licenseType, billingProfile, scheduledEventsProfile, userData, )
        o = new(osProfile, storageProfile, networkProfile, securityProfile, diagnosticsProfile, extensionProfile, licenseType, billingProfile, scheduledEventsProfile, userData, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type VirtualMachineScaleSetUpdateVMProfile

const _property_types_VirtualMachineScaleSetUpdateVMProfile = Dict{Symbol,String}(Symbol("osProfile")=>"VirtualMachineScaleSetUpdateOSProfile", Symbol("storageProfile")=>"VirtualMachineScaleSetUpdateStorageProfile", Symbol("networkProfile")=>"VirtualMachineScaleSetUpdateNetworkProfile", Symbol("securityProfile")=>"SecurityProfile", Symbol("diagnosticsProfile")=>"DiagnosticsProfile", Symbol("extensionProfile")=>"VirtualMachineScaleSetExtensionProfile", Symbol("licenseType")=>"String", Symbol("billingProfile")=>"BillingProfile", Symbol("scheduledEventsProfile")=>"ScheduledEventsProfile", Symbol("userData")=>"String", )
OpenAPI.property_type(::Type{ VirtualMachineScaleSetUpdateVMProfile }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_VirtualMachineScaleSetUpdateVMProfile[name]))}

function OpenAPI.check_required(o::VirtualMachineScaleSetUpdateVMProfile)
    true
end

function OpenAPI.validate_properties(o::VirtualMachineScaleSetUpdateVMProfile)
    OpenAPI.validate_property(VirtualMachineScaleSetUpdateVMProfile, Symbol("osProfile"), o.osProfile)
    OpenAPI.validate_property(VirtualMachineScaleSetUpdateVMProfile, Symbol("storageProfile"), o.storageProfile)
    OpenAPI.validate_property(VirtualMachineScaleSetUpdateVMProfile, Symbol("networkProfile"), o.networkProfile)
    OpenAPI.validate_property(VirtualMachineScaleSetUpdateVMProfile, Symbol("securityProfile"), o.securityProfile)
    OpenAPI.validate_property(VirtualMachineScaleSetUpdateVMProfile, Symbol("diagnosticsProfile"), o.diagnosticsProfile)
    OpenAPI.validate_property(VirtualMachineScaleSetUpdateVMProfile, Symbol("extensionProfile"), o.extensionProfile)
    OpenAPI.validate_property(VirtualMachineScaleSetUpdateVMProfile, Symbol("licenseType"), o.licenseType)
    OpenAPI.validate_property(VirtualMachineScaleSetUpdateVMProfile, Symbol("billingProfile"), o.billingProfile)
    OpenAPI.validate_property(VirtualMachineScaleSetUpdateVMProfile, Symbol("scheduledEventsProfile"), o.scheduledEventsProfile)
    OpenAPI.validate_property(VirtualMachineScaleSetUpdateVMProfile, Symbol("userData"), o.userData)
end

function OpenAPI.validate_property(::Type{ VirtualMachineScaleSetUpdateVMProfile }, name::Symbol, val)










end
