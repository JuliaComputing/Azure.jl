# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""DedicatedHostGroupUpdate
Specifies information about the dedicated host group that the dedicated host should be assigned to. Only tags may be updated.

    DedicatedHostGroupUpdate(;
        properties=nothing,
        zones=nothing,
        tags=nothing,
    )

    - properties::DedicatedHostGroupProperties
    - zones::Vector{String} : Availability Zone to use for this host group. Only single zone is supported. The zone can be assigned only during creation. If not provided, the group supports all zones in the region. If provided, enforces each host in the group to be in the same zone.
    - tags::Dict{String, String} : Resource tags
"""
Base.@kwdef mutable struct DedicatedHostGroupUpdate <: OpenAPI.APIModel
    properties = nothing # spec type: Union{ Nothing, DedicatedHostGroupProperties }
    zones::Union{Nothing, Vector{String}} = nothing
    tags::Union{Nothing, Dict{String, String}} = nothing

    function DedicatedHostGroupUpdate(properties, zones, tags, )
        OpenAPI.validate_property(DedicatedHostGroupUpdate, Symbol("properties"), properties)
        OpenAPI.validate_property(DedicatedHostGroupUpdate, Symbol("zones"), zones)
        OpenAPI.validate_property(DedicatedHostGroupUpdate, Symbol("tags"), tags)
        return new(properties, zones, tags, )
    end
end # type DedicatedHostGroupUpdate

const _property_types_DedicatedHostGroupUpdate = Dict{Symbol,String}(Symbol("properties")=>"DedicatedHostGroupProperties", Symbol("zones")=>"Vector{String}", Symbol("tags")=>"Dict{String, String}", )
OpenAPI.property_type(::Type{ DedicatedHostGroupUpdate }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DedicatedHostGroupUpdate[name]))}

function check_required(o::DedicatedHostGroupUpdate)
    true
end

function OpenAPI.validate_property(::Type{ DedicatedHostGroupUpdate }, name::Symbol, val)
end
