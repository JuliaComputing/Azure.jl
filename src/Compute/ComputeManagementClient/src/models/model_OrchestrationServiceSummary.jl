# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""OrchestrationServiceSummary
Summary for an orchestration service of a virtual machine scale set.

    OrchestrationServiceSummary(;
        serviceName=nothing,
        serviceState=nothing,
    )

    - serviceName::String : The name of the service.
    - serviceState::String : The current state of the service.
"""
Base.@kwdef mutable struct OrchestrationServiceSummary <: OpenAPI.APIModel
    serviceName::Union{Nothing, String} = nothing
    serviceState::Union{Nothing, String} = nothing

    function OrchestrationServiceSummary(serviceName, serviceState, )
        OpenAPI.validate_property(OrchestrationServiceSummary, Symbol("serviceName"), serviceName)
        OpenAPI.validate_property(OrchestrationServiceSummary, Symbol("serviceState"), serviceState)
        return new(serviceName, serviceState, )
    end
end # type OrchestrationServiceSummary

const _property_types_OrchestrationServiceSummary = Dict{Symbol,String}(Symbol("serviceName")=>"String", Symbol("serviceState")=>"String", )
OpenAPI.property_type(::Type{ OrchestrationServiceSummary }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_OrchestrationServiceSummary[name]))}

function check_required(o::OrchestrationServiceSummary)
    true
end

function OpenAPI.validate_property(::Type{ OrchestrationServiceSummary }, name::Symbol, val)
    if name === Symbol("serviceName")
        OpenAPI.validate_param(name, "OrchestrationServiceSummary", :enum, val, ["AutomaticRepairs"])
    end
    if name === Symbol("serviceState")
        OpenAPI.validate_param(name, "OrchestrationServiceSummary", :enum, val, ["NotRunning", "Running", "Suspended"])
    end
end
