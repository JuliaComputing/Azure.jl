# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""RestorePointSourceMetadata
Describes the properties of the Virtual Machine for which the restore point was created. The properties provided are a subset and the snapshot of the overall Virtual Machine properties captured at the time of the restore point creation.

    RestorePointSourceMetadata(;
        hardwareProfile=nothing,
        storageProfile=nothing,
        osProfile=nothing,
        diagnosticsProfile=nothing,
        licenseType=nothing,
        vmId=nothing,
        securityProfile=nothing,
        location=nothing,
    )

    - hardwareProfile::HardwareProfile
    - storageProfile::RestorePointSourceVMStorageProfile
    - osProfile::OSProfile
    - diagnosticsProfile::DiagnosticsProfile
    - licenseType::String : Gets the license type, which is for bring your own license scenario.
    - vmId::String : Gets the virtual machine unique id.
    - securityProfile::SecurityProfile
    - location::String : Location of the VM from which the restore point was created.
"""
Base.@kwdef mutable struct RestorePointSourceMetadata <: OpenAPI.APIModel
    hardwareProfile = nothing # spec type: Union{ Nothing, HardwareProfile }
    storageProfile = nothing # spec type: Union{ Nothing, RestorePointSourceVMStorageProfile }
    osProfile = nothing # spec type: Union{ Nothing, OSProfile }
    diagnosticsProfile = nothing # spec type: Union{ Nothing, DiagnosticsProfile }
    licenseType::Union{Nothing, String} = nothing
    vmId::Union{Nothing, String} = nothing
    securityProfile = nothing # spec type: Union{ Nothing, SecurityProfile }
    location::Union{Nothing, String} = nothing

    function RestorePointSourceMetadata(hardwareProfile, storageProfile, osProfile, diagnosticsProfile, licenseType, vmId, securityProfile, location, )
        o = new(hardwareProfile, storageProfile, osProfile, diagnosticsProfile, licenseType, vmId, securityProfile, location, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type RestorePointSourceMetadata

const _property_types_RestorePointSourceMetadata = Dict{Symbol,String}(Symbol("hardwareProfile")=>"HardwareProfile", Symbol("storageProfile")=>"RestorePointSourceVMStorageProfile", Symbol("osProfile")=>"OSProfile", Symbol("diagnosticsProfile")=>"DiagnosticsProfile", Symbol("licenseType")=>"String", Symbol("vmId")=>"String", Symbol("securityProfile")=>"SecurityProfile", Symbol("location")=>"String", )
OpenAPI.property_type(::Type{ RestorePointSourceMetadata }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_RestorePointSourceMetadata[name]))}

function OpenAPI.check_required(o::RestorePointSourceMetadata)
    true
end

function OpenAPI.validate_properties(o::RestorePointSourceMetadata)
    OpenAPI.validate_property(RestorePointSourceMetadata, Symbol("hardwareProfile"), o.hardwareProfile)
    OpenAPI.validate_property(RestorePointSourceMetadata, Symbol("storageProfile"), o.storageProfile)
    OpenAPI.validate_property(RestorePointSourceMetadata, Symbol("osProfile"), o.osProfile)
    OpenAPI.validate_property(RestorePointSourceMetadata, Symbol("diagnosticsProfile"), o.diagnosticsProfile)
    OpenAPI.validate_property(RestorePointSourceMetadata, Symbol("licenseType"), o.licenseType)
    OpenAPI.validate_property(RestorePointSourceMetadata, Symbol("vmId"), o.vmId)
    OpenAPI.validate_property(RestorePointSourceMetadata, Symbol("securityProfile"), o.securityProfile)
    OpenAPI.validate_property(RestorePointSourceMetadata, Symbol("location"), o.location)
end

function OpenAPI.validate_property(::Type{ RestorePointSourceMetadata }, name::Symbol, val)








end
