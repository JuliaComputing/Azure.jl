# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ImageStorageProfile
Describes a storage profile.

    ImageStorageProfile(;
        osDisk=nothing,
        dataDisks=nothing,
        zoneResilient=nothing,
    )

    - osDisk::ImageOSDisk
    - dataDisks::Vector{ImageDataDisk} : Specifies the parameters that are used to add a data disk to a virtual machine. &lt;br&gt;&lt;br&gt; For more information about disks, see [About disks and VHDs for Azure virtual machines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc&#x3D;%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).
    - zoneResilient::Bool : Specifies whether an image is zone resilient or not. Default is false. Zone resilient images can be created only in regions that provide Zone Redundant Storage (ZRS).
"""
Base.@kwdef mutable struct ImageStorageProfile <: OpenAPI.APIModel
    osDisk = nothing # spec type: Union{ Nothing, ImageOSDisk }
    dataDisks::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{ImageDataDisk} }
    zoneResilient::Union{Nothing, Bool} = nothing

    function ImageStorageProfile(osDisk, dataDisks, zoneResilient, )
        OpenAPI.validate_property(ImageStorageProfile, Symbol("osDisk"), osDisk)
        OpenAPI.validate_property(ImageStorageProfile, Symbol("dataDisks"), dataDisks)
        OpenAPI.validate_property(ImageStorageProfile, Symbol("zoneResilient"), zoneResilient)
        return new(osDisk, dataDisks, zoneResilient, )
    end
end # type ImageStorageProfile

const _property_types_ImageStorageProfile = Dict{Symbol,String}(Symbol("osDisk")=>"ImageOSDisk", Symbol("dataDisks")=>"Vector{ImageDataDisk}", Symbol("zoneResilient")=>"Bool", )
OpenAPI.property_type(::Type{ ImageStorageProfile }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ImageStorageProfile[name]))}

function check_required(o::ImageStorageProfile)
    true
end

function OpenAPI.validate_property(::Type{ ImageStorageProfile }, name::Symbol, val)
end
