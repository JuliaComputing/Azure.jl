# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""WindowsParameters
Input for InstallPatches on a Windows VM, as directly received by the API

    WindowsParameters(;
        classificationsToInclude=nothing,
        kbNumbersToInclude=nothing,
        kbNumbersToExclude=nothing,
        excludeKbsRequiringReboot=nothing,
        maxPatchPublishDate=nothing,
    )

    - classificationsToInclude::Vector{String} : The update classifications to select when installing patches for Windows.
    - kbNumbersToInclude::Vector{String} : Kbs to include in the patch operation
    - kbNumbersToExclude::Vector{String} : Kbs to exclude in the patch operation
    - excludeKbsRequiringReboot::Bool : Filters out Kbs that don&#39;t have an InstallationRebootBehavior of &#39;NeverReboots&#39; when this is set to true.
    - maxPatchPublishDate::ZonedDateTime : This is used to install patches that were published on or before this given max published date.
"""
Base.@kwdef mutable struct WindowsParameters <: OpenAPI.APIModel
    classificationsToInclude::Union{Nothing, Vector{String}} = nothing
    kbNumbersToInclude::Union{Nothing, Vector{String}} = nothing
    kbNumbersToExclude::Union{Nothing, Vector{String}} = nothing
    excludeKbsRequiringReboot::Union{Nothing, Bool} = nothing
    maxPatchPublishDate::Union{Nothing, ZonedDateTime} = nothing

    function WindowsParameters(classificationsToInclude, kbNumbersToInclude, kbNumbersToExclude, excludeKbsRequiringReboot, maxPatchPublishDate, )
        o = new(classificationsToInclude, kbNumbersToInclude, kbNumbersToExclude, excludeKbsRequiringReboot, maxPatchPublishDate, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type WindowsParameters

const _property_types_WindowsParameters = Dict{Symbol,String}(Symbol("classificationsToInclude")=>"Vector{String}", Symbol("kbNumbersToInclude")=>"Vector{String}", Symbol("kbNumbersToExclude")=>"Vector{String}", Symbol("excludeKbsRequiringReboot")=>"Bool", Symbol("maxPatchPublishDate")=>"ZonedDateTime", )
OpenAPI.property_type(::Type{ WindowsParameters }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_WindowsParameters[name]))}

function OpenAPI.check_required(o::WindowsParameters)
    true
end

function OpenAPI.validate_properties(o::WindowsParameters)
    OpenAPI.validate_property(WindowsParameters, Symbol("classificationsToInclude"), o.classificationsToInclude)
    OpenAPI.validate_property(WindowsParameters, Symbol("kbNumbersToInclude"), o.kbNumbersToInclude)
    OpenAPI.validate_property(WindowsParameters, Symbol("kbNumbersToExclude"), o.kbNumbersToExclude)
    OpenAPI.validate_property(WindowsParameters, Symbol("excludeKbsRequiringReboot"), o.excludeKbsRequiringReboot)
    OpenAPI.validate_property(WindowsParameters, Symbol("maxPatchPublishDate"), o.maxPatchPublishDate)
end

function OpenAPI.validate_property(::Type{ WindowsParameters }, name::Symbol, val)

    if name === Symbol("classificationsToInclude")
        OpenAPI.validate_param(name, "WindowsParameters", :enum, val, ["Critical", "Security", "UpdateRollUp", "FeaturePack", "ServicePack", "Definition", "Tools", "Updates"])
    end





    if name === Symbol("maxPatchPublishDate")
        OpenAPI.validate_param(name, "WindowsParameters", :format, val, "date-time")
    end
end
