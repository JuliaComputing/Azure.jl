# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""VirtualMachineInstallPatchesParameters
Input for InstallPatches as directly received by the API

    VirtualMachineInstallPatchesParameters(;
        maximumDuration=nothing,
        rebootSetting=nothing,
        windowsParameters=nothing,
        linuxParameters=nothing,
    )

    - maximumDuration::String : Specifies the maximum amount of time that the operation will run. It must be an ISO 8601-compliant duration string such as PT4H (4 hours)
    - rebootSetting::String : Defines when it is acceptable to reboot a VM during a software update operation.
    - windowsParameters::WindowsParameters
    - linuxParameters::LinuxParameters
"""
Base.@kwdef mutable struct VirtualMachineInstallPatchesParameters <: OpenAPI.APIModel
    maximumDuration::Union{Nothing, String} = nothing
    rebootSetting::Union{Nothing, String} = nothing
    windowsParameters = nothing # spec type: Union{ Nothing, WindowsParameters }
    linuxParameters = nothing # spec type: Union{ Nothing, LinuxParameters }

    function VirtualMachineInstallPatchesParameters(maximumDuration, rebootSetting, windowsParameters, linuxParameters, )
        o = new(maximumDuration, rebootSetting, windowsParameters, linuxParameters, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type VirtualMachineInstallPatchesParameters

const _property_types_VirtualMachineInstallPatchesParameters = Dict{Symbol,String}(Symbol("maximumDuration")=>"String", Symbol("rebootSetting")=>"String", Symbol("windowsParameters")=>"WindowsParameters", Symbol("linuxParameters")=>"LinuxParameters", )
OpenAPI.property_type(::Type{ VirtualMachineInstallPatchesParameters }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_VirtualMachineInstallPatchesParameters[name]))}

function OpenAPI.check_required(o::VirtualMachineInstallPatchesParameters)
    o.rebootSetting === nothing && (return false)
    true
end

function OpenAPI.validate_properties(o::VirtualMachineInstallPatchesParameters)
    OpenAPI.validate_property(VirtualMachineInstallPatchesParameters, Symbol("maximumDuration"), o.maximumDuration)
    OpenAPI.validate_property(VirtualMachineInstallPatchesParameters, Symbol("rebootSetting"), o.rebootSetting)
    OpenAPI.validate_property(VirtualMachineInstallPatchesParameters, Symbol("windowsParameters"), o.windowsParameters)
    OpenAPI.validate_property(VirtualMachineInstallPatchesParameters, Symbol("linuxParameters"), o.linuxParameters)
end

function OpenAPI.validate_property(::Type{ VirtualMachineInstallPatchesParameters }, name::Symbol, val)


    if name === Symbol("rebootSetting")
        OpenAPI.validate_param(name, "VirtualMachineInstallPatchesParameters", :enum, val, ["IfRequired", "Never", "Always"])
    end



end
