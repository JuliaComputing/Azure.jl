# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""CapacityReservationGroup
Specifies information about the capacity reservation group that the capacity reservations should be assigned to. &lt;br&gt;&lt;br&gt; Currently, a capacity reservation can only be added to a capacity reservation group at creation time. An existing capacity reservation cannot be added or moved to another capacity reservation group.

    CapacityReservationGroup(;
        properties=nothing,
        zones=nothing,
        id=nothing,
        name=nothing,
        type=nothing,
        location=nothing,
        tags=nothing,
    )

    - properties::CapacityReservationGroupProperties
    - zones::Vector{String} : Availability Zones to use for this capacity reservation group. The zones can be assigned only during creation. If not provided, the group supports only regional resources in the region. If provided, enforces each capacity reservation in the group to be in one of the zones.
    - id::String : Resource Id
    - name::String : Resource name
    - type::String : Resource type
    - location::String : Resource location
    - tags::Dict{String, String} : Resource tags
"""
Base.@kwdef mutable struct CapacityReservationGroup <: OpenAPI.APIModel
    properties = nothing # spec type: Union{ Nothing, CapacityReservationGroupProperties }
    zones::Union{Nothing, Vector{String}} = nothing
    id::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing
    location::Union{Nothing, String} = nothing
    tags::Union{Nothing, Dict{String, String}} = nothing

    function CapacityReservationGroup(properties, zones, id, name, type, location, tags, )
        o = new(properties, zones, id, name, type, location, tags, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type CapacityReservationGroup

const _property_types_CapacityReservationGroup = Dict{Symbol,String}(Symbol("properties")=>"CapacityReservationGroupProperties", Symbol("zones")=>"Vector{String}", Symbol("id")=>"String", Symbol("name")=>"String", Symbol("type")=>"String", Symbol("location")=>"String", Symbol("tags")=>"Dict{String, String}", )
OpenAPI.property_type(::Type{ CapacityReservationGroup }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CapacityReservationGroup[name]))}

function OpenAPI.check_required(o::CapacityReservationGroup)
    o.location === nothing && (return false)
    true
end

function OpenAPI.validate_properties(o::CapacityReservationGroup)
    OpenAPI.validate_property(CapacityReservationGroup, Symbol("properties"), o.properties)
    OpenAPI.validate_property(CapacityReservationGroup, Symbol("zones"), o.zones)
    OpenAPI.validate_property(CapacityReservationGroup, Symbol("id"), o.id)
    OpenAPI.validate_property(CapacityReservationGroup, Symbol("name"), o.name)
    OpenAPI.validate_property(CapacityReservationGroup, Symbol("type"), o.type)
    OpenAPI.validate_property(CapacityReservationGroup, Symbol("location"), o.location)
    OpenAPI.validate_property(CapacityReservationGroup, Symbol("tags"), o.tags)
end

function OpenAPI.validate_property(::Type{ CapacityReservationGroup }, name::Symbol, val)







end
