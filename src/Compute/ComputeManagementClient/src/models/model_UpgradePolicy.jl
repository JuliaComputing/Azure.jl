# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""UpgradePolicy
Describes an upgrade policy - automatic, manual, or rolling.

    UpgradePolicy(;
        mode=nothing,
        rollingUpgradePolicy=nothing,
        automaticOSUpgradePolicy=nothing,
    )

    - mode::String : Specifies the mode of an upgrade to virtual machines in the scale set.&lt;br /&gt;&lt;br /&gt; Possible values are:&lt;br /&gt;&lt;br /&gt; **Manual** - You  control the application of updates to virtual machines in the scale set. You do this by using the manualUpgrade action.&lt;br /&gt;&lt;br /&gt; **Automatic** - All virtual machines in the scale set are  automatically updated at the same time.
    - rollingUpgradePolicy::RollingUpgradePolicy
    - automaticOSUpgradePolicy::AutomaticOSUpgradePolicy
"""
Base.@kwdef mutable struct UpgradePolicy <: OpenAPI.APIModel
    mode::Union{Nothing, String} = nothing
    rollingUpgradePolicy = nothing # spec type: Union{ Nothing, RollingUpgradePolicy }
    automaticOSUpgradePolicy = nothing # spec type: Union{ Nothing, AutomaticOSUpgradePolicy }

    function UpgradePolicy(mode, rollingUpgradePolicy, automaticOSUpgradePolicy, )
        o = new(mode, rollingUpgradePolicy, automaticOSUpgradePolicy, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type UpgradePolicy

const _property_types_UpgradePolicy = Dict{Symbol,String}(Symbol("mode")=>"String", Symbol("rollingUpgradePolicy")=>"RollingUpgradePolicy", Symbol("automaticOSUpgradePolicy")=>"AutomaticOSUpgradePolicy", )
OpenAPI.property_type(::Type{ UpgradePolicy }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_UpgradePolicy[name]))}

function OpenAPI.check_required(o::UpgradePolicy)
    true
end

function OpenAPI.validate_properties(o::UpgradePolicy)
    OpenAPI.validate_property(UpgradePolicy, Symbol("mode"), o.mode)
    OpenAPI.validate_property(UpgradePolicy, Symbol("rollingUpgradePolicy"), o.rollingUpgradePolicy)
    OpenAPI.validate_property(UpgradePolicy, Symbol("automaticOSUpgradePolicy"), o.automaticOSUpgradePolicy)
end

function OpenAPI.validate_property(::Type{ UpgradePolicy }, name::Symbol, val)

    if name === Symbol("mode")
        OpenAPI.validate_param(name, "UpgradePolicy", :enum, val, ["Automatic", "Manual", "Rolling"])
    end



end
