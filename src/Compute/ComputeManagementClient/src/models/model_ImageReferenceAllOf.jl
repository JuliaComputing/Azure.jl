# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ImageReference_allOf

    ImageReferenceAllOf(;
        publisher=nothing,
        offer=nothing,
        sku=nothing,
        version=nothing,
        exactVersion=nothing,
    )

    - publisher::String : The image publisher.
    - offer::String : Specifies the offer of the platform image or marketplace image used to create the virtual machine.
    - sku::String : The image SKU.
    - version::String : Specifies the version of the platform image or marketplace image used to create the virtual machine. The allowed formats are Major.Minor.Build or &#39;latest&#39;. Major, Minor, and Build are decimal numbers. Specify &#39;latest&#39; to use the latest version of an image available at deploy time. Even if you use &#39;latest&#39;, the VM image will not automatically update after deploy time even if a new version becomes available.
    - exactVersion::String : Specifies in decimal numbers, the version of platform image or marketplace image used to create the virtual machine. This readonly field differs from &#39;version&#39;, only if the value specified in &#39;version&#39; field is &#39;latest&#39;.
"""
Base.@kwdef mutable struct ImageReferenceAllOf <: OpenAPI.APIModel
    publisher::Union{Nothing, String} = nothing
    offer::Union{Nothing, String} = nothing
    sku::Union{Nothing, String} = nothing
    version::Union{Nothing, String} = nothing
    exactVersion::Union{Nothing, String} = nothing

    function ImageReferenceAllOf(publisher, offer, sku, version, exactVersion, )
        OpenAPI.validate_property(ImageReferenceAllOf, Symbol("publisher"), publisher)
        OpenAPI.validate_property(ImageReferenceAllOf, Symbol("offer"), offer)
        OpenAPI.validate_property(ImageReferenceAllOf, Symbol("sku"), sku)
        OpenAPI.validate_property(ImageReferenceAllOf, Symbol("version"), version)
        OpenAPI.validate_property(ImageReferenceAllOf, Symbol("exactVersion"), exactVersion)
        return new(publisher, offer, sku, version, exactVersion, )
    end
end # type ImageReferenceAllOf

const _property_types_ImageReferenceAllOf = Dict{Symbol,String}(Symbol("publisher")=>"String", Symbol("offer")=>"String", Symbol("sku")=>"String", Symbol("version")=>"String", Symbol("exactVersion")=>"String", )
OpenAPI.property_type(::Type{ ImageReferenceAllOf }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ImageReferenceAllOf[name]))}

function check_required(o::ImageReferenceAllOf)
    true
end

function OpenAPI.validate_property(::Type{ ImageReferenceAllOf }, name::Symbol, val)
end
