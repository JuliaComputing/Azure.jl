# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""LastPatchInstallationSummary
Describes the properties of the last installed patch summary.

    LastPatchInstallationSummary(;
        status=nothing,
        installationActivityId=nothing,
        maintenanceWindowExceeded=nothing,
        notSelectedPatchCount=nothing,
        excludedPatchCount=nothing,
        pendingPatchCount=nothing,
        installedPatchCount=nothing,
        failedPatchCount=nothing,
        startTime=nothing,
        lastModifiedTime=nothing,
        error=nothing,
    )

    - status::String : The overall success or failure status of the operation. It remains \&quot;InProgress\&quot; until the operation completes. At that point it will become \&quot;Unknown\&quot;, \&quot;Failed\&quot;, \&quot;Succeeded\&quot;, or \&quot;CompletedWithWarnings.\&quot;
    - installationActivityId::String : The activity ID of the operation that produced this result. It is used to correlate across CRP and extension logs.
    - maintenanceWindowExceeded::Bool : Describes whether the operation ran out of time before it completed all its intended actions
    - notSelectedPatchCount::Int64 : The number of all available patches but not going to be installed because it didn&#39;t match a classification or inclusion list entry.
    - excludedPatchCount::Int64 : The number of all available patches but excluded explicitly by a customer-specified exclusion list match.
    - pendingPatchCount::Int64 : The number of all available patches expected to be installed over the course of the patch installation operation.
    - installedPatchCount::Int64 : The count of patches that successfully installed.
    - failedPatchCount::Int64 : The count of patches that failed installation.
    - startTime::ZonedDateTime : The UTC timestamp when the operation began.
    - lastModifiedTime::ZonedDateTime : The UTC timestamp when the operation began.
    - error::ApiError
"""
Base.@kwdef mutable struct LastPatchInstallationSummary <: OpenAPI.APIModel
    status::Union{Nothing, String} = nothing
    installationActivityId::Union{Nothing, String} = nothing
    maintenanceWindowExceeded::Union{Nothing, Bool} = nothing
    notSelectedPatchCount::Union{Nothing, Int64} = nothing
    excludedPatchCount::Union{Nothing, Int64} = nothing
    pendingPatchCount::Union{Nothing, Int64} = nothing
    installedPatchCount::Union{Nothing, Int64} = nothing
    failedPatchCount::Union{Nothing, Int64} = nothing
    startTime::Union{Nothing, ZonedDateTime} = nothing
    lastModifiedTime::Union{Nothing, ZonedDateTime} = nothing
    error = nothing # spec type: Union{ Nothing, ApiError }

    function LastPatchInstallationSummary(status, installationActivityId, maintenanceWindowExceeded, notSelectedPatchCount, excludedPatchCount, pendingPatchCount, installedPatchCount, failedPatchCount, startTime, lastModifiedTime, error, )
        o = new(status, installationActivityId, maintenanceWindowExceeded, notSelectedPatchCount, excludedPatchCount, pendingPatchCount, installedPatchCount, failedPatchCount, startTime, lastModifiedTime, error, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type LastPatchInstallationSummary

const _property_types_LastPatchInstallationSummary = Dict{Symbol,String}(Symbol("status")=>"String", Symbol("installationActivityId")=>"String", Symbol("maintenanceWindowExceeded")=>"Bool", Symbol("notSelectedPatchCount")=>"Int64", Symbol("excludedPatchCount")=>"Int64", Symbol("pendingPatchCount")=>"Int64", Symbol("installedPatchCount")=>"Int64", Symbol("failedPatchCount")=>"Int64", Symbol("startTime")=>"ZonedDateTime", Symbol("lastModifiedTime")=>"ZonedDateTime", Symbol("error")=>"ApiError", )
OpenAPI.property_type(::Type{ LastPatchInstallationSummary }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_LastPatchInstallationSummary[name]))}

function OpenAPI.check_required(o::LastPatchInstallationSummary)
    true
end

function OpenAPI.validate_properties(o::LastPatchInstallationSummary)
    OpenAPI.validate_property(LastPatchInstallationSummary, Symbol("status"), o.status)
    OpenAPI.validate_property(LastPatchInstallationSummary, Symbol("installationActivityId"), o.installationActivityId)
    OpenAPI.validate_property(LastPatchInstallationSummary, Symbol("maintenanceWindowExceeded"), o.maintenanceWindowExceeded)
    OpenAPI.validate_property(LastPatchInstallationSummary, Symbol("notSelectedPatchCount"), o.notSelectedPatchCount)
    OpenAPI.validate_property(LastPatchInstallationSummary, Symbol("excludedPatchCount"), o.excludedPatchCount)
    OpenAPI.validate_property(LastPatchInstallationSummary, Symbol("pendingPatchCount"), o.pendingPatchCount)
    OpenAPI.validate_property(LastPatchInstallationSummary, Symbol("installedPatchCount"), o.installedPatchCount)
    OpenAPI.validate_property(LastPatchInstallationSummary, Symbol("failedPatchCount"), o.failedPatchCount)
    OpenAPI.validate_property(LastPatchInstallationSummary, Symbol("startTime"), o.startTime)
    OpenAPI.validate_property(LastPatchInstallationSummary, Symbol("lastModifiedTime"), o.lastModifiedTime)
    OpenAPI.validate_property(LastPatchInstallationSummary, Symbol("error"), o.error)
end

function OpenAPI.validate_property(::Type{ LastPatchInstallationSummary }, name::Symbol, val)

    if name === Symbol("status")
        OpenAPI.validate_param(name, "LastPatchInstallationSummary", :enum, val, ["Unknown", "InProgress", "Failed", "Succeeded", "CompletedWithWarnings"])
    end




    if name === Symbol("notSelectedPatchCount")
        OpenAPI.validate_param(name, "LastPatchInstallationSummary", :format, val, "int32")
    end

    if name === Symbol("excludedPatchCount")
        OpenAPI.validate_param(name, "LastPatchInstallationSummary", :format, val, "int32")
    end

    if name === Symbol("pendingPatchCount")
        OpenAPI.validate_param(name, "LastPatchInstallationSummary", :format, val, "int32")
    end

    if name === Symbol("installedPatchCount")
        OpenAPI.validate_param(name, "LastPatchInstallationSummary", :format, val, "int32")
    end

    if name === Symbol("failedPatchCount")
        OpenAPI.validate_param(name, "LastPatchInstallationSummary", :format, val, "int32")
    end

    if name === Symbol("startTime")
        OpenAPI.validate_param(name, "LastPatchInstallationSummary", :format, val, "date-time")
    end

    if name === Symbol("lastModifiedTime")
        OpenAPI.validate_param(name, "LastPatchInstallationSummary", :format, val, "date-time")
    end

end
