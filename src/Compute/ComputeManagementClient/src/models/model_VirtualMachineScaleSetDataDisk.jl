# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""VirtualMachineScaleSetDataDisk
Describes a virtual machine scale set data disk.

    VirtualMachineScaleSetDataDisk(;
        name=nothing,
        lun=nothing,
        caching=nothing,
        writeAcceleratorEnabled=nothing,
        createOption=nothing,
        diskSizeGB=nothing,
        managedDisk=nothing,
        diskIOPSReadWrite=nothing,
        diskMBpsReadWrite=nothing,
    )

    - name::String : The disk name.
    - lun::Int64 : Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.
    - caching::Caching
    - writeAcceleratorEnabled::Bool : Specifies whether writeAccelerator should be enabled or disabled on the disk.
    - createOption::CreateOption
    - diskSizeGB::Int64 : Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. &lt;br&gt;&lt;br&gt; This value cannot be larger than 1023 GB
    - managedDisk::VirtualMachineScaleSetManagedDiskParameters
    - diskIOPSReadWrite::Int64 : Specifies the Read-Write IOPS for the managed disk. Should be used only when StorageAccountType is UltraSSD_LRS. If not specified, a default value would be assigned based on diskSizeGB.
    - diskMBpsReadWrite::Int64 : Specifies the bandwidth in MB per second for the managed disk. Should be used only when StorageAccountType is UltraSSD_LRS. If not specified, a default value would be assigned based on diskSizeGB.
"""
Base.@kwdef mutable struct VirtualMachineScaleSetDataDisk <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    lun::Union{Nothing, Int64} = nothing
    caching = nothing # spec type: Union{ Nothing, Caching }
    writeAcceleratorEnabled::Union{Nothing, Bool} = nothing
    createOption = nothing # spec type: Union{ Nothing, CreateOption }
    diskSizeGB::Union{Nothing, Int64} = nothing
    managedDisk = nothing # spec type: Union{ Nothing, VirtualMachineScaleSetManagedDiskParameters }
    diskIOPSReadWrite::Union{Nothing, Int64} = nothing
    diskMBpsReadWrite::Union{Nothing, Int64} = nothing

    function VirtualMachineScaleSetDataDisk(name, lun, caching, writeAcceleratorEnabled, createOption, diskSizeGB, managedDisk, diskIOPSReadWrite, diskMBpsReadWrite, )
        o = new(name, lun, caching, writeAcceleratorEnabled, createOption, diskSizeGB, managedDisk, diskIOPSReadWrite, diskMBpsReadWrite, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type VirtualMachineScaleSetDataDisk

const _property_types_VirtualMachineScaleSetDataDisk = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("lun")=>"Int64", Symbol("caching")=>"Caching", Symbol("writeAcceleratorEnabled")=>"Bool", Symbol("createOption")=>"CreateOption", Symbol("diskSizeGB")=>"Int64", Symbol("managedDisk")=>"VirtualMachineScaleSetManagedDiskParameters", Symbol("diskIOPSReadWrite")=>"Int64", Symbol("diskMBpsReadWrite")=>"Int64", )
OpenAPI.property_type(::Type{ VirtualMachineScaleSetDataDisk }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_VirtualMachineScaleSetDataDisk[name]))}

function OpenAPI.check_required(o::VirtualMachineScaleSetDataDisk)
    o.lun === nothing && (return false)
    o.createOption === nothing && (return false)
    true
end

function OpenAPI.validate_properties(o::VirtualMachineScaleSetDataDisk)
    OpenAPI.validate_property(VirtualMachineScaleSetDataDisk, Symbol("name"), o.name)
    OpenAPI.validate_property(VirtualMachineScaleSetDataDisk, Symbol("lun"), o.lun)
    OpenAPI.validate_property(VirtualMachineScaleSetDataDisk, Symbol("caching"), o.caching)
    OpenAPI.validate_property(VirtualMachineScaleSetDataDisk, Symbol("writeAcceleratorEnabled"), o.writeAcceleratorEnabled)
    OpenAPI.validate_property(VirtualMachineScaleSetDataDisk, Symbol("createOption"), o.createOption)
    OpenAPI.validate_property(VirtualMachineScaleSetDataDisk, Symbol("diskSizeGB"), o.diskSizeGB)
    OpenAPI.validate_property(VirtualMachineScaleSetDataDisk, Symbol("managedDisk"), o.managedDisk)
    OpenAPI.validate_property(VirtualMachineScaleSetDataDisk, Symbol("diskIOPSReadWrite"), o.diskIOPSReadWrite)
    OpenAPI.validate_property(VirtualMachineScaleSetDataDisk, Symbol("diskMBpsReadWrite"), o.diskMBpsReadWrite)
end

function OpenAPI.validate_property(::Type{ VirtualMachineScaleSetDataDisk }, name::Symbol, val)


    if name === Symbol("lun")
        OpenAPI.validate_param(name, "VirtualMachineScaleSetDataDisk", :format, val, "int32")
    end




    if name === Symbol("diskSizeGB")
        OpenAPI.validate_param(name, "VirtualMachineScaleSetDataDisk", :format, val, "int32")
    end


    if name === Symbol("diskIOPSReadWrite")
        OpenAPI.validate_param(name, "VirtualMachineScaleSetDataDisk", :format, val, "int64")
    end

    if name === Symbol("diskMBpsReadWrite")
        OpenAPI.validate_param(name, "VirtualMachineScaleSetDataDisk", :format, val, "int64")
    end
end
