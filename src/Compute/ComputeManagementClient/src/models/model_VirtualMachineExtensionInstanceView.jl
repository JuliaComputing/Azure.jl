# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""VirtualMachineExtensionInstanceView
The instance view of a virtual machine extension.

    VirtualMachineExtensionInstanceView(;
        name=nothing,
        type=nothing,
        typeHandlerVersion=nothing,
        substatuses=nothing,
        statuses=nothing,
    )

    - name::String : The virtual machine extension name.
    - type::String : Specifies the type of the extension; an example is \&quot;CustomScriptExtension\&quot;.
    - typeHandlerVersion::String : Specifies the version of the script handler.
    - substatuses::Vector{InstanceViewStatus} : The resource status information.
    - statuses::Vector{InstanceViewStatus} : The resource status information.
"""
Base.@kwdef mutable struct VirtualMachineExtensionInstanceView <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing
    typeHandlerVersion::Union{Nothing, String} = nothing
    substatuses::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{InstanceViewStatus} }
    statuses::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{InstanceViewStatus} }

    function VirtualMachineExtensionInstanceView(name, type, typeHandlerVersion, substatuses, statuses, )
        OpenAPI.validate_property(VirtualMachineExtensionInstanceView, Symbol("name"), name)
        OpenAPI.validate_property(VirtualMachineExtensionInstanceView, Symbol("type"), type)
        OpenAPI.validate_property(VirtualMachineExtensionInstanceView, Symbol("typeHandlerVersion"), typeHandlerVersion)
        OpenAPI.validate_property(VirtualMachineExtensionInstanceView, Symbol("substatuses"), substatuses)
        OpenAPI.validate_property(VirtualMachineExtensionInstanceView, Symbol("statuses"), statuses)
        return new(name, type, typeHandlerVersion, substatuses, statuses, )
    end
end # type VirtualMachineExtensionInstanceView

const _property_types_VirtualMachineExtensionInstanceView = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("type")=>"String", Symbol("typeHandlerVersion")=>"String", Symbol("substatuses")=>"Vector{InstanceViewStatus}", Symbol("statuses")=>"Vector{InstanceViewStatus}", )
OpenAPI.property_type(::Type{ VirtualMachineExtensionInstanceView }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_VirtualMachineExtensionInstanceView[name]))}

function check_required(o::VirtualMachineExtensionInstanceView)
    true
end

function OpenAPI.validate_property(::Type{ VirtualMachineExtensionInstanceView }, name::Symbol, val)
end
