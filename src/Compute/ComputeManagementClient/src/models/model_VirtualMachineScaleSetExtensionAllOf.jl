# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""VirtualMachineScaleSetExtension_allOf

    VirtualMachineScaleSetExtensionAllOf(;
        name=nothing,
        type=nothing,
        properties=nothing,
    )

    - name::String : The name of the extension.
    - type::String : Resource type
    - properties::VirtualMachineScaleSetExtensionProperties
"""
Base.@kwdef mutable struct VirtualMachineScaleSetExtensionAllOf <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing
    properties = nothing # spec type: Union{ Nothing, VirtualMachineScaleSetExtensionProperties }

    function VirtualMachineScaleSetExtensionAllOf(name, type, properties, )
        OpenAPI.validate_property(VirtualMachineScaleSetExtensionAllOf, Symbol("name"), name)
        OpenAPI.validate_property(VirtualMachineScaleSetExtensionAllOf, Symbol("type"), type)
        OpenAPI.validate_property(VirtualMachineScaleSetExtensionAllOf, Symbol("properties"), properties)
        return new(name, type, properties, )
    end
end # type VirtualMachineScaleSetExtensionAllOf

const _property_types_VirtualMachineScaleSetExtensionAllOf = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("type")=>"String", Symbol("properties")=>"VirtualMachineScaleSetExtensionProperties", )
OpenAPI.property_type(::Type{ VirtualMachineScaleSetExtensionAllOf }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_VirtualMachineScaleSetExtensionAllOf[name]))}

function check_required(o::VirtualMachineScaleSetExtensionAllOf)
    true
end

function OpenAPI.validate_property(::Type{ VirtualMachineScaleSetExtensionAllOf }, name::Symbol, val)
end
