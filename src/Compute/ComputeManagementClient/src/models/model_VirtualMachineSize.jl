# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""VirtualMachineSize
Describes the properties of a VM size.

    VirtualMachineSize(;
        name=nothing,
        numberOfCores=nothing,
        osDiskSizeInMB=nothing,
        resourceDiskSizeInMB=nothing,
        memoryInMB=nothing,
        maxDataDiskCount=nothing,
    )

    - name::String : The name of the virtual machine size.
    - numberOfCores::Int64 : The number of cores supported by the virtual machine size.
    - osDiskSizeInMB::Int64 : The OS disk size, in MB, allowed by the virtual machine size.
    - resourceDiskSizeInMB::Int64 : The resource disk size, in MB, allowed by the virtual machine size.
    - memoryInMB::Int64 : The amount of memory, in MB, supported by the virtual machine size.
    - maxDataDiskCount::Int64 : The maximum number of data disks that can be attached to the virtual machine size.
"""
Base.@kwdef mutable struct VirtualMachineSize <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    numberOfCores::Union{Nothing, Int64} = nothing
    osDiskSizeInMB::Union{Nothing, Int64} = nothing
    resourceDiskSizeInMB::Union{Nothing, Int64} = nothing
    memoryInMB::Union{Nothing, Int64} = nothing
    maxDataDiskCount::Union{Nothing, Int64} = nothing

    function VirtualMachineSize(name, numberOfCores, osDiskSizeInMB, resourceDiskSizeInMB, memoryInMB, maxDataDiskCount, )
        OpenAPI.validate_property(VirtualMachineSize, Symbol("name"), name)
        OpenAPI.validate_property(VirtualMachineSize, Symbol("numberOfCores"), numberOfCores)
        OpenAPI.validate_property(VirtualMachineSize, Symbol("osDiskSizeInMB"), osDiskSizeInMB)
        OpenAPI.validate_property(VirtualMachineSize, Symbol("resourceDiskSizeInMB"), resourceDiskSizeInMB)
        OpenAPI.validate_property(VirtualMachineSize, Symbol("memoryInMB"), memoryInMB)
        OpenAPI.validate_property(VirtualMachineSize, Symbol("maxDataDiskCount"), maxDataDiskCount)
        return new(name, numberOfCores, osDiskSizeInMB, resourceDiskSizeInMB, memoryInMB, maxDataDiskCount, )
    end
end # type VirtualMachineSize

const _property_types_VirtualMachineSize = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("numberOfCores")=>"Int64", Symbol("osDiskSizeInMB")=>"Int64", Symbol("resourceDiskSizeInMB")=>"Int64", Symbol("memoryInMB")=>"Int64", Symbol("maxDataDiskCount")=>"Int64", )
OpenAPI.property_type(::Type{ VirtualMachineSize }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_VirtualMachineSize[name]))}

function check_required(o::VirtualMachineSize)
    true
end

function OpenAPI.validate_property(::Type{ VirtualMachineSize }, name::Symbol, val)
    if name === Symbol("numberOfCores")
        OpenAPI.validate_param(name, "VirtualMachineSize", :format, val, "int32")
    end
    if name === Symbol("osDiskSizeInMB")
        OpenAPI.validate_param(name, "VirtualMachineSize", :format, val, "int32")
    end
    if name === Symbol("resourceDiskSizeInMB")
        OpenAPI.validate_param(name, "VirtualMachineSize", :format, val, "int32")
    end
    if name === Symbol("memoryInMB")
        OpenAPI.validate_param(name, "VirtualMachineSize", :format, val, "int32")
    end
    if name === Symbol("maxDataDiskCount")
        OpenAPI.validate_param(name, "VirtualMachineSize", :format, val, "int32")
    end
end
