# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ManagedDiskParameters
The parameters of a managed disk.

    ManagedDiskParameters(;
        id=nothing,
        storageAccountType=nothing,
        diskEncryptionSet=nothing,
    )

    - id::String : Resource Id
    - storageAccountType::StorageAccountType
    - diskEncryptionSet::DiskEncryptionSetParameters
"""
Base.@kwdef mutable struct ManagedDiskParameters <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    storageAccountType = nothing # spec type: Union{ Nothing, StorageAccountType }
    diskEncryptionSet = nothing # spec type: Union{ Nothing, DiskEncryptionSetParameters }

    function ManagedDiskParameters(id, storageAccountType, diskEncryptionSet, )
        OpenAPI.validate_property(ManagedDiskParameters, Symbol("id"), id)
        OpenAPI.validate_property(ManagedDiskParameters, Symbol("storageAccountType"), storageAccountType)
        OpenAPI.validate_property(ManagedDiskParameters, Symbol("diskEncryptionSet"), diskEncryptionSet)
        return new(id, storageAccountType, diskEncryptionSet, )
    end
end # type ManagedDiskParameters

const _property_types_ManagedDiskParameters = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("storageAccountType")=>"StorageAccountType", Symbol("diskEncryptionSet")=>"DiskEncryptionSetParameters", )
OpenAPI.property_type(::Type{ ManagedDiskParameters }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ManagedDiskParameters[name]))}

function check_required(o::ManagedDiskParameters)
    true
end

function OpenAPI.validate_property(::Type{ ManagedDiskParameters }, name::Symbol, val)
end
