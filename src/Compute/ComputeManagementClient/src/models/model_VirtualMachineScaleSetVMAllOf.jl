# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""VirtualMachineScaleSetVM_allOf

    VirtualMachineScaleSetVMAllOf(;
        instanceId=nothing,
        sku=nothing,
        properties=nothing,
        plan=nothing,
        resources=nothing,
        zones=nothing,
    )

    - instanceId::String : The virtual machine instance ID.
    - sku::Sku
    - properties::VirtualMachineScaleSetVMProperties
    - plan::Plan
    - resources::Vector{VirtualMachineExtension} : The virtual machine child extension resources.
    - zones::Vector{String} : The virtual machine zones.
"""
Base.@kwdef mutable struct VirtualMachineScaleSetVMAllOf <: OpenAPI.APIModel
    instanceId::Union{Nothing, String} = nothing
    sku = nothing # spec type: Union{ Nothing, Sku }
    properties = nothing # spec type: Union{ Nothing, VirtualMachineScaleSetVMProperties }
    plan = nothing # spec type: Union{ Nothing, Plan }
    resources::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{VirtualMachineExtension} }
    zones::Union{Nothing, Vector{String}} = nothing

    function VirtualMachineScaleSetVMAllOf(instanceId, sku, properties, plan, resources, zones, )
        OpenAPI.validate_property(VirtualMachineScaleSetVMAllOf, Symbol("instanceId"), instanceId)
        OpenAPI.validate_property(VirtualMachineScaleSetVMAllOf, Symbol("sku"), sku)
        OpenAPI.validate_property(VirtualMachineScaleSetVMAllOf, Symbol("properties"), properties)
        OpenAPI.validate_property(VirtualMachineScaleSetVMAllOf, Symbol("plan"), plan)
        OpenAPI.validate_property(VirtualMachineScaleSetVMAllOf, Symbol("resources"), resources)
        OpenAPI.validate_property(VirtualMachineScaleSetVMAllOf, Symbol("zones"), zones)
        return new(instanceId, sku, properties, plan, resources, zones, )
    end
end # type VirtualMachineScaleSetVMAllOf

const _property_types_VirtualMachineScaleSetVMAllOf = Dict{Symbol,String}(Symbol("instanceId")=>"String", Symbol("sku")=>"Sku", Symbol("properties")=>"VirtualMachineScaleSetVMProperties", Symbol("plan")=>"Plan", Symbol("resources")=>"Vector{VirtualMachineExtension}", Symbol("zones")=>"Vector{String}", )
OpenAPI.property_type(::Type{ VirtualMachineScaleSetVMAllOf }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_VirtualMachineScaleSetVMAllOf[name]))}

function check_required(o::VirtualMachineScaleSetVMAllOf)
    true
end

function OpenAPI.validate_property(::Type{ VirtualMachineScaleSetVMAllOf }, name::Symbol, val)
end
