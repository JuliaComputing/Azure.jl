# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""CapacityReservationProperties
Properties of the Capacity reservation.

    CapacityReservationProperties(;
        reservationId=nothing,
        virtualMachinesAssociated=nothing,
        provisioningTime=nothing,
        provisioningState=nothing,
        instanceView=nothing,
        timeCreated=nothing,
    )

    - reservationId::String : A unique id generated and assigned to the capacity reservation by the platform which does not change throughout the lifetime of the resource.
    - virtualMachinesAssociated::Vector{SubResourceReadOnly} : A list of all virtual machine resource ids that are associated with the capacity reservation.
    - provisioningTime::ZonedDateTime : The date time when the capacity reservation was last updated.
    - provisioningState::String : The provisioning state, which only appears in the response.
    - instanceView::CapacityReservationInstanceView
    - timeCreated::ZonedDateTime : Specifies the time at which the Capacity Reservation resource was created.&lt;br&gt;&lt;br&gt;Minimum api-version: 2021-11-01.
"""
Base.@kwdef mutable struct CapacityReservationProperties <: OpenAPI.APIModel
    reservationId::Union{Nothing, String} = nothing
    virtualMachinesAssociated::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{SubResourceReadOnly} }
    provisioningTime::Union{Nothing, ZonedDateTime} = nothing
    provisioningState::Union{Nothing, String} = nothing
    instanceView = nothing # spec type: Union{ Nothing, CapacityReservationInstanceView }
    timeCreated::Union{Nothing, ZonedDateTime} = nothing

    function CapacityReservationProperties(reservationId, virtualMachinesAssociated, provisioningTime, provisioningState, instanceView, timeCreated, )
        o = new(reservationId, virtualMachinesAssociated, provisioningTime, provisioningState, instanceView, timeCreated, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type CapacityReservationProperties

const _property_types_CapacityReservationProperties = Dict{Symbol,String}(Symbol("reservationId")=>"String", Symbol("virtualMachinesAssociated")=>"Vector{SubResourceReadOnly}", Symbol("provisioningTime")=>"ZonedDateTime", Symbol("provisioningState")=>"String", Symbol("instanceView")=>"CapacityReservationInstanceView", Symbol("timeCreated")=>"ZonedDateTime", )
OpenAPI.property_type(::Type{ CapacityReservationProperties }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CapacityReservationProperties[name]))}

function OpenAPI.check_required(o::CapacityReservationProperties)
    true
end

function OpenAPI.validate_properties(o::CapacityReservationProperties)
    OpenAPI.validate_property(CapacityReservationProperties, Symbol("reservationId"), o.reservationId)
    OpenAPI.validate_property(CapacityReservationProperties, Symbol("virtualMachinesAssociated"), o.virtualMachinesAssociated)
    OpenAPI.validate_property(CapacityReservationProperties, Symbol("provisioningTime"), o.provisioningTime)
    OpenAPI.validate_property(CapacityReservationProperties, Symbol("provisioningState"), o.provisioningState)
    OpenAPI.validate_property(CapacityReservationProperties, Symbol("instanceView"), o.instanceView)
    OpenAPI.validate_property(CapacityReservationProperties, Symbol("timeCreated"), o.timeCreated)
end

function OpenAPI.validate_property(::Type{ CapacityReservationProperties }, name::Symbol, val)



    if name === Symbol("provisioningTime")
        OpenAPI.validate_param(name, "CapacityReservationProperties", :format, val, "date-time")
    end



    if name === Symbol("timeCreated")
        OpenAPI.validate_param(name, "CapacityReservationProperties", :format, val, "date-time")
    end
end
