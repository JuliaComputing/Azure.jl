# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""VirtualMachineScaleSetOSDisk
Describes a virtual machine scale set operating system disk.

    VirtualMachineScaleSetOSDisk(;
        name=nothing,
        caching=nothing,
        writeAcceleratorEnabled=nothing,
        createOption=nothing,
        diffDiskSettings=nothing,
        diskSizeGB=nothing,
        osType=nothing,
        image=nothing,
        vhdContainers=nothing,
        managedDisk=nothing,
    )

    - name::String : The disk name.
    - caching::Caching
    - writeAcceleratorEnabled::Bool : Specifies whether writeAccelerator should be enabled or disabled on the disk.
    - createOption::CreateOption
    - diffDiskSettings::DiffDiskSettings
    - diskSizeGB::Int64 : Specifies the size of the operating system disk in gigabytes. This element can be used to overwrite the size of the disk in a virtual machine image. &lt;br&gt;&lt;br&gt; This value cannot be larger than 1023 GB
    - osType::String : This property allows you to specify the type of the OS that is included in the disk if creating a VM from user-image or a specialized VHD. &lt;br&gt;&lt;br&gt; Possible values are: &lt;br&gt;&lt;br&gt; **Windows** &lt;br&gt;&lt;br&gt; **Linux**
    - image::VirtualHardDisk
    - vhdContainers::Vector{String} : Specifies the container urls that are used to store operating system disks for the scale set.
    - managedDisk::VirtualMachineScaleSetManagedDiskParameters
"""
Base.@kwdef mutable struct VirtualMachineScaleSetOSDisk <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    caching = nothing # spec type: Union{ Nothing, Caching }
    writeAcceleratorEnabled::Union{Nothing, Bool} = nothing
    createOption = nothing # spec type: Union{ Nothing, CreateOption }
    diffDiskSettings = nothing # spec type: Union{ Nothing, DiffDiskSettings }
    diskSizeGB::Union{Nothing, Int64} = nothing
    osType::Union{Nothing, String} = nothing
    image = nothing # spec type: Union{ Nothing, VirtualHardDisk }
    vhdContainers::Union{Nothing, Vector{String}} = nothing
    managedDisk = nothing # spec type: Union{ Nothing, VirtualMachineScaleSetManagedDiskParameters }

    function VirtualMachineScaleSetOSDisk(name, caching, writeAcceleratorEnabled, createOption, diffDiskSettings, diskSizeGB, osType, image, vhdContainers, managedDisk, )
        o = new(name, caching, writeAcceleratorEnabled, createOption, diffDiskSettings, diskSizeGB, osType, image, vhdContainers, managedDisk, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type VirtualMachineScaleSetOSDisk

const _property_types_VirtualMachineScaleSetOSDisk = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("caching")=>"Caching", Symbol("writeAcceleratorEnabled")=>"Bool", Symbol("createOption")=>"CreateOption", Symbol("diffDiskSettings")=>"DiffDiskSettings", Symbol("diskSizeGB")=>"Int64", Symbol("osType")=>"String", Symbol("image")=>"VirtualHardDisk", Symbol("vhdContainers")=>"Vector{String}", Symbol("managedDisk")=>"VirtualMachineScaleSetManagedDiskParameters", )
OpenAPI.property_type(::Type{ VirtualMachineScaleSetOSDisk }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_VirtualMachineScaleSetOSDisk[name]))}

function OpenAPI.check_required(o::VirtualMachineScaleSetOSDisk)
    o.createOption === nothing && (return false)
    true
end

function OpenAPI.validate_properties(o::VirtualMachineScaleSetOSDisk)
    OpenAPI.validate_property(VirtualMachineScaleSetOSDisk, Symbol("name"), o.name)
    OpenAPI.validate_property(VirtualMachineScaleSetOSDisk, Symbol("caching"), o.caching)
    OpenAPI.validate_property(VirtualMachineScaleSetOSDisk, Symbol("writeAcceleratorEnabled"), o.writeAcceleratorEnabled)
    OpenAPI.validate_property(VirtualMachineScaleSetOSDisk, Symbol("createOption"), o.createOption)
    OpenAPI.validate_property(VirtualMachineScaleSetOSDisk, Symbol("diffDiskSettings"), o.diffDiskSettings)
    OpenAPI.validate_property(VirtualMachineScaleSetOSDisk, Symbol("diskSizeGB"), o.diskSizeGB)
    OpenAPI.validate_property(VirtualMachineScaleSetOSDisk, Symbol("osType"), o.osType)
    OpenAPI.validate_property(VirtualMachineScaleSetOSDisk, Symbol("image"), o.image)
    OpenAPI.validate_property(VirtualMachineScaleSetOSDisk, Symbol("vhdContainers"), o.vhdContainers)
    OpenAPI.validate_property(VirtualMachineScaleSetOSDisk, Symbol("managedDisk"), o.managedDisk)
end

function OpenAPI.validate_property(::Type{ VirtualMachineScaleSetOSDisk }, name::Symbol, val)






    if name === Symbol("diskSizeGB")
        OpenAPI.validate_param(name, "VirtualMachineScaleSetOSDisk", :format, val, "int32")
    end

    if name === Symbol("osType")
        OpenAPI.validate_param(name, "VirtualMachineScaleSetOSDisk", :enum, val, ["Windows", "Linux"])
    end




end
