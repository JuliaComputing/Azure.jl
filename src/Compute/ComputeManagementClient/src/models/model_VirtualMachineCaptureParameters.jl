# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""VirtualMachineCaptureParameters
Capture Virtual Machine parameters.

    VirtualMachineCaptureParameters(;
        vhdPrefix=nothing,
        destinationContainerName=nothing,
        overwriteVhds=nothing,
    )

    - vhdPrefix::String : The captured virtual hard disk&#39;s name prefix.
    - destinationContainerName::String : The destination container name.
    - overwriteVhds::Bool : Specifies whether to overwrite the destination virtual hard disk, in case of conflict.
"""
Base.@kwdef mutable struct VirtualMachineCaptureParameters <: OpenAPI.APIModel
    vhdPrefix::Union{Nothing, String} = nothing
    destinationContainerName::Union{Nothing, String} = nothing
    overwriteVhds::Union{Nothing, Bool} = nothing

    function VirtualMachineCaptureParameters(vhdPrefix, destinationContainerName, overwriteVhds, )
        OpenAPI.validate_property(VirtualMachineCaptureParameters, Symbol("vhdPrefix"), vhdPrefix)
        OpenAPI.validate_property(VirtualMachineCaptureParameters, Symbol("destinationContainerName"), destinationContainerName)
        OpenAPI.validate_property(VirtualMachineCaptureParameters, Symbol("overwriteVhds"), overwriteVhds)
        return new(vhdPrefix, destinationContainerName, overwriteVhds, )
    end
end # type VirtualMachineCaptureParameters

const _property_types_VirtualMachineCaptureParameters = Dict{Symbol,String}(Symbol("vhdPrefix")=>"String", Symbol("destinationContainerName")=>"String", Symbol("overwriteVhds")=>"Bool", )
OpenAPI.property_type(::Type{ VirtualMachineCaptureParameters }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_VirtualMachineCaptureParameters[name]))}

function check_required(o::VirtualMachineCaptureParameters)
    o.vhdPrefix === nothing && (return false)
    o.destinationContainerName === nothing && (return false)
    o.overwriteVhds === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ VirtualMachineCaptureParameters }, name::Symbol, val)
end
