# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""VirtualMachineCaptureResult_allOf

    VirtualMachineCaptureResultAllOf(;
        var"$schema"=nothing,
        contentVersion=nothing,
        parameters=nothing,
        resources=nothing,
    )

    - var"$schema"::String : the schema of the captured virtual machine
    - contentVersion::String : the version of the content
    - parameters::Any : parameters of the captured virtual machine
    - resources::Vector{Any} : a list of resource items of the captured virtual machine
"""
Base.@kwdef mutable struct VirtualMachineCaptureResultAllOf <: OpenAPI.APIModel
    var"$schema"::Union{Nothing, String} = nothing
    contentVersion::Union{Nothing, String} = nothing
    parameters::Union{Nothing, Any} = nothing
    resources::Union{Nothing, Vector{Any}} = nothing

    function VirtualMachineCaptureResultAllOf(var"$schema", contentVersion, parameters, resources, )
        OpenAPI.validate_property(VirtualMachineCaptureResultAllOf, Symbol("\$schema"), var"$schema")
        OpenAPI.validate_property(VirtualMachineCaptureResultAllOf, Symbol("contentVersion"), contentVersion)
        OpenAPI.validate_property(VirtualMachineCaptureResultAllOf, Symbol("parameters"), parameters)
        OpenAPI.validate_property(VirtualMachineCaptureResultAllOf, Symbol("resources"), resources)
        return new(var"$schema", contentVersion, parameters, resources, )
    end
end # type VirtualMachineCaptureResultAllOf

const _property_types_VirtualMachineCaptureResultAllOf = Dict{Symbol,String}(Symbol("\$schema")=>"String", Symbol("contentVersion")=>"String", Symbol("parameters")=>"Any", Symbol("resources")=>"Vector{Any}", )
OpenAPI.property_type(::Type{ VirtualMachineCaptureResultAllOf }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_VirtualMachineCaptureResultAllOf[name]))}

function check_required(o::VirtualMachineCaptureResultAllOf)
    true
end

function OpenAPI.validate_property(::Type{ VirtualMachineCaptureResultAllOf }, name::Symbol, val)
end
