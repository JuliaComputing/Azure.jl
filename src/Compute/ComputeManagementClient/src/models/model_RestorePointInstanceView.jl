# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""RestorePointInstanceView
The instance view of a restore point.

    RestorePointInstanceView(;
        diskRestorePoints=nothing,
        statuses=nothing,
    )

    - diskRestorePoints::Vector{DiskRestorePointInstanceView} : The disk restore points information.
    - statuses::Vector{InstanceViewStatus} : The resource status information.
"""
Base.@kwdef mutable struct RestorePointInstanceView <: OpenAPI.APIModel
    diskRestorePoints::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{DiskRestorePointInstanceView} }
    statuses::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{InstanceViewStatus} }

    function RestorePointInstanceView(diskRestorePoints, statuses, )
        o = new(diskRestorePoints, statuses, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type RestorePointInstanceView

const _property_types_RestorePointInstanceView = Dict{Symbol,String}(Symbol("diskRestorePoints")=>"Vector{DiskRestorePointInstanceView}", Symbol("statuses")=>"Vector{InstanceViewStatus}", )
OpenAPI.property_type(::Type{ RestorePointInstanceView }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_RestorePointInstanceView[name]))}

function OpenAPI.check_required(o::RestorePointInstanceView)
    true
end

function OpenAPI.validate_properties(o::RestorePointInstanceView)
    OpenAPI.validate_property(RestorePointInstanceView, Symbol("diskRestorePoints"), o.diskRestorePoints)
    OpenAPI.validate_property(RestorePointInstanceView, Symbol("statuses"), o.statuses)
end

function OpenAPI.validate_property(::Type{ RestorePointInstanceView }, name::Symbol, val)


end
