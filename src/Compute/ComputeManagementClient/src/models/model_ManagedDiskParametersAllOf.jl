# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ManagedDiskParameters_allOf

    ManagedDiskParametersAllOf(;
        storageAccountType=nothing,
        diskEncryptionSet=nothing,
    )

    - storageAccountType::StorageAccountType
    - diskEncryptionSet::DiskEncryptionSetParameters
"""
Base.@kwdef mutable struct ManagedDiskParametersAllOf <: OpenAPI.APIModel
    storageAccountType = nothing # spec type: Union{ Nothing, StorageAccountType }
    diskEncryptionSet = nothing # spec type: Union{ Nothing, DiskEncryptionSetParameters }

    function ManagedDiskParametersAllOf(storageAccountType, diskEncryptionSet, )
        OpenAPI.validate_property(ManagedDiskParametersAllOf, Symbol("storageAccountType"), storageAccountType)
        OpenAPI.validate_property(ManagedDiskParametersAllOf, Symbol("diskEncryptionSet"), diskEncryptionSet)
        return new(storageAccountType, diskEncryptionSet, )
    end
end # type ManagedDiskParametersAllOf

const _property_types_ManagedDiskParametersAllOf = Dict{Symbol,String}(Symbol("storageAccountType")=>"StorageAccountType", Symbol("diskEncryptionSet")=>"DiskEncryptionSetParameters", )
OpenAPI.property_type(::Type{ ManagedDiskParametersAllOf }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ManagedDiskParametersAllOf[name]))}

function check_required(o::ManagedDiskParametersAllOf)
    true
end

function OpenAPI.validate_property(::Type{ ManagedDiskParametersAllOf }, name::Symbol, val)
end
