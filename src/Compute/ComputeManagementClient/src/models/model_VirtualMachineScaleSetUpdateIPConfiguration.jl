# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""VirtualMachineScaleSetUpdateIPConfiguration
Describes a virtual machine scale set network profile&#39;s IP configuration. NOTE: The subnet of a scale set may be modified as long as the original subnet and the new subnet are in the same virtual network

    VirtualMachineScaleSetUpdateIPConfiguration(;
        name=nothing,
        properties=nothing,
        id=nothing,
    )

    - name::String : The IP configuration name.
    - properties::VirtualMachineScaleSetUpdateIPConfigurationProperties
    - id::String : Resource Id
"""
Base.@kwdef mutable struct VirtualMachineScaleSetUpdateIPConfiguration <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    properties = nothing # spec type: Union{ Nothing, VirtualMachineScaleSetUpdateIPConfigurationProperties }
    id::Union{Nothing, String} = nothing

    function VirtualMachineScaleSetUpdateIPConfiguration(name, properties, id, )
        OpenAPI.validate_property(VirtualMachineScaleSetUpdateIPConfiguration, Symbol("name"), name)
        OpenAPI.validate_property(VirtualMachineScaleSetUpdateIPConfiguration, Symbol("properties"), properties)
        OpenAPI.validate_property(VirtualMachineScaleSetUpdateIPConfiguration, Symbol("id"), id)
        return new(name, properties, id, )
    end
end # type VirtualMachineScaleSetUpdateIPConfiguration

const _property_types_VirtualMachineScaleSetUpdateIPConfiguration = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("properties")=>"VirtualMachineScaleSetUpdateIPConfigurationProperties", Symbol("id")=>"String", )
OpenAPI.property_type(::Type{ VirtualMachineScaleSetUpdateIPConfiguration }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_VirtualMachineScaleSetUpdateIPConfiguration[name]))}

function check_required(o::VirtualMachineScaleSetUpdateIPConfiguration)
    true
end

function OpenAPI.validate_property(::Type{ VirtualMachineScaleSetUpdateIPConfiguration }, name::Symbol, val)
end
