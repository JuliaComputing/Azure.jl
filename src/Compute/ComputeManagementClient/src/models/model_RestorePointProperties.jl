# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""RestorePointProperties
The restore point properties.

    RestorePointProperties(;
        excludeDisks=nothing,
        sourceMetadata=nothing,
        provisioningState=nothing,
        consistencyMode=nothing,
        timeCreated=nothing,
        sourceRestorePoint=nothing,
        instanceView=nothing,
    )

    - excludeDisks::Vector{ApiEntityReference} : List of disk resource ids that the customer wishes to exclude from the restore point. If no disks are specified, all disks will be included.
    - sourceMetadata::RestorePointSourceMetadata
    - provisioningState::String : Gets the provisioning state of the restore point.
    - consistencyMode::String : Gets the consistency mode for the restore point. Please refer to https://aka.ms/RestorePoints for more details.
    - timeCreated::ZonedDateTime : Gets the creation time of the restore point.
    - sourceRestorePoint::ApiEntityReference
    - instanceView::RestorePointInstanceView
"""
Base.@kwdef mutable struct RestorePointProperties <: OpenAPI.APIModel
    excludeDisks::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{ApiEntityReference} }
    sourceMetadata = nothing # spec type: Union{ Nothing, RestorePointSourceMetadata }
    provisioningState::Union{Nothing, String} = nothing
    consistencyMode::Union{Nothing, String} = nothing
    timeCreated::Union{Nothing, ZonedDateTime} = nothing
    sourceRestorePoint = nothing # spec type: Union{ Nothing, ApiEntityReference }
    instanceView = nothing # spec type: Union{ Nothing, RestorePointInstanceView }

    function RestorePointProperties(excludeDisks, sourceMetadata, provisioningState, consistencyMode, timeCreated, sourceRestorePoint, instanceView, )
        o = new(excludeDisks, sourceMetadata, provisioningState, consistencyMode, timeCreated, sourceRestorePoint, instanceView, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type RestorePointProperties

const _property_types_RestorePointProperties = Dict{Symbol,String}(Symbol("excludeDisks")=>"Vector{ApiEntityReference}", Symbol("sourceMetadata")=>"RestorePointSourceMetadata", Symbol("provisioningState")=>"String", Symbol("consistencyMode")=>"String", Symbol("timeCreated")=>"ZonedDateTime", Symbol("sourceRestorePoint")=>"ApiEntityReference", Symbol("instanceView")=>"RestorePointInstanceView", )
OpenAPI.property_type(::Type{ RestorePointProperties }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_RestorePointProperties[name]))}

function OpenAPI.check_required(o::RestorePointProperties)
    true
end

function OpenAPI.validate_properties(o::RestorePointProperties)
    OpenAPI.validate_property(RestorePointProperties, Symbol("excludeDisks"), o.excludeDisks)
    OpenAPI.validate_property(RestorePointProperties, Symbol("sourceMetadata"), o.sourceMetadata)
    OpenAPI.validate_property(RestorePointProperties, Symbol("provisioningState"), o.provisioningState)
    OpenAPI.validate_property(RestorePointProperties, Symbol("consistencyMode"), o.consistencyMode)
    OpenAPI.validate_property(RestorePointProperties, Symbol("timeCreated"), o.timeCreated)
    OpenAPI.validate_property(RestorePointProperties, Symbol("sourceRestorePoint"), o.sourceRestorePoint)
    OpenAPI.validate_property(RestorePointProperties, Symbol("instanceView"), o.instanceView)
end

function OpenAPI.validate_property(::Type{ RestorePointProperties }, name::Symbol, val)




    if name === Symbol("consistencyMode")
        OpenAPI.validate_param(name, "RestorePointProperties", :enum, val, ["CrashConsistent", "FileSystemConsistent", "ApplicationConsistent"])
    end


    if name === Symbol("timeCreated")
        OpenAPI.validate_param(name, "RestorePointProperties", :format, val, "date-time")
    end


end
