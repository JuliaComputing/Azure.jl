# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""DedicatedHostGroup
Specifies information about the dedicated host group that the dedicated hosts should be assigned to. &lt;br&gt;&lt;br&gt; Currently, a dedicated host can only be added to a dedicated host group at creation time. An existing dedicated host cannot be added to another dedicated host group.

    DedicatedHostGroup(;
        properties=nothing,
        zones=nothing,
        id=nothing,
        name=nothing,
        type=nothing,
        location=nothing,
        tags=nothing,
    )

    - properties::DedicatedHostGroupProperties
    - zones::Vector{String} : Availability Zone to use for this host group. Only single zone is supported. The zone can be assigned only during creation. If not provided, the group supports all zones in the region. If provided, enforces each host in the group to be in the same zone.
    - id::String : Resource Id
    - name::String : Resource name
    - type::String : Resource type
    - location::String : Resource location
    - tags::Dict{String, String} : Resource tags
"""
Base.@kwdef mutable struct DedicatedHostGroup <: OpenAPI.APIModel
    properties = nothing # spec type: Union{ Nothing, DedicatedHostGroupProperties }
    zones::Union{Nothing, Vector{String}} = nothing
    id::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing
    location::Union{Nothing, String} = nothing
    tags::Union{Nothing, Dict{String, String}} = nothing

    function DedicatedHostGroup(properties, zones, id, name, type, location, tags, )
        OpenAPI.validate_property(DedicatedHostGroup, Symbol("properties"), properties)
        OpenAPI.validate_property(DedicatedHostGroup, Symbol("zones"), zones)
        OpenAPI.validate_property(DedicatedHostGroup, Symbol("id"), id)
        OpenAPI.validate_property(DedicatedHostGroup, Symbol("name"), name)
        OpenAPI.validate_property(DedicatedHostGroup, Symbol("type"), type)
        OpenAPI.validate_property(DedicatedHostGroup, Symbol("location"), location)
        OpenAPI.validate_property(DedicatedHostGroup, Symbol("tags"), tags)
        return new(properties, zones, id, name, type, location, tags, )
    end
end # type DedicatedHostGroup

const _property_types_DedicatedHostGroup = Dict{Symbol,String}(Symbol("properties")=>"DedicatedHostGroupProperties", Symbol("zones")=>"Vector{String}", Symbol("id")=>"String", Symbol("name")=>"String", Symbol("type")=>"String", Symbol("location")=>"String", Symbol("tags")=>"Dict{String, String}", )
OpenAPI.property_type(::Type{ DedicatedHostGroup }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DedicatedHostGroup[name]))}

function check_required(o::DedicatedHostGroup)
    o.location === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ DedicatedHostGroup }, name::Symbol, val)
end
