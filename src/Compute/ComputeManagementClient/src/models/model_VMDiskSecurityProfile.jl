# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""VMDiskSecurityProfile
Specifies the security profile settings for the managed disk. &lt;br&gt;&lt;br&gt; NOTE: It can only be set for Confidential VMs

    VMDiskSecurityProfile(;
        securityEncryptionType=nothing,
        diskEncryptionSet=nothing,
    )

    - securityEncryptionType::String : Specifies the EncryptionType of the managed disk. &lt;br&gt; It is set to DiskWithVMGuestState for encryption of the managed disk along with VMGuestState blob, and VMGuestStateOnly for encryption of just the VMGuestState blob. &lt;br&gt;&lt;br&gt; NOTE: It can be set for only Confidential VMs.
    - diskEncryptionSet::DiskEncryptionSetParameters
"""
Base.@kwdef mutable struct VMDiskSecurityProfile <: OpenAPI.APIModel
    securityEncryptionType::Union{Nothing, String} = nothing
    diskEncryptionSet = nothing # spec type: Union{ Nothing, DiskEncryptionSetParameters }

    function VMDiskSecurityProfile(securityEncryptionType, diskEncryptionSet, )
        o = new(securityEncryptionType, diskEncryptionSet, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type VMDiskSecurityProfile

const _property_types_VMDiskSecurityProfile = Dict{Symbol,String}(Symbol("securityEncryptionType")=>"String", Symbol("diskEncryptionSet")=>"DiskEncryptionSetParameters", )
OpenAPI.property_type(::Type{ VMDiskSecurityProfile }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_VMDiskSecurityProfile[name]))}

function OpenAPI.check_required(o::VMDiskSecurityProfile)
    true
end

function OpenAPI.validate_properties(o::VMDiskSecurityProfile)
    OpenAPI.validate_property(VMDiskSecurityProfile, Symbol("securityEncryptionType"), o.securityEncryptionType)
    OpenAPI.validate_property(VMDiskSecurityProfile, Symbol("diskEncryptionSet"), o.diskEncryptionSet)
end

function OpenAPI.validate_property(::Type{ VMDiskSecurityProfile }, name::Symbol, val)

    if name === Symbol("securityEncryptionType")
        OpenAPI.validate_param(name, "VMDiskSecurityProfile", :enum, val, ["VMGuestStateOnly", "DiskWithVMGuestState"])
    end


end
