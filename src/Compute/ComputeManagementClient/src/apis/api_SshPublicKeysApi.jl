# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct SshPublicKeysApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `SshPublicKeysApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ SshPublicKeysApi }) = "https://management.azure.com"

const _returntypes_ssh_public_keys_create_SshPublicKeysApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => SshPublicKeyResource,
    Regex("^" * replace("201", "x"=>".") * "\$") => SshPublicKeyResource,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_ssh_public_keys_create(_api::SshPublicKeysApi, resource_group_name::String, ssh_public_key_name::String, api_version::String, subscription_id::String, parameters::SshPublicKeyResource; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_ssh_public_keys_create_SshPublicKeysApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/sshPublicKeys/{sshPublicKeyName}", ["azure_auth", ], parameters)
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "sshPublicKeyName", ssh_public_key_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Creates a new SSH public key resource.

Params:
- resource_group_name::String (required)
- ssh_public_key_name::String (required)
- api_version::String (required)
- subscription_id::String (required)
- parameters::SshPublicKeyResource (required)

Return: SshPublicKeyResource, OpenAPI.Clients.ApiResponse
"""
function ssh_public_keys_create(_api::SshPublicKeysApi, resource_group_name::String, ssh_public_key_name::String, api_version::String, subscription_id::String, parameters::SshPublicKeyResource; _mediaType=nothing)
    _ctx = _oacinternal_ssh_public_keys_create(_api, resource_group_name, ssh_public_key_name, api_version, subscription_id, parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function ssh_public_keys_create(_api::SshPublicKeysApi, response_stream::Channel, resource_group_name::String, ssh_public_key_name::String, api_version::String, subscription_id::String, parameters::SshPublicKeyResource; _mediaType=nothing)
    _ctx = _oacinternal_ssh_public_keys_create(_api, resource_group_name, ssh_public_key_name, api_version, subscription_id, parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_ssh_public_keys_delete_SshPublicKeysApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_ssh_public_keys_delete(_api::SshPublicKeysApi, resource_group_name::String, ssh_public_key_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_ssh_public_keys_delete_SshPublicKeysApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/sshPublicKeys/{sshPublicKeyName}", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "sshPublicKeyName", ssh_public_key_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Delete an SSH public key.

Params:
- resource_group_name::String (required)
- ssh_public_key_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function ssh_public_keys_delete(_api::SshPublicKeysApi, resource_group_name::String, ssh_public_key_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_ssh_public_keys_delete(_api, resource_group_name, ssh_public_key_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function ssh_public_keys_delete(_api::SshPublicKeysApi, response_stream::Channel, resource_group_name::String, ssh_public_key_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_ssh_public_keys_delete(_api, resource_group_name, ssh_public_key_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_ssh_public_keys_generate_key_pair_SshPublicKeysApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => SshPublicKeyGenerateKeyPairResult,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_ssh_public_keys_generate_key_pair(_api::SshPublicKeysApi, resource_group_name::String, ssh_public_key_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_ssh_public_keys_generate_key_pair_SshPublicKeysApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/sshPublicKeys/{sshPublicKeyName}/generateKeyPair", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "sshPublicKeyName", ssh_public_key_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Generates and returns a public/private key pair and populates the SSH public key resource with the public key. The length of the key will be 3072 bits. This operation can only be performed once per SSH public key resource.

Params:
- resource_group_name::String (required)
- ssh_public_key_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: SshPublicKeyGenerateKeyPairResult, OpenAPI.Clients.ApiResponse
"""
function ssh_public_keys_generate_key_pair(_api::SshPublicKeysApi, resource_group_name::String, ssh_public_key_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_ssh_public_keys_generate_key_pair(_api, resource_group_name, ssh_public_key_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function ssh_public_keys_generate_key_pair(_api::SshPublicKeysApi, response_stream::Channel, resource_group_name::String, ssh_public_key_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_ssh_public_keys_generate_key_pair(_api, resource_group_name, ssh_public_key_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_ssh_public_keys_get_SshPublicKeysApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => SshPublicKeyResource,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_ssh_public_keys_get(_api::SshPublicKeysApi, resource_group_name::String, ssh_public_key_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_ssh_public_keys_get_SshPublicKeysApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/sshPublicKeys/{sshPublicKeyName}", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "sshPublicKeyName", ssh_public_key_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieves information about an SSH public key.

Params:
- resource_group_name::String (required)
- ssh_public_key_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: SshPublicKeyResource, OpenAPI.Clients.ApiResponse
"""
function ssh_public_keys_get(_api::SshPublicKeysApi, resource_group_name::String, ssh_public_key_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_ssh_public_keys_get(_api, resource_group_name, ssh_public_key_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function ssh_public_keys_get(_api::SshPublicKeysApi, response_stream::Channel, resource_group_name::String, ssh_public_key_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_ssh_public_keys_get(_api, resource_group_name, ssh_public_key_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_ssh_public_keys_list_by_resource_group_SshPublicKeysApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => SshPublicKeysGroupListResult,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_ssh_public_keys_list_by_resource_group(_api::SshPublicKeysApi, resource_group_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_ssh_public_keys_list_by_resource_group_SshPublicKeysApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/sshPublicKeys", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Lists all of the SSH public keys in the specified resource group. Use the nextLink property in the response to get the next page of SSH public keys.

Params:
- resource_group_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: SshPublicKeysGroupListResult, OpenAPI.Clients.ApiResponse
"""
function ssh_public_keys_list_by_resource_group(_api::SshPublicKeysApi, resource_group_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_ssh_public_keys_list_by_resource_group(_api, resource_group_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function ssh_public_keys_list_by_resource_group(_api::SshPublicKeysApi, response_stream::Channel, resource_group_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_ssh_public_keys_list_by_resource_group(_api, resource_group_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_ssh_public_keys_list_by_subscription_SshPublicKeysApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => SshPublicKeysGroupListResult,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_ssh_public_keys_list_by_subscription(_api::SshPublicKeysApi, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_ssh_public_keys_list_by_subscription_SshPublicKeysApi, "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/sshPublicKeys", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Lists all of the SSH public keys in the subscription. Use the nextLink property in the response to get the next page of SSH public keys.

Params:
- api_version::String (required)
- subscription_id::String (required)

Return: SshPublicKeysGroupListResult, OpenAPI.Clients.ApiResponse
"""
function ssh_public_keys_list_by_subscription(_api::SshPublicKeysApi, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_ssh_public_keys_list_by_subscription(_api, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function ssh_public_keys_list_by_subscription(_api::SshPublicKeysApi, response_stream::Channel, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_ssh_public_keys_list_by_subscription(_api, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_ssh_public_keys_update_SshPublicKeysApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => SshPublicKeyResource,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_ssh_public_keys_update(_api::SshPublicKeysApi, resource_group_name::String, ssh_public_key_name::String, api_version::String, subscription_id::String, parameters::SshPublicKeyUpdateResource; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PATCH", _returntypes_ssh_public_keys_update_SshPublicKeysApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/sshPublicKeys/{sshPublicKeyName}", ["azure_auth", ], parameters)
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "sshPublicKeyName", ssh_public_key_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Updates a new SSH public key resource.

Params:
- resource_group_name::String (required)
- ssh_public_key_name::String (required)
- api_version::String (required)
- subscription_id::String (required)
- parameters::SshPublicKeyUpdateResource (required)

Return: SshPublicKeyResource, OpenAPI.Clients.ApiResponse
"""
function ssh_public_keys_update(_api::SshPublicKeysApi, resource_group_name::String, ssh_public_key_name::String, api_version::String, subscription_id::String, parameters::SshPublicKeyUpdateResource; _mediaType=nothing)
    _ctx = _oacinternal_ssh_public_keys_update(_api, resource_group_name, ssh_public_key_name, api_version, subscription_id, parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function ssh_public_keys_update(_api::SshPublicKeysApi, response_stream::Channel, resource_group_name::String, ssh_public_key_name::String, api_version::String, subscription_id::String, parameters::SshPublicKeyUpdateResource; _mediaType=nothing)
    _ctx = _oacinternal_ssh_public_keys_update(_api, resource_group_name, ssh_public_key_name, api_version, subscription_id, parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export ssh_public_keys_create
export ssh_public_keys_delete
export ssh_public_keys_generate_key_pair
export ssh_public_keys_get
export ssh_public_keys_list_by_resource_group
export ssh_public_keys_list_by_subscription
export ssh_public_keys_update
