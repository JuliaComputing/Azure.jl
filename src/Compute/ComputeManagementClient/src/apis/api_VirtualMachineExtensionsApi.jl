# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct VirtualMachineExtensionsApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `VirtualMachineExtensionsApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ VirtualMachineExtensionsApi }) = "https://management.azure.com"

const _returntypes_virtual_machine_extensions_create_or_update_VirtualMachineExtensionsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => VirtualMachineExtension,
    Regex("^" * replace("201", "x"=>".") * "\$") => VirtualMachineExtension,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_virtual_machine_extensions_create_or_update(_api::VirtualMachineExtensionsApi, resource_group_name::String, vm_name::String, vm_extension_name::String, api_version::String, subscription_id::String, extension_parameters::VirtualMachineExtension; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_virtual_machine_extensions_create_or_update_VirtualMachineExtensionsApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}", ["azure_auth", ], extension_parameters)
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "vmName", vm_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "vmExtensionName", vm_extension_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""The operation to create or update the extension.

Params:
- resource_group_name::String (required)
- vm_name::String (required)
- vm_extension_name::String (required)
- api_version::String (required)
- subscription_id::String (required)
- extension_parameters::VirtualMachineExtension (required)

Return: VirtualMachineExtension, OpenAPI.Clients.ApiResponse
"""
function virtual_machine_extensions_create_or_update(_api::VirtualMachineExtensionsApi, resource_group_name::String, vm_name::String, vm_extension_name::String, api_version::String, subscription_id::String, extension_parameters::VirtualMachineExtension; _mediaType=nothing)
    _ctx = _oacinternal_virtual_machine_extensions_create_or_update(_api, resource_group_name, vm_name, vm_extension_name, api_version, subscription_id, extension_parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function virtual_machine_extensions_create_or_update(_api::VirtualMachineExtensionsApi, response_stream::Channel, resource_group_name::String, vm_name::String, vm_extension_name::String, api_version::String, subscription_id::String, extension_parameters::VirtualMachineExtension; _mediaType=nothing)
    _ctx = _oacinternal_virtual_machine_extensions_create_or_update(_api, resource_group_name, vm_name, vm_extension_name, api_version, subscription_id, extension_parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_virtual_machine_extensions_delete_VirtualMachineExtensionsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("202", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_virtual_machine_extensions_delete(_api::VirtualMachineExtensionsApi, resource_group_name::String, vm_name::String, vm_extension_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_virtual_machine_extensions_delete_VirtualMachineExtensionsApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "vmName", vm_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "vmExtensionName", vm_extension_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""The operation to delete the extension.

Params:
- resource_group_name::String (required)
- vm_name::String (required)
- vm_extension_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function virtual_machine_extensions_delete(_api::VirtualMachineExtensionsApi, resource_group_name::String, vm_name::String, vm_extension_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_virtual_machine_extensions_delete(_api, resource_group_name, vm_name, vm_extension_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function virtual_machine_extensions_delete(_api::VirtualMachineExtensionsApi, response_stream::Channel, resource_group_name::String, vm_name::String, vm_extension_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_virtual_machine_extensions_delete(_api, resource_group_name, vm_name, vm_extension_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_virtual_machine_extensions_get_VirtualMachineExtensionsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => VirtualMachineExtension,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_virtual_machine_extensions_get(_api::VirtualMachineExtensionsApi, resource_group_name::String, vm_name::String, vm_extension_name::String, api_version::String, subscription_id::String; expand=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_virtual_machine_extensions_get_VirtualMachineExtensionsApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "vmName", vm_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "vmExtensionName", vm_extension_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "\$expand", expand; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""The operation to get the extension.

Params:
- resource_group_name::String (required)
- vm_name::String (required)
- vm_extension_name::String (required)
- api_version::String (required)
- subscription_id::String (required)
- expand::String

Return: VirtualMachineExtension, OpenAPI.Clients.ApiResponse
"""
function virtual_machine_extensions_get(_api::VirtualMachineExtensionsApi, resource_group_name::String, vm_name::String, vm_extension_name::String, api_version::String, subscription_id::String; expand=nothing, _mediaType=nothing)
    _ctx = _oacinternal_virtual_machine_extensions_get(_api, resource_group_name, vm_name, vm_extension_name, api_version, subscription_id; expand=expand, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function virtual_machine_extensions_get(_api::VirtualMachineExtensionsApi, response_stream::Channel, resource_group_name::String, vm_name::String, vm_extension_name::String, api_version::String, subscription_id::String; expand=nothing, _mediaType=nothing)
    _ctx = _oacinternal_virtual_machine_extensions_get(_api, resource_group_name, vm_name, vm_extension_name, api_version, subscription_id; expand=expand, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_virtual_machine_extensions_list_VirtualMachineExtensionsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => VirtualMachineExtensionsListResult,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_virtual_machine_extensions_list(_api::VirtualMachineExtensionsApi, resource_group_name::String, vm_name::String, api_version::String, subscription_id::String; expand=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_virtual_machine_extensions_list_VirtualMachineExtensionsApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "vmName", vm_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "\$expand", expand; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""The operation to get all extensions of a Virtual Machine.

Params:
- resource_group_name::String (required)
- vm_name::String (required)
- api_version::String (required)
- subscription_id::String (required)
- expand::String

Return: VirtualMachineExtensionsListResult, OpenAPI.Clients.ApiResponse
"""
function virtual_machine_extensions_list(_api::VirtualMachineExtensionsApi, resource_group_name::String, vm_name::String, api_version::String, subscription_id::String; expand=nothing, _mediaType=nothing)
    _ctx = _oacinternal_virtual_machine_extensions_list(_api, resource_group_name, vm_name, api_version, subscription_id; expand=expand, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function virtual_machine_extensions_list(_api::VirtualMachineExtensionsApi, response_stream::Channel, resource_group_name::String, vm_name::String, api_version::String, subscription_id::String; expand=nothing, _mediaType=nothing)
    _ctx = _oacinternal_virtual_machine_extensions_list(_api, resource_group_name, vm_name, api_version, subscription_id; expand=expand, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_virtual_machine_extensions_update_VirtualMachineExtensionsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => VirtualMachineExtension,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_virtual_machine_extensions_update(_api::VirtualMachineExtensionsApi, resource_group_name::String, vm_name::String, vm_extension_name::String, api_version::String, subscription_id::String, extension_parameters::VirtualMachineExtensionUpdate; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PATCH", _returntypes_virtual_machine_extensions_update_VirtualMachineExtensionsApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachines/{vmName}/extensions/{vmExtensionName}", ["azure_auth", ], extension_parameters)
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "vmName", vm_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "vmExtensionName", vm_extension_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""The operation to update the extension.

Params:
- resource_group_name::String (required)
- vm_name::String (required)
- vm_extension_name::String (required)
- api_version::String (required)
- subscription_id::String (required)
- extension_parameters::VirtualMachineExtensionUpdate (required)

Return: VirtualMachineExtension, OpenAPI.Clients.ApiResponse
"""
function virtual_machine_extensions_update(_api::VirtualMachineExtensionsApi, resource_group_name::String, vm_name::String, vm_extension_name::String, api_version::String, subscription_id::String, extension_parameters::VirtualMachineExtensionUpdate; _mediaType=nothing)
    _ctx = _oacinternal_virtual_machine_extensions_update(_api, resource_group_name, vm_name, vm_extension_name, api_version, subscription_id, extension_parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function virtual_machine_extensions_update(_api::VirtualMachineExtensionsApi, response_stream::Channel, resource_group_name::String, vm_name::String, vm_extension_name::String, api_version::String, subscription_id::String, extension_parameters::VirtualMachineExtensionUpdate; _mediaType=nothing)
    _ctx = _oacinternal_virtual_machine_extensions_update(_api, resource_group_name, vm_name, vm_extension_name, api_version, subscription_id, extension_parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export virtual_machine_extensions_create_or_update
export virtual_machine_extensions_delete
export virtual_machine_extensions_get
export virtual_machine_extensions_list
export virtual_machine_extensions_update
