# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct DedicatedHostGroupsApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `DedicatedHostGroupsApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ DedicatedHostGroupsApi }) = "https://management.azure.com"

const _returntypes_dedicated_host_groups_create_or_update_DedicatedHostGroupsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => DedicatedHostGroup,
    Regex("^" * replace("201", "x"=>".") * "\$") => DedicatedHostGroup,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_dedicated_host_groups_create_or_update(_api::DedicatedHostGroupsApi, resource_group_name::String, host_group_name::String, api_version::String, subscription_id::String, parameters::DedicatedHostGroup; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_dedicated_host_groups_create_or_update_DedicatedHostGroupsApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}", ["azure_auth", ], parameters)
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "hostGroupName", host_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Create or update a dedicated host group. For details of Dedicated Host and Dedicated Host Groups please see [Dedicated Host Documentation] (https://go.microsoft.com/fwlink/?linkid=2082596)

Params:
- resource_group_name::String (required)
- host_group_name::String (required)
- api_version::String (required)
- subscription_id::String (required)
- parameters::DedicatedHostGroup (required)

Return: DedicatedHostGroup, OpenAPI.Clients.ApiResponse
"""
function dedicated_host_groups_create_or_update(_api::DedicatedHostGroupsApi, resource_group_name::String, host_group_name::String, api_version::String, subscription_id::String, parameters::DedicatedHostGroup; _mediaType=nothing)
    _ctx = _oacinternal_dedicated_host_groups_create_or_update(_api, resource_group_name, host_group_name, api_version, subscription_id, parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function dedicated_host_groups_create_or_update(_api::DedicatedHostGroupsApi, response_stream::Channel, resource_group_name::String, host_group_name::String, api_version::String, subscription_id::String, parameters::DedicatedHostGroup; _mediaType=nothing)
    _ctx = _oacinternal_dedicated_host_groups_create_or_update(_api, resource_group_name, host_group_name, api_version, subscription_id, parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_dedicated_host_groups_delete_DedicatedHostGroupsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_dedicated_host_groups_delete(_api::DedicatedHostGroupsApi, resource_group_name::String, host_group_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_dedicated_host_groups_delete_DedicatedHostGroupsApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "hostGroupName", host_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Delete a dedicated host group.

Params:
- resource_group_name::String (required)
- host_group_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function dedicated_host_groups_delete(_api::DedicatedHostGroupsApi, resource_group_name::String, host_group_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_dedicated_host_groups_delete(_api, resource_group_name, host_group_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function dedicated_host_groups_delete(_api::DedicatedHostGroupsApi, response_stream::Channel, resource_group_name::String, host_group_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_dedicated_host_groups_delete(_api, resource_group_name, host_group_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_dedicated_host_groups_get_DedicatedHostGroupsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => DedicatedHostGroup,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_dedicated_host_groups_get(_api::DedicatedHostGroupsApi, resource_group_name::String, host_group_name::String, api_version::String, subscription_id::String; expand=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_dedicated_host_groups_get_DedicatedHostGroupsApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "hostGroupName", host_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "\$expand", expand; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieves information about a dedicated host group.

Params:
- resource_group_name::String (required)
- host_group_name::String (required)
- api_version::String (required)
- subscription_id::String (required)
- expand::String

Return: DedicatedHostGroup, OpenAPI.Clients.ApiResponse
"""
function dedicated_host_groups_get(_api::DedicatedHostGroupsApi, resource_group_name::String, host_group_name::String, api_version::String, subscription_id::String; expand=nothing, _mediaType=nothing)
    _ctx = _oacinternal_dedicated_host_groups_get(_api, resource_group_name, host_group_name, api_version, subscription_id; expand=expand, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function dedicated_host_groups_get(_api::DedicatedHostGroupsApi, response_stream::Channel, resource_group_name::String, host_group_name::String, api_version::String, subscription_id::String; expand=nothing, _mediaType=nothing)
    _ctx = _oacinternal_dedicated_host_groups_get(_api, resource_group_name, host_group_name, api_version, subscription_id; expand=expand, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_dedicated_host_groups_list_by_resource_group_DedicatedHostGroupsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => DedicatedHostGroupListResult,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_dedicated_host_groups_list_by_resource_group(_api::DedicatedHostGroupsApi, resource_group_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_dedicated_host_groups_list_by_resource_group_DedicatedHostGroupsApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Lists all of the dedicated host groups in the specified resource group. Use the nextLink property in the response to get the next page of dedicated host groups.

Params:
- resource_group_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: DedicatedHostGroupListResult, OpenAPI.Clients.ApiResponse
"""
function dedicated_host_groups_list_by_resource_group(_api::DedicatedHostGroupsApi, resource_group_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_dedicated_host_groups_list_by_resource_group(_api, resource_group_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function dedicated_host_groups_list_by_resource_group(_api::DedicatedHostGroupsApi, response_stream::Channel, resource_group_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_dedicated_host_groups_list_by_resource_group(_api, resource_group_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_dedicated_host_groups_list_by_subscription_DedicatedHostGroupsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => DedicatedHostGroupListResult,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_dedicated_host_groups_list_by_subscription(_api::DedicatedHostGroupsApi, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_dedicated_host_groups_list_by_subscription_DedicatedHostGroupsApi, "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/hostGroups", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Lists all of the dedicated host groups in the subscription. Use the nextLink property in the response to get the next page of dedicated host groups.

Params:
- api_version::String (required)
- subscription_id::String (required)

Return: DedicatedHostGroupListResult, OpenAPI.Clients.ApiResponse
"""
function dedicated_host_groups_list_by_subscription(_api::DedicatedHostGroupsApi, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_dedicated_host_groups_list_by_subscription(_api, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function dedicated_host_groups_list_by_subscription(_api::DedicatedHostGroupsApi, response_stream::Channel, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_dedicated_host_groups_list_by_subscription(_api, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_dedicated_host_groups_update_DedicatedHostGroupsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => DedicatedHostGroup,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_dedicated_host_groups_update(_api::DedicatedHostGroupsApi, resource_group_name::String, host_group_name::String, api_version::String, subscription_id::String, parameters::DedicatedHostGroupUpdate; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PATCH", _returntypes_dedicated_host_groups_update_DedicatedHostGroupsApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}", ["azure_auth", ], parameters)
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "hostGroupName", host_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Update an dedicated host group.

Params:
- resource_group_name::String (required)
- host_group_name::String (required)
- api_version::String (required)
- subscription_id::String (required)
- parameters::DedicatedHostGroupUpdate (required)

Return: DedicatedHostGroup, OpenAPI.Clients.ApiResponse
"""
function dedicated_host_groups_update(_api::DedicatedHostGroupsApi, resource_group_name::String, host_group_name::String, api_version::String, subscription_id::String, parameters::DedicatedHostGroupUpdate; _mediaType=nothing)
    _ctx = _oacinternal_dedicated_host_groups_update(_api, resource_group_name, host_group_name, api_version, subscription_id, parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function dedicated_host_groups_update(_api::DedicatedHostGroupsApi, response_stream::Channel, resource_group_name::String, host_group_name::String, api_version::String, subscription_id::String, parameters::DedicatedHostGroupUpdate; _mediaType=nothing)
    _ctx = _oacinternal_dedicated_host_groups_update(_api, resource_group_name, host_group_name, api_version, subscription_id, parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export dedicated_host_groups_create_or_update
export dedicated_host_groups_delete
export dedicated_host_groups_get
export dedicated_host_groups_list_by_resource_group
export dedicated_host_groups_list_by_subscription
export dedicated_host_groups_update
