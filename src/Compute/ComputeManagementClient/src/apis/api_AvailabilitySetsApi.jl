# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct AvailabilitySetsApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `AvailabilitySetsApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ AvailabilitySetsApi }) = "https://management.azure.com"

const _returntypes_availability_sets_create_or_update_AvailabilitySetsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => AvailabilitySet,
)

function _oacinternal_availability_sets_create_or_update(_api::AvailabilitySetsApi, resource_group_name::String, availability_set_name::String, api_version::String, subscription_id::String, parameters::AvailabilitySet; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_availability_sets_create_or_update_AvailabilitySetsApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}", ["azure_auth", ], parameters)
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "availabilitySetName", availability_set_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Create or update an availability set.

Params:
- resource_group_name::String (required)
- availability_set_name::String (required)
- api_version::String (required)
- subscription_id::String (required)
- parameters::AvailabilitySet (required)

Return: AvailabilitySet, OpenAPI.Clients.ApiResponse
"""
function availability_sets_create_or_update(_api::AvailabilitySetsApi, resource_group_name::String, availability_set_name::String, api_version::String, subscription_id::String, parameters::AvailabilitySet; _mediaType=nothing)
    _ctx = _oacinternal_availability_sets_create_or_update(_api, resource_group_name, availability_set_name, api_version, subscription_id, parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function availability_sets_create_or_update(_api::AvailabilitySetsApi, response_stream::Channel, resource_group_name::String, availability_set_name::String, api_version::String, subscription_id::String, parameters::AvailabilitySet; _mediaType=nothing)
    _ctx = _oacinternal_availability_sets_create_or_update(_api, resource_group_name, availability_set_name, api_version, subscription_id, parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_availability_sets_delete_AvailabilitySetsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_availability_sets_delete(_api::AvailabilitySetsApi, resource_group_name::String, availability_set_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_availability_sets_delete_AvailabilitySetsApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "availabilitySetName", availability_set_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Delete an availability set.

Params:
- resource_group_name::String (required)
- availability_set_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function availability_sets_delete(_api::AvailabilitySetsApi, resource_group_name::String, availability_set_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_availability_sets_delete(_api, resource_group_name, availability_set_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function availability_sets_delete(_api::AvailabilitySetsApi, response_stream::Channel, resource_group_name::String, availability_set_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_availability_sets_delete(_api, resource_group_name, availability_set_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_availability_sets_get_AvailabilitySetsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => AvailabilitySet,
)

function _oacinternal_availability_sets_get(_api::AvailabilitySetsApi, resource_group_name::String, availability_set_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_availability_sets_get_AvailabilitySetsApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "availabilitySetName", availability_set_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Retrieves information about an availability set.

Params:
- resource_group_name::String (required)
- availability_set_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: AvailabilitySet, OpenAPI.Clients.ApiResponse
"""
function availability_sets_get(_api::AvailabilitySetsApi, resource_group_name::String, availability_set_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_availability_sets_get(_api, resource_group_name, availability_set_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function availability_sets_get(_api::AvailabilitySetsApi, response_stream::Channel, resource_group_name::String, availability_set_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_availability_sets_get(_api, resource_group_name, availability_set_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_availability_sets_list_AvailabilitySetsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => AvailabilitySetListResult,
)

function _oacinternal_availability_sets_list(_api::AvailabilitySetsApi, resource_group_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_availability_sets_list_AvailabilitySetsApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Lists all availability sets in a resource group.

Params:
- resource_group_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: AvailabilitySetListResult, OpenAPI.Clients.ApiResponse
"""
function availability_sets_list(_api::AvailabilitySetsApi, resource_group_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_availability_sets_list(_api, resource_group_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function availability_sets_list(_api::AvailabilitySetsApi, response_stream::Channel, resource_group_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_availability_sets_list(_api, resource_group_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_availability_sets_list_available_sizes_AvailabilitySetsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => VirtualMachineSizeListResult,
)

function _oacinternal_availability_sets_list_available_sizes(_api::AvailabilitySetsApi, resource_group_name::String, availability_set_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_availability_sets_list_available_sizes_AvailabilitySetsApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}/vmSizes", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "availabilitySetName", availability_set_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Lists all available virtual machine sizes that can be used to create a new virtual machine in an existing availability set.

Params:
- resource_group_name::String (required)
- availability_set_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: VirtualMachineSizeListResult, OpenAPI.Clients.ApiResponse
"""
function availability_sets_list_available_sizes(_api::AvailabilitySetsApi, resource_group_name::String, availability_set_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_availability_sets_list_available_sizes(_api, resource_group_name, availability_set_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function availability_sets_list_available_sizes(_api::AvailabilitySetsApi, response_stream::Channel, resource_group_name::String, availability_set_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_availability_sets_list_available_sizes(_api, resource_group_name, availability_set_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_availability_sets_list_by_subscription_AvailabilitySetsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => AvailabilitySetListResult,
)

function _oacinternal_availability_sets_list_by_subscription(_api::AvailabilitySetsApi, api_version::String, subscription_id::String; expand=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_availability_sets_list_by_subscription_AvailabilitySetsApi, "/subscriptions/{subscriptionId}/providers/Microsoft.Compute/availabilitySets", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "\$expand", expand)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Lists all availability sets in a subscription.

Params:
- api_version::String (required)
- subscription_id::String (required)
- expand::String

Return: AvailabilitySetListResult, OpenAPI.Clients.ApiResponse
"""
function availability_sets_list_by_subscription(_api::AvailabilitySetsApi, api_version::String, subscription_id::String; expand=nothing, _mediaType=nothing)
    _ctx = _oacinternal_availability_sets_list_by_subscription(_api, api_version, subscription_id; expand=expand, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function availability_sets_list_by_subscription(_api::AvailabilitySetsApi, response_stream::Channel, api_version::String, subscription_id::String; expand=nothing, _mediaType=nothing)
    _ctx = _oacinternal_availability_sets_list_by_subscription(_api, api_version, subscription_id; expand=expand, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_availability_sets_update_AvailabilitySetsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => AvailabilitySet,
)

function _oacinternal_availability_sets_update(_api::AvailabilitySetsApi, resource_group_name::String, availability_set_name::String, api_version::String, subscription_id::String, parameters::AvailabilitySetUpdate; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PATCH", _returntypes_availability_sets_update_AvailabilitySetsApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/availabilitySets/{availabilitySetName}", ["azure_auth", ], parameters)
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "availabilitySetName", availability_set_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Update an availability set.

Params:
- resource_group_name::String (required)
- availability_set_name::String (required)
- api_version::String (required)
- subscription_id::String (required)
- parameters::AvailabilitySetUpdate (required)

Return: AvailabilitySet, OpenAPI.Clients.ApiResponse
"""
function availability_sets_update(_api::AvailabilitySetsApi, resource_group_name::String, availability_set_name::String, api_version::String, subscription_id::String, parameters::AvailabilitySetUpdate; _mediaType=nothing)
    _ctx = _oacinternal_availability_sets_update(_api, resource_group_name, availability_set_name, api_version, subscription_id, parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function availability_sets_update(_api::AvailabilitySetsApi, response_stream::Channel, resource_group_name::String, availability_set_name::String, api_version::String, subscription_id::String, parameters::AvailabilitySetUpdate; _mediaType=nothing)
    _ctx = _oacinternal_availability_sets_update(_api, resource_group_name, availability_set_name, api_version, subscription_id, parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export availability_sets_create_or_update
export availability_sets_delete
export availability_sets_get
export availability_sets_list
export availability_sets_list_available_sizes
export availability_sets_list_by_subscription
export availability_sets_update
