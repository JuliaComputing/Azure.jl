# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct UsageAggregatesApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `UsageAggregatesApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ UsageAggregatesApi }) = "https://management.azure.com"

const _returntypes_usage_aggregates_list_UsageAggregatesApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => UsageAggregationListResult,
    Regex("^" * replace("202", "x"=>".") * "\$") => ErrorObjectResponse,
    Regex("^" * replace("0", "x"=>".") * "\$") => ErrorObjectResponse,
)

function _oacinternal_usage_aggregates_list(_api::UsageAggregatesApi, reported_start_time::ZonedDateTime, reported_end_time::ZonedDateTime, api_version::String, subscription_id::String; show_details=nothing, aggregation_granularity=nothing, continuation_token=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_usage_aggregates_list_UsageAggregatesApi, "/subscriptions/{subscriptionId}/providers/Microsoft.Commerce/UsageAggregates", [])
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "reportedStartTime", reported_start_time; style="", is_explode=false)  # type ZonedDateTime
    OpenAPI.Clients.set_param(_ctx.query, "reportedEndTime", reported_end_time; style="", is_explode=false)  # type ZonedDateTime
    OpenAPI.Clients.set_param(_ctx.query, "showDetails", show_details; style="", is_explode=false)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "aggregationGranularity", aggregation_granularity; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "continuationToken", continuation_token; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", "text/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Query aggregated Azure subscription consumption data for a date range.

Params:
- reported_start_time::ZonedDateTime (required)
- reported_end_time::ZonedDateTime (required)
- api_version::String (required)
- subscription_id::String (required)
- show_details::Bool
- aggregation_granularity::String
- continuation_token::String

Return: UsageAggregationListResult, OpenAPI.Clients.ApiResponse
"""
function usage_aggregates_list(_api::UsageAggregatesApi, reported_start_time::ZonedDateTime, reported_end_time::ZonedDateTime, api_version::String, subscription_id::String; show_details=nothing, aggregation_granularity=nothing, continuation_token=nothing, _mediaType=nothing)
    _ctx = _oacinternal_usage_aggregates_list(_api, reported_start_time, reported_end_time, api_version, subscription_id; show_details=show_details, aggregation_granularity=aggregation_granularity, continuation_token=continuation_token, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function usage_aggregates_list(_api::UsageAggregatesApi, response_stream::Channel, reported_start_time::ZonedDateTime, reported_end_time::ZonedDateTime, api_version::String, subscription_id::String; show_details=nothing, aggregation_granularity=nothing, continuation_token=nothing, _mediaType=nothing)
    _ctx = _oacinternal_usage_aggregates_list(_api, reported_start_time, reported_end_time, api_version, subscription_id; show_details=show_details, aggregation_granularity=aggregation_granularity, continuation_token=continuation_token, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export usage_aggregates_list
