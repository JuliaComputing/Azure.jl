# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""UsageAggregation
Describes the usageAggregation.

    UsageAggregation(;
        id=nothing,
        name=nothing,
        type=nothing,
        properties=nothing,
    )

    - id::String : Unique Id for the usage aggregate.
    - name::String : Name of the usage aggregate.
    - type::String : Type of the resource being returned.
    - properties::UsageSample
"""
Base.@kwdef mutable struct UsageAggregation <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing
    properties = nothing # spec type: Union{ Nothing, UsageSample }

    function UsageAggregation(id, name, type, properties, )
        OpenAPI.validate_property(UsageAggregation, Symbol("id"), id)
        OpenAPI.validate_property(UsageAggregation, Symbol("name"), name)
        OpenAPI.validate_property(UsageAggregation, Symbol("type"), type)
        OpenAPI.validate_property(UsageAggregation, Symbol("properties"), properties)
        return new(id, name, type, properties, )
    end
end # type UsageAggregation

const _property_types_UsageAggregation = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("name")=>"String", Symbol("type")=>"String", Symbol("properties")=>"UsageSample", )
OpenAPI.property_type(::Type{ UsageAggregation }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_UsageAggregation[name]))}

function check_required(o::UsageAggregation)
    true
end

function OpenAPI.validate_property(::Type{ UsageAggregation }, name::Symbol, val)
end
