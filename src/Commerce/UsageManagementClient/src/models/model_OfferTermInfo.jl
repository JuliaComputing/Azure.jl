# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""OfferTermInfo
Describes the offer term.

    OfferTermInfo(;
        Name=nothing,
        EffectiveDate=nothing,
    )

    - Name::String : Name of the offer term
    - EffectiveDate::ZonedDateTime : Indicates the date from which the offer term is effective.
"""
Base.@kwdef mutable struct OfferTermInfo <: OpenAPI.APIModel
    Name::Union{Nothing, String} = nothing
    EffectiveDate::Union{Nothing, ZonedDateTime} = nothing

    function OfferTermInfo(Name, EffectiveDate, )
        OpenAPI.validate_property(OfferTermInfo, Symbol("Name"), Name)
        OpenAPI.validate_property(OfferTermInfo, Symbol("EffectiveDate"), EffectiveDate)
        return new(Name, EffectiveDate, )
    end
end # type OfferTermInfo

const _property_types_OfferTermInfo = Dict{Symbol,String}(Symbol("Name")=>"String", Symbol("EffectiveDate")=>"ZonedDateTime", )
OpenAPI.property_type(::Type{ OfferTermInfo }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_OfferTermInfo[name]))}

function check_required(o::OfferTermInfo)
    o.Name === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ OfferTermInfo }, name::Symbol, val)
    if name === Symbol("Name")
        OpenAPI.validate_param(name, "OfferTermInfo", :enum, val, ["Recurring Charge", "Monetary Commitment", "Monetary Credit"])
    end
    if name === Symbol("EffectiveDate")
        OpenAPI.validate_param(name, "OfferTermInfo", :format, val, "date-time")
    end
end
