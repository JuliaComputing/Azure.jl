# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""FileStatusProperties
Data Lake Store file or directory information.

    FileStatusProperties(;
        accessTime=nothing,
        blockSize=nothing,
        msExpirationTime=nothing,
        group=nothing,
        length=nothing,
        modificationTime=nothing,
        owner=nothing,
        pathSuffix=nothing,
        permission=nothing,
        type=nothing,
        aclBit=nothing,
    )

    - accessTime::Int64 : the last access time as ticks since the epoch.
    - blockSize::Int64 : the block size for the file.
    - msExpirationTime::Int64 : Gets the expiration time, if any, as ticks since the epoch. If the value is 0 or DateTime.MaxValue there is no expiration.
    - group::String : the group owner.
    - length::Int64 : the number of bytes in a file.
    - modificationTime::Int64 : the modification time as ticks since the epoch.
    - owner::String : the user who is the owner.
    - pathSuffix::String : the path suffix.
    - permission::String : the permission represented as an string.
    - type::String : the type of the path object.
    - aclBit::Bool : flag to indicate if extended acls are enabled 
"""
Base.@kwdef mutable struct FileStatusProperties <: OpenAPI.APIModel
    accessTime::Union{Nothing, Int64} = nothing
    blockSize::Union{Nothing, Int64} = nothing
    msExpirationTime::Union{Nothing, Int64} = nothing
    group::Union{Nothing, String} = nothing
    length::Union{Nothing, Int64} = nothing
    modificationTime::Union{Nothing, Int64} = nothing
    owner::Union{Nothing, String} = nothing
    pathSuffix::Union{Nothing, String} = nothing
    permission::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing
    aclBit::Union{Nothing, Bool} = nothing

    function FileStatusProperties(accessTime, blockSize, msExpirationTime, group, length, modificationTime, owner, pathSuffix, permission, type, aclBit, )
        o = new(accessTime, blockSize, msExpirationTime, group, length, modificationTime, owner, pathSuffix, permission, type, aclBit, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type FileStatusProperties

const _property_types_FileStatusProperties = Dict{Symbol,String}(Symbol("accessTime")=>"Int64", Symbol("blockSize")=>"Int64", Symbol("msExpirationTime")=>"Int64", Symbol("group")=>"String", Symbol("length")=>"Int64", Symbol("modificationTime")=>"Int64", Symbol("owner")=>"String", Symbol("pathSuffix")=>"String", Symbol("permission")=>"String", Symbol("type")=>"String", Symbol("aclBit")=>"Bool", )
OpenAPI.property_type(::Type{ FileStatusProperties }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_FileStatusProperties[name]))}

function OpenAPI.check_required(o::FileStatusProperties)
    true
end

function OpenAPI.validate_properties(o::FileStatusProperties)
    OpenAPI.validate_property(FileStatusProperties, Symbol("accessTime"), o.accessTime)
    OpenAPI.validate_property(FileStatusProperties, Symbol("blockSize"), o.blockSize)
    OpenAPI.validate_property(FileStatusProperties, Symbol("msExpirationTime"), o.msExpirationTime)
    OpenAPI.validate_property(FileStatusProperties, Symbol("group"), o.group)
    OpenAPI.validate_property(FileStatusProperties, Symbol("length"), o.length)
    OpenAPI.validate_property(FileStatusProperties, Symbol("modificationTime"), o.modificationTime)
    OpenAPI.validate_property(FileStatusProperties, Symbol("owner"), o.owner)
    OpenAPI.validate_property(FileStatusProperties, Symbol("pathSuffix"), o.pathSuffix)
    OpenAPI.validate_property(FileStatusProperties, Symbol("permission"), o.permission)
    OpenAPI.validate_property(FileStatusProperties, Symbol("type"), o.type)
    OpenAPI.validate_property(FileStatusProperties, Symbol("aclBit"), o.aclBit)
end

function OpenAPI.validate_property(::Type{ FileStatusProperties }, name::Symbol, val)

    if name === Symbol("accessTime")
        OpenAPI.validate_param(name, "FileStatusProperties", :format, val, "int64")
    end

    if name === Symbol("blockSize")
        OpenAPI.validate_param(name, "FileStatusProperties", :format, val, "int64")
    end

    if name === Symbol("msExpirationTime")
        OpenAPI.validate_param(name, "FileStatusProperties", :format, val, "int64")
    end


    if name === Symbol("length")
        OpenAPI.validate_param(name, "FileStatusProperties", :format, val, "int64")
    end

    if name === Symbol("modificationTime")
        OpenAPI.validate_param(name, "FileStatusProperties", :format, val, "int64")
    end




    if name === Symbol("type")
        OpenAPI.validate_param(name, "FileStatusProperties", :enum, val, ["FILE", "DIRECTORY"])
    end


end
