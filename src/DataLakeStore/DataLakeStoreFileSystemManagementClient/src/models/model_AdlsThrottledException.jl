# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""AdlsThrottledException
A WebHDFS exception thrown indicating that the request is being throttled. Reducing the number of requests or request size helps to mitigate this error.

    AdlsThrottledException(;
        exception=nothing,
        javaClassName=nothing,
        message=nothing,
    )

    - exception::String : the class name of the exception thrown, such as &#39;IllegalArgumentException&#39;.
    - javaClassName::String : the full class package name for the exception thrown, such as &#39;java.lang.IllegalArgumentException&#39;.
    - message::String : the message associated with the exception that was thrown, such as &#39;Invalid value for webhdfs parameter \&quot;permission\&quot;:...&#39;.
"""
Base.@kwdef mutable struct AdlsThrottledException <: OpenAPI.APIModel
    exception::Union{Nothing, String} = nothing
    javaClassName::Union{Nothing, String} = nothing
    message::Union{Nothing, String} = nothing

    function AdlsThrottledException(exception, javaClassName, message, )
        OpenAPI.validate_property(AdlsThrottledException, Symbol("exception"), exception)
        OpenAPI.validate_property(AdlsThrottledException, Symbol("javaClassName"), javaClassName)
        OpenAPI.validate_property(AdlsThrottledException, Symbol("message"), message)
        return new(exception, javaClassName, message, )
    end
end # type AdlsThrottledException

const _property_types_AdlsThrottledException = Dict{Symbol,String}(Symbol("exception")=>"String", Symbol("javaClassName")=>"String", Symbol("message")=>"String", )
OpenAPI.property_type(::Type{ AdlsThrottledException }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_AdlsThrottledException[name]))}

function check_required(o::AdlsThrottledException)
    o.exception === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ AdlsThrottledException }, name::Symbol, val)
end
