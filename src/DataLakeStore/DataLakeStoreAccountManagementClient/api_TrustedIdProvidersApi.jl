# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

struct TrustedIdProvidersApi <: SwaggerApi
    client::Swagger.Client
end

"""

Creates or updates the specified trusted identity provider. During update, the trusted identity provider with the specified name will be replaced with this new provider
Param: subscriptionId::String (required)
Param: resourceGroupName::String (required)
Param: accountName::String (required)
Param: trustedIdProviderName::String (required)
Param: parameters::CreateOrUpdateTrustedIdProviderParameters (required)
Param: api_version::String (required)
Return: TrustedIdProvider
"""
function _swaggerinternal_trustedIdProvidersCreateOrUpdate(_api::TrustedIdProvidersApi, subscriptionId::String, resourceGroupName::String, accountName::String, trustedIdProviderName::String, parameters, api_version::String; _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "PUT", TrustedIdProvider, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/trustedIdProviders/{trustedIdProviderName}", ["azure_auth"], parameters)
    Swagger.set_param(_ctx.path, "subscriptionId", subscriptionId)  # type String
    Swagger.set_param(_ctx.path, "resourceGroupName", resourceGroupName)  # type String
    Swagger.set_param(_ctx.path, "accountName", accountName)  # type String
    Swagger.set_param(_ctx.path, "trustedIdProviderName", trustedIdProviderName)  # type String
    Swagger.set_param(_ctx.query, "api-version", api_version)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json"] : [_mediaType])
    return _ctx
end

function trustedIdProvidersCreateOrUpdate(_api::TrustedIdProvidersApi, subscriptionId::String, resourceGroupName::String, accountName::String, trustedIdProviderName::String, parameters, api_version::String; _mediaType=nothing)
    _ctx = _swaggerinternal_trustedIdProvidersCreateOrUpdate(_api, subscriptionId, resourceGroupName, accountName, trustedIdProviderName, parameters, api_version; _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function trustedIdProvidersCreateOrUpdate(_api::TrustedIdProvidersApi, response_stream::Channel, subscriptionId::String, resourceGroupName::String, accountName::String, trustedIdProviderName::String, parameters, api_version::String; _mediaType=nothing)
    _ctx = _swaggerinternal_trustedIdProvidersCreateOrUpdate(_api, subscriptionId, resourceGroupName, accountName, trustedIdProviderName, parameters, api_version; _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

"""

Deletes the specified trusted identity provider from the specified Data Lake Store account
Param: subscriptionId::String (required)
Param: resourceGroupName::String (required)
Param: accountName::String (required)
Param: trustedIdProviderName::String (required)
Param: api_version::String (required)
Return: Nothing
"""
function _swaggerinternal_trustedIdProvidersDelete(_api::TrustedIdProvidersApi, subscriptionId::String, resourceGroupName::String, accountName::String, trustedIdProviderName::String, api_version::String; _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "DELETE", Nothing, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/trustedIdProviders/{trustedIdProviderName}", ["azure_auth"])
    Swagger.set_param(_ctx.path, "subscriptionId", subscriptionId)  # type String
    Swagger.set_param(_ctx.path, "resourceGroupName", resourceGroupName)  # type String
    Swagger.set_param(_ctx.path, "accountName", accountName)  # type String
    Swagger.set_param(_ctx.path, "trustedIdProviderName", trustedIdProviderName)  # type String
    Swagger.set_param(_ctx.query, "api-version", api_version)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json"] : [_mediaType])
    return _ctx
end

function trustedIdProvidersDelete(_api::TrustedIdProvidersApi, subscriptionId::String, resourceGroupName::String, accountName::String, trustedIdProviderName::String, api_version::String; _mediaType=nothing)
    _ctx = _swaggerinternal_trustedIdProvidersDelete(_api, subscriptionId, resourceGroupName, accountName, trustedIdProviderName, api_version; _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function trustedIdProvidersDelete(_api::TrustedIdProvidersApi, response_stream::Channel, subscriptionId::String, resourceGroupName::String, accountName::String, trustedIdProviderName::String, api_version::String; _mediaType=nothing)
    _ctx = _swaggerinternal_trustedIdProvidersDelete(_api, subscriptionId, resourceGroupName, accountName, trustedIdProviderName, api_version; _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

"""

Gets the specified Data Lake Store trusted identity provider.
Param: subscriptionId::String (required)
Param: resourceGroupName::String (required)
Param: accountName::String (required)
Param: trustedIdProviderName::String (required)
Param: api_version::String (required)
Return: TrustedIdProvider
"""
function _swaggerinternal_trustedIdProvidersGet(_api::TrustedIdProvidersApi, subscriptionId::String, resourceGroupName::String, accountName::String, trustedIdProviderName::String, api_version::String; _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", TrustedIdProvider, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/trustedIdProviders/{trustedIdProviderName}", ["azure_auth"])
    Swagger.set_param(_ctx.path, "subscriptionId", subscriptionId)  # type String
    Swagger.set_param(_ctx.path, "resourceGroupName", resourceGroupName)  # type String
    Swagger.set_param(_ctx.path, "accountName", accountName)  # type String
    Swagger.set_param(_ctx.path, "trustedIdProviderName", trustedIdProviderName)  # type String
    Swagger.set_param(_ctx.query, "api-version", api_version)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json"] : [_mediaType])
    return _ctx
end

function trustedIdProvidersGet(_api::TrustedIdProvidersApi, subscriptionId::String, resourceGroupName::String, accountName::String, trustedIdProviderName::String, api_version::String; _mediaType=nothing)
    _ctx = _swaggerinternal_trustedIdProvidersGet(_api, subscriptionId, resourceGroupName, accountName, trustedIdProviderName, api_version; _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function trustedIdProvidersGet(_api::TrustedIdProvidersApi, response_stream::Channel, subscriptionId::String, resourceGroupName::String, accountName::String, trustedIdProviderName::String, api_version::String; _mediaType=nothing)
    _ctx = _swaggerinternal_trustedIdProvidersGet(_api, subscriptionId, resourceGroupName, accountName, trustedIdProviderName, api_version; _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

"""

Lists the Data Lake Store trusted identity providers within the specified Data Lake Store account.
Param: subscriptionId::String (required)
Param: resourceGroupName::String (required)
Param: accountName::String (required)
Param: api_version::String (required)
Return: TrustedIdProviderListResult
"""
function _swaggerinternal_trustedIdProvidersListByAccount(_api::TrustedIdProvidersApi, subscriptionId::String, resourceGroupName::String, accountName::String, api_version::String; _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", TrustedIdProviderListResult, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/trustedIdProviders", ["azure_auth"])
    Swagger.set_param(_ctx.path, "subscriptionId", subscriptionId)  # type String
    Swagger.set_param(_ctx.path, "resourceGroupName", resourceGroupName)  # type String
    Swagger.set_param(_ctx.path, "accountName", accountName)  # type String
    Swagger.set_param(_ctx.query, "api-version", api_version)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json"] : [_mediaType])
    return _ctx
end

function trustedIdProvidersListByAccount(_api::TrustedIdProvidersApi, subscriptionId::String, resourceGroupName::String, accountName::String, api_version::String; _mediaType=nothing)
    _ctx = _swaggerinternal_trustedIdProvidersListByAccount(_api, subscriptionId, resourceGroupName, accountName, api_version; _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function trustedIdProvidersListByAccount(_api::TrustedIdProvidersApi, response_stream::Channel, subscriptionId::String, resourceGroupName::String, accountName::String, api_version::String; _mediaType=nothing)
    _ctx = _swaggerinternal_trustedIdProvidersListByAccount(_api, subscriptionId, resourceGroupName, accountName, api_version; _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

"""

Updates the specified trusted identity provider.
Param: subscriptionId::String (required)
Param: resourceGroupName::String (required)
Param: accountName::String (required)
Param: trustedIdProviderName::String (required)
Param: api_version::String (required)
Param: parameters::UpdateTrustedIdProviderParameters
Return: TrustedIdProvider
"""
function _swaggerinternal_trustedIdProvidersUpdate(_api::TrustedIdProvidersApi, subscriptionId::String, resourceGroupName::String, accountName::String, trustedIdProviderName::String, api_version::String; parameters=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "PATCH", TrustedIdProvider, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/trustedIdProviders/{trustedIdProviderName}", ["azure_auth"], parameters)
    Swagger.set_param(_ctx.path, "subscriptionId", subscriptionId)  # type String
    Swagger.set_param(_ctx.path, "resourceGroupName", resourceGroupName)  # type String
    Swagger.set_param(_ctx.path, "accountName", accountName)  # type String
    Swagger.set_param(_ctx.path, "trustedIdProviderName", trustedIdProviderName)  # type String
    Swagger.set_param(_ctx.query, "api-version", api_version)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json"] : [_mediaType])
    return _ctx
end

function trustedIdProvidersUpdate(_api::TrustedIdProvidersApi, subscriptionId::String, resourceGroupName::String, accountName::String, trustedIdProviderName::String, api_version::String; parameters=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_trustedIdProvidersUpdate(_api, subscriptionId, resourceGroupName, accountName, trustedIdProviderName, api_version; parameters=parameters, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function trustedIdProvidersUpdate(_api::TrustedIdProvidersApi, response_stream::Channel, subscriptionId::String, resourceGroupName::String, accountName::String, trustedIdProviderName::String, api_version::String; parameters=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_trustedIdProvidersUpdate(_api, subscriptionId, resourceGroupName, accountName, trustedIdProviderName, api_version; parameters=parameters, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

export trustedIdProvidersCreateOrUpdate, trustedIdProvidersDelete, trustedIdProvidersGet, trustedIdProvidersListByAccount, trustedIdProvidersUpdate
