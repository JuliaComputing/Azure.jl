# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Operation
An available operation for Data Lake Store.

    Operation(;
        name=nothing,
        display=nothing,
        origin=nothing,
    )

    - name::String : The name of the operation.
    - display::OperationDisplay
    - origin::String : The intended executor of the operation.
"""
Base.@kwdef mutable struct Operation <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    display = nothing # spec type: Union{ Nothing, OperationDisplay }
    origin::Union{Nothing, String} = nothing

    function Operation(name, display, origin, )
        OpenAPI.validate_property(Operation, Symbol("name"), name)
        OpenAPI.validate_property(Operation, Symbol("display"), display)
        OpenAPI.validate_property(Operation, Symbol("origin"), origin)
        return new(name, display, origin, )
    end
end # type Operation

const _property_types_Operation = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("display")=>"OperationDisplay", Symbol("origin")=>"String", )
OpenAPI.property_type(::Type{ Operation }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Operation[name]))}

function check_required(o::Operation)
    true
end

function OpenAPI.validate_property(::Type{ Operation }, name::Symbol, val)
    if name === Symbol("origin")
        OpenAPI.validate_param(name, "Operation", :enum, val, ["user", "system", "user,system"])
    end
end
