# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""UpdateVirtualNetworkRuleWithAccountParameters
The parameters used to update a virtual network rule while updating a Data Lake Store account.

    UpdateVirtualNetworkRuleWithAccountParameters(;
        name=nothing,
        properties=nothing,
    )

    - name::String : The unique name of the virtual network rule to update.
    - properties::UpdateVirtualNetworkRuleProperties
"""
Base.@kwdef mutable struct UpdateVirtualNetworkRuleWithAccountParameters <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    properties = nothing # spec type: Union{ Nothing, UpdateVirtualNetworkRuleProperties }

    function UpdateVirtualNetworkRuleWithAccountParameters(name, properties, )
        o = new(name, properties, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type UpdateVirtualNetworkRuleWithAccountParameters

const _property_types_UpdateVirtualNetworkRuleWithAccountParameters = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("properties")=>"UpdateVirtualNetworkRuleProperties", )
OpenAPI.property_type(::Type{ UpdateVirtualNetworkRuleWithAccountParameters }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_UpdateVirtualNetworkRuleWithAccountParameters[name]))}

function OpenAPI.check_required(o::UpdateVirtualNetworkRuleWithAccountParameters)
    o.name === nothing && (return false)
    true
end

function OpenAPI.validate_properties(o::UpdateVirtualNetworkRuleWithAccountParameters)
    OpenAPI.validate_property(UpdateVirtualNetworkRuleWithAccountParameters, Symbol("name"), o.name)
    OpenAPI.validate_property(UpdateVirtualNetworkRuleWithAccountParameters, Symbol("properties"), o.properties)
end

function OpenAPI.validate_property(::Type{ UpdateVirtualNetworkRuleWithAccountParameters }, name::Symbol, val)


end
