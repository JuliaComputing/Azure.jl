# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""CreateOrUpdateFirewallRuleProperties
The firewall rule properties to use when creating a new firewall rule.

    CreateOrUpdateFirewallRuleProperties(;
        startIpAddress=nothing,
        endIpAddress=nothing,
    )

    - startIpAddress::String : The start IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
    - endIpAddress::String : The end IP address for the firewall rule. This can be either ipv4 or ipv6. Start and End should be in the same protocol.
"""
Base.@kwdef mutable struct CreateOrUpdateFirewallRuleProperties <: OpenAPI.APIModel
    startIpAddress::Union{Nothing, String} = nothing
    endIpAddress::Union{Nothing, String} = nothing

    function CreateOrUpdateFirewallRuleProperties(startIpAddress, endIpAddress, )
        o = new(startIpAddress, endIpAddress, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type CreateOrUpdateFirewallRuleProperties

const _property_types_CreateOrUpdateFirewallRuleProperties = Dict{Symbol,String}(Symbol("startIpAddress")=>"String", Symbol("endIpAddress")=>"String", )
OpenAPI.property_type(::Type{ CreateOrUpdateFirewallRuleProperties }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CreateOrUpdateFirewallRuleProperties[name]))}

function OpenAPI.check_required(o::CreateOrUpdateFirewallRuleProperties)
    o.startIpAddress === nothing && (return false)
    o.endIpAddress === nothing && (return false)
    true
end

function OpenAPI.validate_properties(o::CreateOrUpdateFirewallRuleProperties)
    OpenAPI.validate_property(CreateOrUpdateFirewallRuleProperties, Symbol("startIpAddress"), o.startIpAddress)
    OpenAPI.validate_property(CreateOrUpdateFirewallRuleProperties, Symbol("endIpAddress"), o.endIpAddress)
end

function OpenAPI.validate_property(::Type{ CreateOrUpdateFirewallRuleProperties }, name::Symbol, val)


end
