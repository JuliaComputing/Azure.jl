# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""EncryptionConfig
The encryption configuration for the account.

    EncryptionConfig(;
        type=nothing,
        keyVaultMetaInfo=nothing,
    )

    - type::String : The type of encryption configuration being used. Currently the only supported types are &#39;UserManaged&#39; and &#39;ServiceManaged&#39;.
    - keyVaultMetaInfo::KeyVaultMetaInfo
"""
Base.@kwdef mutable struct EncryptionConfig <: OpenAPI.APIModel
    type::Union{Nothing, String} = nothing
    keyVaultMetaInfo = nothing # spec type: Union{ Nothing, KeyVaultMetaInfo }

    function EncryptionConfig(type, keyVaultMetaInfo, )
        o = new(type, keyVaultMetaInfo, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type EncryptionConfig

const _property_types_EncryptionConfig = Dict{Symbol,String}(Symbol("type")=>"String", Symbol("keyVaultMetaInfo")=>"KeyVaultMetaInfo", )
OpenAPI.property_type(::Type{ EncryptionConfig }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_EncryptionConfig[name]))}

function OpenAPI.check_required(o::EncryptionConfig)
    o.type === nothing && (return false)
    true
end

function OpenAPI.validate_properties(o::EncryptionConfig)
    OpenAPI.validate_property(EncryptionConfig, Symbol("type"), o.type)
    OpenAPI.validate_property(EncryptionConfig, Symbol("keyVaultMetaInfo"), o.keyVaultMetaInfo)
end

function OpenAPI.validate_property(::Type{ EncryptionConfig }, name::Symbol, val)

    if name === Symbol("type")
        OpenAPI.validate_param(name, "EncryptionConfig", :enum, val, ["UserManaged", "ServiceManaged"])
    end


end
