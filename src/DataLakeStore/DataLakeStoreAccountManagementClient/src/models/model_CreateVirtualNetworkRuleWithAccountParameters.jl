# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""CreateVirtualNetworkRuleWithAccountParameters
The parameters used to create a new virtual network rule while creating a new Data Lake Store account.

    CreateVirtualNetworkRuleWithAccountParameters(;
        name=nothing,
        properties=nothing,
    )

    - name::String : The unique name of the virtual network rule to create.
    - properties::CreateOrUpdateVirtualNetworkRuleProperties
"""
Base.@kwdef mutable struct CreateVirtualNetworkRuleWithAccountParameters <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    properties = nothing # spec type: Union{ Nothing, CreateOrUpdateVirtualNetworkRuleProperties }

    function CreateVirtualNetworkRuleWithAccountParameters(name, properties, )
        o = new(name, properties, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type CreateVirtualNetworkRuleWithAccountParameters

const _property_types_CreateVirtualNetworkRuleWithAccountParameters = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("properties")=>"CreateOrUpdateVirtualNetworkRuleProperties", )
OpenAPI.property_type(::Type{ CreateVirtualNetworkRuleWithAccountParameters }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CreateVirtualNetworkRuleWithAccountParameters[name]))}

function OpenAPI.check_required(o::CreateVirtualNetworkRuleWithAccountParameters)
    o.name === nothing && (return false)
    o.properties === nothing && (return false)
    true
end

function OpenAPI.validate_properties(o::CreateVirtualNetworkRuleWithAccountParameters)
    OpenAPI.validate_property(CreateVirtualNetworkRuleWithAccountParameters, Symbol("name"), o.name)
    OpenAPI.validate_property(CreateVirtualNetworkRuleWithAccountParameters, Symbol("properties"), o.properties)
end

function OpenAPI.validate_property(::Type{ CreateVirtualNetworkRuleWithAccountParameters }, name::Symbol, val)


end
