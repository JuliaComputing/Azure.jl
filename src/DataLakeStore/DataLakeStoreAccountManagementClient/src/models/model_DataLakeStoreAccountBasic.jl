# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""DataLakeStoreAccountBasic
Basic Data Lake Store account information, returned on list calls.

    DataLakeStoreAccountBasic(;
        properties=nothing,
        id=nothing,
        name=nothing,
        type=nothing,
        location=nothing,
        tags=nothing,
    )

    - properties::DataLakeStoreAccountPropertiesBasic
    - id::String : The resource identifier.
    - name::String : The resource name.
    - type::String : The resource type.
    - location::String : The resource location.
    - tags::Dict{String, String} : The resource tags.
"""
Base.@kwdef mutable struct DataLakeStoreAccountBasic <: OpenAPI.APIModel
    properties = nothing # spec type: Union{ Nothing, DataLakeStoreAccountPropertiesBasic }
    id::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing
    location::Union{Nothing, String} = nothing
    tags::Union{Nothing, Dict{String, String}} = nothing

    function DataLakeStoreAccountBasic(properties, id, name, type, location, tags, )
        o = new(properties, id, name, type, location, tags, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type DataLakeStoreAccountBasic

const _property_types_DataLakeStoreAccountBasic = Dict{Symbol,String}(Symbol("properties")=>"DataLakeStoreAccountPropertiesBasic", Symbol("id")=>"String", Symbol("name")=>"String", Symbol("type")=>"String", Symbol("location")=>"String", Symbol("tags")=>"Dict{String, String}", )
OpenAPI.property_type(::Type{ DataLakeStoreAccountBasic }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DataLakeStoreAccountBasic[name]))}

function OpenAPI.check_required(o::DataLakeStoreAccountBasic)
    true
end

function OpenAPI.validate_properties(o::DataLakeStoreAccountBasic)
    OpenAPI.validate_property(DataLakeStoreAccountBasic, Symbol("properties"), o.properties)
    OpenAPI.validate_property(DataLakeStoreAccountBasic, Symbol("id"), o.id)
    OpenAPI.validate_property(DataLakeStoreAccountBasic, Symbol("name"), o.name)
    OpenAPI.validate_property(DataLakeStoreAccountBasic, Symbol("type"), o.type)
    OpenAPI.validate_property(DataLakeStoreAccountBasic, Symbol("location"), o.location)
    OpenAPI.validate_property(DataLakeStoreAccountBasic, Symbol("tags"), o.tags)
end

function OpenAPI.validate_property(::Type{ DataLakeStoreAccountBasic }, name::Symbol, val)






end
