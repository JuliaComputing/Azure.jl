# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""VirtualNetworkRule
Data Lake Store virtual network rule information.

    VirtualNetworkRule(;
        properties=nothing,
        id=nothing,
        name=nothing,
        type=nothing,
    )

    - properties::VirtualNetworkRuleProperties
    - id::String : The resource identifier.
    - name::String : The resource name.
    - type::String : The resource type.
"""
Base.@kwdef mutable struct VirtualNetworkRule <: OpenAPI.APIModel
    properties = nothing # spec type: Union{ Nothing, VirtualNetworkRuleProperties }
    id::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing

    function VirtualNetworkRule(properties, id, name, type, )
        o = new(properties, id, name, type, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type VirtualNetworkRule

const _property_types_VirtualNetworkRule = Dict{Symbol,String}(Symbol("properties")=>"VirtualNetworkRuleProperties", Symbol("id")=>"String", Symbol("name")=>"String", Symbol("type")=>"String", )
OpenAPI.property_type(::Type{ VirtualNetworkRule }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_VirtualNetworkRule[name]))}

function OpenAPI.check_required(o::VirtualNetworkRule)
    true
end

function OpenAPI.validate_properties(o::VirtualNetworkRule)
    OpenAPI.validate_property(VirtualNetworkRule, Symbol("properties"), o.properties)
    OpenAPI.validate_property(VirtualNetworkRule, Symbol("id"), o.id)
    OpenAPI.validate_property(VirtualNetworkRule, Symbol("name"), o.name)
    OpenAPI.validate_property(VirtualNetworkRule, Symbol("type"), o.type)
end

function OpenAPI.validate_property(::Type{ VirtualNetworkRule }, name::Symbol, val)




end
