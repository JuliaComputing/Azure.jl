# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct LocationsApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `LocationsApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ LocationsApi }) = "https://management.azure.com"

const _returntypes_locations_get_capability_LocationsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => CapabilityInformation,
    Regex("^" * replace("404", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_locations_get_capability(_api::LocationsApi, subscription_id::String, location::String, api_version::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_locations_get_capability_LocationsApi, "/subscriptions/{subscriptionId}/providers/Microsoft.DataLakeStore/locations/{location}/capability", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "location", location)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Gets subscription-level properties and limits for Data Lake Store specified by resource location.

Params:
- subscription_id::String (required)
- location::String (required)
- api_version::String (required)

Return: CapabilityInformation, OpenAPI.Clients.ApiResponse
"""
function locations_get_capability(_api::LocationsApi, subscription_id::String, location::String, api_version::String; _mediaType=nothing)
    _ctx = _oacinternal_locations_get_capability(_api, subscription_id, location, api_version; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function locations_get_capability(_api::LocationsApi, response_stream::Channel, subscription_id::String, location::String, api_version::String; _mediaType=nothing)
    _ctx = _oacinternal_locations_get_capability(_api, subscription_id, location, api_version; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export locations_get_capability
