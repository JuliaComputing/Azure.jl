# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct VirtualNetworkRulesApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `VirtualNetworkRulesApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ VirtualNetworkRulesApi }) = "https://management.azure.com"

const _returntypes_virtual_network_rules_create_or_update_VirtualNetworkRulesApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => VirtualNetworkRule,
)

function _oacinternal_virtual_network_rules_create_or_update(_api::VirtualNetworkRulesApi, subscription_id::String, resource_group_name::String, account_name::String, virtual_network_rule_name::String, api_version::String, parameters::CreateOrUpdateVirtualNetworkRuleParameters; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_virtual_network_rules_create_or_update_VirtualNetworkRulesApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/virtualNetworkRules/{virtualNetworkRuleName}", ["azure_auth", ], parameters)
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "accountName", account_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "virtualNetworkRuleName", virtual_network_rule_name)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Creates or updates the specified virtual network rule. During update, the virtual network rule with the specified name will be replaced with this new virtual network rule.

Params:
- subscription_id::String (required)
- resource_group_name::String (required)
- account_name::String (required)
- virtual_network_rule_name::String (required)
- api_version::String (required)
- parameters::CreateOrUpdateVirtualNetworkRuleParameters (required)

Return: VirtualNetworkRule, OpenAPI.Clients.ApiResponse
"""
function virtual_network_rules_create_or_update(_api::VirtualNetworkRulesApi, subscription_id::String, resource_group_name::String, account_name::String, virtual_network_rule_name::String, api_version::String, parameters::CreateOrUpdateVirtualNetworkRuleParameters; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_rules_create_or_update(_api, subscription_id, resource_group_name, account_name, virtual_network_rule_name, api_version, parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function virtual_network_rules_create_or_update(_api::VirtualNetworkRulesApi, response_stream::Channel, subscription_id::String, resource_group_name::String, account_name::String, virtual_network_rule_name::String, api_version::String, parameters::CreateOrUpdateVirtualNetworkRuleParameters; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_rules_create_or_update(_api, subscription_id, resource_group_name, account_name, virtual_network_rule_name, api_version, parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_virtual_network_rules_delete_VirtualNetworkRulesApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_virtual_network_rules_delete(_api::VirtualNetworkRulesApi, subscription_id::String, resource_group_name::String, account_name::String, virtual_network_rule_name::String, api_version::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_virtual_network_rules_delete_VirtualNetworkRulesApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/virtualNetworkRules/{virtualNetworkRuleName}", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "accountName", account_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "virtualNetworkRuleName", virtual_network_rule_name)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, [])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Deletes the specified virtual network rule from the specified Data Lake Store account.

Params:
- subscription_id::String (required)
- resource_group_name::String (required)
- account_name::String (required)
- virtual_network_rule_name::String (required)
- api_version::String (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function virtual_network_rules_delete(_api::VirtualNetworkRulesApi, subscription_id::String, resource_group_name::String, account_name::String, virtual_network_rule_name::String, api_version::String; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_rules_delete(_api, subscription_id, resource_group_name, account_name, virtual_network_rule_name, api_version; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function virtual_network_rules_delete(_api::VirtualNetworkRulesApi, response_stream::Channel, subscription_id::String, resource_group_name::String, account_name::String, virtual_network_rule_name::String, api_version::String; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_rules_delete(_api, subscription_id, resource_group_name, account_name, virtual_network_rule_name, api_version; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_virtual_network_rules_get_VirtualNetworkRulesApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => VirtualNetworkRule,
)

function _oacinternal_virtual_network_rules_get(_api::VirtualNetworkRulesApi, subscription_id::String, resource_group_name::String, account_name::String, virtual_network_rule_name::String, api_version::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_virtual_network_rules_get_VirtualNetworkRulesApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/virtualNetworkRules/{virtualNetworkRuleName}", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "accountName", account_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "virtualNetworkRuleName", virtual_network_rule_name)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Gets the specified Data Lake Store virtual network rule.

Params:
- subscription_id::String (required)
- resource_group_name::String (required)
- account_name::String (required)
- virtual_network_rule_name::String (required)
- api_version::String (required)

Return: VirtualNetworkRule, OpenAPI.Clients.ApiResponse
"""
function virtual_network_rules_get(_api::VirtualNetworkRulesApi, subscription_id::String, resource_group_name::String, account_name::String, virtual_network_rule_name::String, api_version::String; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_rules_get(_api, subscription_id, resource_group_name, account_name, virtual_network_rule_name, api_version; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function virtual_network_rules_get(_api::VirtualNetworkRulesApi, response_stream::Channel, subscription_id::String, resource_group_name::String, account_name::String, virtual_network_rule_name::String, api_version::String; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_rules_get(_api, subscription_id, resource_group_name, account_name, virtual_network_rule_name, api_version; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_virtual_network_rules_list_by_account_VirtualNetworkRulesApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => VirtualNetworkRuleListResult,
)

function _oacinternal_virtual_network_rules_list_by_account(_api::VirtualNetworkRulesApi, subscription_id::String, resource_group_name::String, account_name::String, api_version::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_virtual_network_rules_list_by_account_VirtualNetworkRulesApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/virtualNetworkRules", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "accountName", account_name)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Lists the Data Lake Store virtual network rules within the specified Data Lake Store account.

Params:
- subscription_id::String (required)
- resource_group_name::String (required)
- account_name::String (required)
- api_version::String (required)

Return: VirtualNetworkRuleListResult, OpenAPI.Clients.ApiResponse
"""
function virtual_network_rules_list_by_account(_api::VirtualNetworkRulesApi, subscription_id::String, resource_group_name::String, account_name::String, api_version::String; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_rules_list_by_account(_api, subscription_id, resource_group_name, account_name, api_version; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function virtual_network_rules_list_by_account(_api::VirtualNetworkRulesApi, response_stream::Channel, subscription_id::String, resource_group_name::String, account_name::String, api_version::String; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_rules_list_by_account(_api, subscription_id, resource_group_name, account_name, api_version; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_virtual_network_rules_update_VirtualNetworkRulesApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => VirtualNetworkRule,
)

function _oacinternal_virtual_network_rules_update(_api::VirtualNetworkRulesApi, subscription_id::String, resource_group_name::String, account_name::String, virtual_network_rule_name::String, api_version::String; parameters=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PATCH", _returntypes_virtual_network_rules_update_VirtualNetworkRulesApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeStore/accounts/{accountName}/virtualNetworkRules/{virtualNetworkRuleName}", ["azure_auth", ], parameters)
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "accountName", account_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "virtualNetworkRuleName", virtual_network_rule_name)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Updates the specified virtual network rule.

Params:
- subscription_id::String (required)
- resource_group_name::String (required)
- account_name::String (required)
- virtual_network_rule_name::String (required)
- api_version::String (required)
- parameters::UpdateVirtualNetworkRuleParameters

Return: VirtualNetworkRule, OpenAPI.Clients.ApiResponse
"""
function virtual_network_rules_update(_api::VirtualNetworkRulesApi, subscription_id::String, resource_group_name::String, account_name::String, virtual_network_rule_name::String, api_version::String; parameters=nothing, _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_rules_update(_api, subscription_id, resource_group_name, account_name, virtual_network_rule_name, api_version; parameters=parameters, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function virtual_network_rules_update(_api::VirtualNetworkRulesApi, response_stream::Channel, subscription_id::String, resource_group_name::String, account_name::String, virtual_network_rule_name::String, api_version::String; parameters=nothing, _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_rules_update(_api, subscription_id, resource_group_name, account_name, virtual_network_rule_name, api_version; parameters=parameters, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export virtual_network_rules_create_or_update
export virtual_network_rules_delete
export virtual_network_rules_get
export virtual_network_rules_list_by_account
export virtual_network_rules_update
