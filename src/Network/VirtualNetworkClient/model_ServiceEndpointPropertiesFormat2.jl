# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct ServiceEndpointPropertiesFormat2 <: SwaggerModel
    service::Any # spec type: Union{ Nothing, String } # spec name: service
    locations::Any # spec type: Union{ Nothing, Vector{String} } # spec name: locations
    provisioningState::Any # spec type: Union{ Nothing, ProvisioningState } # spec name: provisioningState

    function ServiceEndpointPropertiesFormat2(;service=nothing, locations=nothing, provisioningState=nothing)
        o = new()
        validate_property(ServiceEndpointPropertiesFormat2, Symbol("service"), service)
        setfield!(o, Symbol("service"), service)
        validate_property(ServiceEndpointPropertiesFormat2, Symbol("locations"), locations)
        setfield!(o, Symbol("locations"), locations)
        validate_property(ServiceEndpointPropertiesFormat2, Symbol("provisioningState"), provisioningState)
        setfield!(o, Symbol("provisioningState"), provisioningState)
        o
    end
end # type ServiceEndpointPropertiesFormat2

const _property_map_ServiceEndpointPropertiesFormat2 = Dict{Symbol,Symbol}(Symbol("service")=>Symbol("service"), Symbol("locations")=>Symbol("locations"), Symbol("provisioningState")=>Symbol("provisioningState"))
const _property_types_ServiceEndpointPropertiesFormat2 = Dict{Symbol,String}(Symbol("service")=>"String", Symbol("locations")=>"Vector{String}", Symbol("provisioningState")=>"ProvisioningState")
Base.propertynames(::Type{ ServiceEndpointPropertiesFormat2 }) = collect(keys(_property_map_ServiceEndpointPropertiesFormat2))
Swagger.property_type(::Type{ ServiceEndpointPropertiesFormat2 }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ServiceEndpointPropertiesFormat2[name]))}
Swagger.field_name(::Type{ ServiceEndpointPropertiesFormat2 }, property_name::Symbol) =  _property_map_ServiceEndpointPropertiesFormat2[property_name]

function check_required(o::ServiceEndpointPropertiesFormat2)
    true
end

function validate_property(::Type{ ServiceEndpointPropertiesFormat2 }, name::Symbol, val)
end
