# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct VirtualNetworkPeeringsApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `VirtualNetworkPeeringsApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ VirtualNetworkPeeringsApi }) = "https://management.azure.com"

const _returntypes_virtual_network_peerings_create_or_update_VirtualNetworkPeeringsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => VirtualNetworkPeering,
    Regex("^" * replace("201", "x"=>".") * "\$") => VirtualNetworkPeering,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_virtual_network_peerings_create_or_update(_api::VirtualNetworkPeeringsApi, resource_group_name::String, virtual_network_name::String, virtual_network_peering_name::String, api_version::String, subscription_id::String, virtual_network_peering_parameters::VirtualNetworkPeering; sync_remote_address_space=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_virtual_network_peerings_create_or_update_VirtualNetworkPeeringsApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings/{virtualNetworkPeeringName}", ["azure_auth", ], virtual_network_peering_parameters)
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "virtualNetworkName", virtual_network_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "virtualNetworkPeeringName", virtual_network_peering_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "syncRemoteAddressSpace", sync_remote_address_space; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Creates or updates a peering in the specified virtual network.

Params:
- resource_group_name::String (required)
- virtual_network_name::String (required)
- virtual_network_peering_name::String (required)
- api_version::String (required)
- subscription_id::String (required)
- virtual_network_peering_parameters::VirtualNetworkPeering (required)
- sync_remote_address_space::String

Return: VirtualNetworkPeering, OpenAPI.Clients.ApiResponse
"""
function virtual_network_peerings_create_or_update(_api::VirtualNetworkPeeringsApi, resource_group_name::String, virtual_network_name::String, virtual_network_peering_name::String, api_version::String, subscription_id::String, virtual_network_peering_parameters::VirtualNetworkPeering; sync_remote_address_space=nothing, _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_peerings_create_or_update(_api, resource_group_name, virtual_network_name, virtual_network_peering_name, api_version, subscription_id, virtual_network_peering_parameters; sync_remote_address_space=sync_remote_address_space, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function virtual_network_peerings_create_or_update(_api::VirtualNetworkPeeringsApi, response_stream::Channel, resource_group_name::String, virtual_network_name::String, virtual_network_peering_name::String, api_version::String, subscription_id::String, virtual_network_peering_parameters::VirtualNetworkPeering; sync_remote_address_space=nothing, _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_peerings_create_or_update(_api, resource_group_name, virtual_network_name, virtual_network_peering_name, api_version, subscription_id, virtual_network_peering_parameters; sync_remote_address_space=sync_remote_address_space, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_virtual_network_peerings_delete_VirtualNetworkPeeringsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("202", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_virtual_network_peerings_delete(_api::VirtualNetworkPeeringsApi, resource_group_name::String, virtual_network_name::String, virtual_network_peering_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_virtual_network_peerings_delete_VirtualNetworkPeeringsApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings/{virtualNetworkPeeringName}", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "virtualNetworkName", virtual_network_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "virtualNetworkPeeringName", virtual_network_peering_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Deletes the specified virtual network peering.

Params:
- resource_group_name::String (required)
- virtual_network_name::String (required)
- virtual_network_peering_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function virtual_network_peerings_delete(_api::VirtualNetworkPeeringsApi, resource_group_name::String, virtual_network_name::String, virtual_network_peering_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_peerings_delete(_api, resource_group_name, virtual_network_name, virtual_network_peering_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function virtual_network_peerings_delete(_api::VirtualNetworkPeeringsApi, response_stream::Channel, resource_group_name::String, virtual_network_name::String, virtual_network_peering_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_peerings_delete(_api, resource_group_name, virtual_network_name, virtual_network_peering_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_virtual_network_peerings_get_VirtualNetworkPeeringsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => VirtualNetworkPeering,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_virtual_network_peerings_get(_api::VirtualNetworkPeeringsApi, resource_group_name::String, virtual_network_name::String, virtual_network_peering_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_virtual_network_peerings_get_VirtualNetworkPeeringsApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings/{virtualNetworkPeeringName}", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "virtualNetworkName", virtual_network_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "virtualNetworkPeeringName", virtual_network_peering_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Gets the specified virtual network peering.

Params:
- resource_group_name::String (required)
- virtual_network_name::String (required)
- virtual_network_peering_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: VirtualNetworkPeering, OpenAPI.Clients.ApiResponse
"""
function virtual_network_peerings_get(_api::VirtualNetworkPeeringsApi, resource_group_name::String, virtual_network_name::String, virtual_network_peering_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_peerings_get(_api, resource_group_name, virtual_network_name, virtual_network_peering_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function virtual_network_peerings_get(_api::VirtualNetworkPeeringsApi, response_stream::Channel, resource_group_name::String, virtual_network_name::String, virtual_network_peering_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_peerings_get(_api, resource_group_name, virtual_network_name, virtual_network_peering_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_virtual_network_peerings_list_VirtualNetworkPeeringsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => VirtualNetworkPeeringListResult,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_virtual_network_peerings_list(_api::VirtualNetworkPeeringsApi, resource_group_name::String, virtual_network_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_virtual_network_peerings_list_VirtualNetworkPeeringsApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "virtualNetworkName", virtual_network_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Gets all virtual network peerings in a virtual network.

Params:
- resource_group_name::String (required)
- virtual_network_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: VirtualNetworkPeeringListResult, OpenAPI.Clients.ApiResponse
"""
function virtual_network_peerings_list(_api::VirtualNetworkPeeringsApi, resource_group_name::String, virtual_network_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_peerings_list(_api, resource_group_name, virtual_network_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function virtual_network_peerings_list(_api::VirtualNetworkPeeringsApi, response_stream::Channel, resource_group_name::String, virtual_network_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_peerings_list(_api, resource_group_name, virtual_network_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export virtual_network_peerings_create_or_update
export virtual_network_peerings_delete
export virtual_network_peerings_get
export virtual_network_peerings_list
