# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ServiceDelegationPropertiesFormat_2
Properties of a service delegation.

    ServiceDelegationPropertiesFormat2(;
        serviceName=nothing,
        actions=nothing,
        provisioningState=nothing,
    )

    - serviceName::String : The name of the service to whom the subnet should be delegated (e.g. Microsoft.Sql/servers).
    - actions::Vector{String} : The actions permitted to the service upon delegation.
    - provisioningState::ProvisioningState
"""
Base.@kwdef mutable struct ServiceDelegationPropertiesFormat2 <: OpenAPI.APIModel
    serviceName::Union{Nothing, String} = nothing
    actions::Union{Nothing, Vector{String}} = nothing
    provisioningState = nothing # spec type: Union{ Nothing, ProvisioningState }

    function ServiceDelegationPropertiesFormat2(serviceName, actions, provisioningState, )
        o = new(serviceName, actions, provisioningState, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type ServiceDelegationPropertiesFormat2

const _property_types_ServiceDelegationPropertiesFormat2 = Dict{Symbol,String}(Symbol("serviceName")=>"String", Symbol("actions")=>"Vector{String}", Symbol("provisioningState")=>"ProvisioningState", )
OpenAPI.property_type(::Type{ ServiceDelegationPropertiesFormat2 }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ServiceDelegationPropertiesFormat2[name]))}

function OpenAPI.check_required(o::ServiceDelegationPropertiesFormat2)
    true
end

function OpenAPI.validate_properties(o::ServiceDelegationPropertiesFormat2)
    OpenAPI.validate_property(ServiceDelegationPropertiesFormat2, Symbol("serviceName"), o.serviceName)
    OpenAPI.validate_property(ServiceDelegationPropertiesFormat2, Symbol("actions"), o.actions)
    OpenAPI.validate_property(ServiceDelegationPropertiesFormat2, Symbol("provisioningState"), o.provisioningState)
end

function OpenAPI.validate_property(::Type{ ServiceDelegationPropertiesFormat2 }, name::Symbol, val)



end
