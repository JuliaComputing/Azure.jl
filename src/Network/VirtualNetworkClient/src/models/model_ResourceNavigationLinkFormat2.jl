# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ResourceNavigationLinkFormat_2
Properties of ResourceNavigationLink.

    ResourceNavigationLinkFormat2(;
        linkedResourceType=nothing,
        link=nothing,
        provisioningState=nothing,
    )

    - linkedResourceType::String : Resource type of the linked resource.
    - link::String : Link to the external resource.
    - provisioningState::ProvisioningState
"""
Base.@kwdef mutable struct ResourceNavigationLinkFormat2 <: OpenAPI.APIModel
    linkedResourceType::Union{Nothing, String} = nothing
    link::Union{Nothing, String} = nothing
    provisioningState = nothing # spec type: Union{ Nothing, ProvisioningState }

    function ResourceNavigationLinkFormat2(linkedResourceType, link, provisioningState, )
        OpenAPI.validate_property(ResourceNavigationLinkFormat2, Symbol("linkedResourceType"), linkedResourceType)
        OpenAPI.validate_property(ResourceNavigationLinkFormat2, Symbol("link"), link)
        OpenAPI.validate_property(ResourceNavigationLinkFormat2, Symbol("provisioningState"), provisioningState)
        return new(linkedResourceType, link, provisioningState, )
    end
end # type ResourceNavigationLinkFormat2

const _property_types_ResourceNavigationLinkFormat2 = Dict{Symbol,String}(Symbol("linkedResourceType")=>"String", Symbol("link")=>"String", Symbol("provisioningState")=>"ProvisioningState", )
OpenAPI.property_type(::Type{ ResourceNavigationLinkFormat2 }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ResourceNavigationLinkFormat2[name]))}

function check_required(o::ResourceNavigationLinkFormat2)
    true
end

function OpenAPI.validate_property(::Type{ ResourceNavigationLinkFormat2 }, name::Symbol, val)
end
