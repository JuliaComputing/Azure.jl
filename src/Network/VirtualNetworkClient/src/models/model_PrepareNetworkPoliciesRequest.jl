# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""PrepareNetworkPoliciesRequest
Details of PrepareNetworkPolicies for Subnet.

    PrepareNetworkPoliciesRequest(;
        serviceName=nothing,
        networkIntentPolicyConfigurations=nothing,
    )

    - serviceName::String : The name of the service for which subnet is being prepared for.
    - networkIntentPolicyConfigurations::Vector{NetworkIntentPolicyConfiguration} : A list of NetworkIntentPolicyConfiguration.
"""
Base.@kwdef mutable struct PrepareNetworkPoliciesRequest <: OpenAPI.APIModel
    serviceName::Union{Nothing, String} = nothing
    networkIntentPolicyConfigurations::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{NetworkIntentPolicyConfiguration} }

    function PrepareNetworkPoliciesRequest(serviceName, networkIntentPolicyConfigurations, )
        OpenAPI.validate_property(PrepareNetworkPoliciesRequest, Symbol("serviceName"), serviceName)
        OpenAPI.validate_property(PrepareNetworkPoliciesRequest, Symbol("networkIntentPolicyConfigurations"), networkIntentPolicyConfigurations)
        return new(serviceName, networkIntentPolicyConfigurations, )
    end
end # type PrepareNetworkPoliciesRequest

const _property_types_PrepareNetworkPoliciesRequest = Dict{Symbol,String}(Symbol("serviceName")=>"String", Symbol("networkIntentPolicyConfigurations")=>"Vector{NetworkIntentPolicyConfiguration}", )
OpenAPI.property_type(::Type{ PrepareNetworkPoliciesRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_PrepareNetworkPoliciesRequest[name]))}

function check_required(o::PrepareNetworkPoliciesRequest)
    true
end

function OpenAPI.validate_property(::Type{ PrepareNetworkPoliciesRequest }, name::Symbol, val)
end
