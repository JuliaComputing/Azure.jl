# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Route
Route resource.

    Route(;
        properties=nothing,
        name=nothing,
        etag=nothing,
        id=nothing,
    )

    - properties::RoutePropertiesFormat
    - name::String : The name of the resource that is unique within a resource group. This name can be used to access the resource.
    - etag::String : A unique read-only string that changes whenever the resource is updated.
    - id::String : Resource ID.
"""
Base.@kwdef mutable struct Route <: OpenAPI.APIModel
    properties = nothing # spec type: Union{ Nothing, RoutePropertiesFormat }
    name::Union{Nothing, String} = nothing
    etag::Union{Nothing, String} = nothing
    id::Union{Nothing, String} = nothing

    function Route(properties, name, etag, id, )
        OpenAPI.validate_property(Route, Symbol("properties"), properties)
        OpenAPI.validate_property(Route, Symbol("name"), name)
        OpenAPI.validate_property(Route, Symbol("etag"), etag)
        OpenAPI.validate_property(Route, Symbol("id"), id)
        return new(properties, name, etag, id, )
    end
end # type Route

const _property_types_Route = Dict{Symbol,String}(Symbol("properties")=>"RoutePropertiesFormat", Symbol("name")=>"String", Symbol("etag")=>"String", Symbol("id")=>"String", )
OpenAPI.property_type(::Type{ Route }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Route[name]))}

function check_required(o::Route)
    true
end

function OpenAPI.validate_property(::Type{ Route }, name::Symbol, val)
end
