# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""IpamPoolPrefixAllocation_2
IpamPool prefix allocation reference.

    IpamPoolPrefixAllocation2(;
        pool=nothing,
        numberOfIpAddresses=nothing,
        allocatedAddressPrefixes=nothing,
    )

    - pool::IpamPoolPrefixAllocationPool
    - numberOfIpAddresses::String : Number of IP addresses to allocate.
    - allocatedAddressPrefixes::Vector{String} : List of assigned IP address prefixes in the IpamPool of the associated resource.
"""
Base.@kwdef mutable struct IpamPoolPrefixAllocation2 <: OpenAPI.APIModel
    pool = nothing # spec type: Union{ Nothing, IpamPoolPrefixAllocationPool }
    numberOfIpAddresses::Union{Nothing, String} = nothing
    allocatedAddressPrefixes::Union{Nothing, Vector{String}} = nothing

    function IpamPoolPrefixAllocation2(pool, numberOfIpAddresses, allocatedAddressPrefixes, )
        o = new(pool, numberOfIpAddresses, allocatedAddressPrefixes, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type IpamPoolPrefixAllocation2

const _property_types_IpamPoolPrefixAllocation2 = Dict{Symbol,String}(Symbol("pool")=>"IpamPoolPrefixAllocationPool", Symbol("numberOfIpAddresses")=>"String", Symbol("allocatedAddressPrefixes")=>"Vector{String}", )
OpenAPI.property_type(::Type{ IpamPoolPrefixAllocation2 }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IpamPoolPrefixAllocation2[name]))}

function OpenAPI.check_required(o::IpamPoolPrefixAllocation2)
    true
end

function OpenAPI.validate_properties(o::IpamPoolPrefixAllocation2)
    OpenAPI.validate_property(IpamPoolPrefixAllocation2, Symbol("pool"), o.pool)
    OpenAPI.validate_property(IpamPoolPrefixAllocation2, Symbol("numberOfIpAddresses"), o.numberOfIpAddresses)
    OpenAPI.validate_property(IpamPoolPrefixAllocation2, Symbol("allocatedAddressPrefixes"), o.allocatedAddressPrefixes)
end

function OpenAPI.validate_property(::Type{ IpamPoolPrefixAllocation2 }, name::Symbol, val)



end
