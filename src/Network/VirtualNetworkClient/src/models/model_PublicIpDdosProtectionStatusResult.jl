# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""PublicIpDdosProtectionStatusResult
Response for GetPublicIpAddressDdosProtectionStatusOperation API service call.

    PublicIpDdosProtectionStatusResult(;
        publicIpAddressId=nothing,
        publicIpAddress=nothing,
        isWorkloadProtected=nothing,
        ddosProtectionPlanId=nothing,
    )

    - publicIpAddressId::String : Public IP ARM resource ID
    - publicIpAddress::String : IP Address of the Public IP Resource
    - isWorkloadProtected::String : Value indicating whether the IP address is DDoS workload protected or not.
    - ddosProtectionPlanId::String :  DDoS protection plan Resource Id of a if IP address is protected through a plan.
"""
Base.@kwdef mutable struct PublicIpDdosProtectionStatusResult <: OpenAPI.APIModel
    publicIpAddressId::Union{Nothing, String} = nothing
    publicIpAddress::Union{Nothing, String} = nothing
    isWorkloadProtected::Union{Nothing, String} = nothing
    ddosProtectionPlanId::Union{Nothing, String} = nothing

    function PublicIpDdosProtectionStatusResult(publicIpAddressId, publicIpAddress, isWorkloadProtected, ddosProtectionPlanId, )
        o = new(publicIpAddressId, publicIpAddress, isWorkloadProtected, ddosProtectionPlanId, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type PublicIpDdosProtectionStatusResult

const _property_types_PublicIpDdosProtectionStatusResult = Dict{Symbol,String}(Symbol("publicIpAddressId")=>"String", Symbol("publicIpAddress")=>"String", Symbol("isWorkloadProtected")=>"String", Symbol("ddosProtectionPlanId")=>"String", )
OpenAPI.property_type(::Type{ PublicIpDdosProtectionStatusResult }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_PublicIpDdosProtectionStatusResult[name]))}

function OpenAPI.check_required(o::PublicIpDdosProtectionStatusResult)
    true
end

function OpenAPI.validate_properties(o::PublicIpDdosProtectionStatusResult)
    OpenAPI.validate_property(PublicIpDdosProtectionStatusResult, Symbol("publicIpAddressId"), o.publicIpAddressId)
    OpenAPI.validate_property(PublicIpDdosProtectionStatusResult, Symbol("publicIpAddress"), o.publicIpAddress)
    OpenAPI.validate_property(PublicIpDdosProtectionStatusResult, Symbol("isWorkloadProtected"), o.isWorkloadProtected)
    OpenAPI.validate_property(PublicIpDdosProtectionStatusResult, Symbol("ddosProtectionPlanId"), o.ddosProtectionPlanId)
end

function OpenAPI.validate_property(::Type{ PublicIpDdosProtectionStatusResult }, name::Symbol, val)



    if name === Symbol("isWorkloadProtected")
        OpenAPI.validate_param(name, "PublicIpDdosProtectionStatusResult", :enum, val, ["False", "True"])
    end


end
