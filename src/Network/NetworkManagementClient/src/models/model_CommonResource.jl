# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""CommonResource
Common fields that are returned in the response for all Azure Resource Manager resources

    CommonResource(;
        id=nothing,
        name=nothing,
        type=nothing,
        systemData=nothing,
    )

    - id::String : Fully qualified resource ID for the resource. E.g. \&quot;/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\&quot;
    - name::String : The name of the resource
    - type::String : The type of the resource. E.g. \&quot;Microsoft.Compute/virtualMachines\&quot; or \&quot;Microsoft.Storage/storageAccounts\&quot;
    - systemData::SystemData
"""
Base.@kwdef mutable struct CommonResource <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing
    systemData = nothing # spec type: Union{ Nothing, SystemData }

    function CommonResource(id, name, type, systemData, )
        o = new(id, name, type, systemData, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type CommonResource

const _property_types_CommonResource = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("name")=>"String", Symbol("type")=>"String", Symbol("systemData")=>"SystemData", )
OpenAPI.property_type(::Type{ CommonResource }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CommonResource[name]))}

function OpenAPI.check_required(o::CommonResource)
    true
end

function OpenAPI.validate_properties(o::CommonResource)
    OpenAPI.validate_property(CommonResource, Symbol("id"), o.id)
    OpenAPI.validate_property(CommonResource, Symbol("name"), o.name)
    OpenAPI.validate_property(CommonResource, Symbol("type"), o.type)
    OpenAPI.validate_property(CommonResource, Symbol("systemData"), o.systemData)
end

function OpenAPI.validate_property(::Type{ CommonResource }, name::Symbol, val)

    if name === Symbol("id")
        OpenAPI.validate_param(name, "CommonResource", :format, val, "arm-id")
    end



end
