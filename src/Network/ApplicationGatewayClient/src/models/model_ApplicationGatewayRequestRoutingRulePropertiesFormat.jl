# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ApplicationGatewayRequestRoutingRulePropertiesFormat
Properties of request routing rule of the application gateway.

    ApplicationGatewayRequestRoutingRulePropertiesFormat(;
        ruleType=nothing,
        priority=nothing,
        backendAddressPool=nothing,
        backendHttpSettings=nothing,
        httpListener=nothing,
        urlPathMap=nothing,
        rewriteRuleSet=nothing,
        redirectConfiguration=nothing,
        provisioningState=nothing,
    )

    - ruleType::String : Rule type.
    - priority::Int64 : Priority of the request routing rule.
    - backendAddressPool::SubResource
    - backendHttpSettings::SubResource
    - httpListener::SubResource
    - urlPathMap::SubResource
    - rewriteRuleSet::SubResource
    - redirectConfiguration::SubResource
    - provisioningState::ProvisioningState
"""
Base.@kwdef mutable struct ApplicationGatewayRequestRoutingRulePropertiesFormat <: OpenAPI.APIModel
    ruleType::Union{Nothing, String} = nothing
    priority::Union{Nothing, Int64} = nothing
    backendAddressPool = nothing # spec type: Union{ Nothing, SubResource }
    backendHttpSettings = nothing # spec type: Union{ Nothing, SubResource }
    httpListener = nothing # spec type: Union{ Nothing, SubResource }
    urlPathMap = nothing # spec type: Union{ Nothing, SubResource }
    rewriteRuleSet = nothing # spec type: Union{ Nothing, SubResource }
    redirectConfiguration = nothing # spec type: Union{ Nothing, SubResource }
    provisioningState = nothing # spec type: Union{ Nothing, ProvisioningState }

    function ApplicationGatewayRequestRoutingRulePropertiesFormat(ruleType, priority, backendAddressPool, backendHttpSettings, httpListener, urlPathMap, rewriteRuleSet, redirectConfiguration, provisioningState, )
        OpenAPI.validate_property(ApplicationGatewayRequestRoutingRulePropertiesFormat, Symbol("ruleType"), ruleType)
        OpenAPI.validate_property(ApplicationGatewayRequestRoutingRulePropertiesFormat, Symbol("priority"), priority)
        OpenAPI.validate_property(ApplicationGatewayRequestRoutingRulePropertiesFormat, Symbol("backendAddressPool"), backendAddressPool)
        OpenAPI.validate_property(ApplicationGatewayRequestRoutingRulePropertiesFormat, Symbol("backendHttpSettings"), backendHttpSettings)
        OpenAPI.validate_property(ApplicationGatewayRequestRoutingRulePropertiesFormat, Symbol("httpListener"), httpListener)
        OpenAPI.validate_property(ApplicationGatewayRequestRoutingRulePropertiesFormat, Symbol("urlPathMap"), urlPathMap)
        OpenAPI.validate_property(ApplicationGatewayRequestRoutingRulePropertiesFormat, Symbol("rewriteRuleSet"), rewriteRuleSet)
        OpenAPI.validate_property(ApplicationGatewayRequestRoutingRulePropertiesFormat, Symbol("redirectConfiguration"), redirectConfiguration)
        OpenAPI.validate_property(ApplicationGatewayRequestRoutingRulePropertiesFormat, Symbol("provisioningState"), provisioningState)
        return new(ruleType, priority, backendAddressPool, backendHttpSettings, httpListener, urlPathMap, rewriteRuleSet, redirectConfiguration, provisioningState, )
    end
end # type ApplicationGatewayRequestRoutingRulePropertiesFormat

const _property_types_ApplicationGatewayRequestRoutingRulePropertiesFormat = Dict{Symbol,String}(Symbol("ruleType")=>"String", Symbol("priority")=>"Int64", Symbol("backendAddressPool")=>"SubResource", Symbol("backendHttpSettings")=>"SubResource", Symbol("httpListener")=>"SubResource", Symbol("urlPathMap")=>"SubResource", Symbol("rewriteRuleSet")=>"SubResource", Symbol("redirectConfiguration")=>"SubResource", Symbol("provisioningState")=>"ProvisioningState", )
OpenAPI.property_type(::Type{ ApplicationGatewayRequestRoutingRulePropertiesFormat }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ApplicationGatewayRequestRoutingRulePropertiesFormat[name]))}

function check_required(o::ApplicationGatewayRequestRoutingRulePropertiesFormat)
    true
end

function OpenAPI.validate_property(::Type{ ApplicationGatewayRequestRoutingRulePropertiesFormat }, name::Symbol, val)
    if name === Symbol("ruleType")
        OpenAPI.validate_param(name, "ApplicationGatewayRequestRoutingRulePropertiesFormat", :enum, val, ["Basic", "PathBasedRouting"])
    end
    if name === Symbol("priority")
        OpenAPI.validate_param(name, "ApplicationGatewayRequestRoutingRulePropertiesFormat", :format, val, "int32")
    end
    if name === Symbol("priority")
        OpenAPI.validate_param(name, "ApplicationGatewayRequestRoutingRulePropertiesFormat", :maximum, val, 20000, false)
        OpenAPI.validate_param(name, "ApplicationGatewayRequestRoutingRulePropertiesFormat", :minimum, val, 1, false)
    end
end
