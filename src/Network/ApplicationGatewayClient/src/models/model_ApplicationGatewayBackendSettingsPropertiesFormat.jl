# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ApplicationGatewayBackendSettingsPropertiesFormat
Properties of Backend address pool settings of an application gateway.

    ApplicationGatewayBackendSettingsPropertiesFormat(;
        port=nothing,
        protocol=nothing,
        timeout=nothing,
        probe=nothing,
        trustedRootCertificates=nothing,
        hostName=nothing,
        pickHostNameFromBackendAddress=nothing,
        provisioningState=nothing,
    )

    - port::Int64 : The destination port on the backend.
    - protocol::ApplicationGatewayProtocol
    - timeout::Int64 : Connection timeout in seconds. Application Gateway will fail the request if response is not received within ConnectionTimeout. Acceptable values are from 1 second to 86400 seconds.
    - probe::SubResource
    - trustedRootCertificates::Vector{SubResource} : Array of references to application gateway trusted root certificates.
    - hostName::String : Server name indication to be sent to the backend servers for Tls protocol.
    - pickHostNameFromBackendAddress::Bool : Whether to pick server name indication from the host name of the backend server for Tls protocol. Default value is false.
    - provisioningState::ProvisioningState
"""
Base.@kwdef mutable struct ApplicationGatewayBackendSettingsPropertiesFormat <: OpenAPI.APIModel
    port::Union{Nothing, Int64} = nothing
    protocol = nothing # spec type: Union{ Nothing, ApplicationGatewayProtocol }
    timeout::Union{Nothing, Int64} = nothing
    probe = nothing # spec type: Union{ Nothing, SubResource }
    trustedRootCertificates::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{SubResource} }
    hostName::Union{Nothing, String} = nothing
    pickHostNameFromBackendAddress::Union{Nothing, Bool} = nothing
    provisioningState = nothing # spec type: Union{ Nothing, ProvisioningState }

    function ApplicationGatewayBackendSettingsPropertiesFormat(port, protocol, timeout, probe, trustedRootCertificates, hostName, pickHostNameFromBackendAddress, provisioningState, )
        o = new(port, protocol, timeout, probe, trustedRootCertificates, hostName, pickHostNameFromBackendAddress, provisioningState, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type ApplicationGatewayBackendSettingsPropertiesFormat

const _property_types_ApplicationGatewayBackendSettingsPropertiesFormat = Dict{Symbol,String}(Symbol("port")=>"Int64", Symbol("protocol")=>"ApplicationGatewayProtocol", Symbol("timeout")=>"Int64", Symbol("probe")=>"SubResource", Symbol("trustedRootCertificates")=>"Vector{SubResource}", Symbol("hostName")=>"String", Symbol("pickHostNameFromBackendAddress")=>"Bool", Symbol("provisioningState")=>"ProvisioningState", )
OpenAPI.property_type(::Type{ ApplicationGatewayBackendSettingsPropertiesFormat }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ApplicationGatewayBackendSettingsPropertiesFormat[name]))}

function OpenAPI.check_required(o::ApplicationGatewayBackendSettingsPropertiesFormat)
    true
end

function OpenAPI.validate_properties(o::ApplicationGatewayBackendSettingsPropertiesFormat)
    OpenAPI.validate_property(ApplicationGatewayBackendSettingsPropertiesFormat, Symbol("port"), o.port)
    OpenAPI.validate_property(ApplicationGatewayBackendSettingsPropertiesFormat, Symbol("protocol"), o.protocol)
    OpenAPI.validate_property(ApplicationGatewayBackendSettingsPropertiesFormat, Symbol("timeout"), o.timeout)
    OpenAPI.validate_property(ApplicationGatewayBackendSettingsPropertiesFormat, Symbol("probe"), o.probe)
    OpenAPI.validate_property(ApplicationGatewayBackendSettingsPropertiesFormat, Symbol("trustedRootCertificates"), o.trustedRootCertificates)
    OpenAPI.validate_property(ApplicationGatewayBackendSettingsPropertiesFormat, Symbol("hostName"), o.hostName)
    OpenAPI.validate_property(ApplicationGatewayBackendSettingsPropertiesFormat, Symbol("pickHostNameFromBackendAddress"), o.pickHostNameFromBackendAddress)
    OpenAPI.validate_property(ApplicationGatewayBackendSettingsPropertiesFormat, Symbol("provisioningState"), o.provisioningState)
end

function OpenAPI.validate_property(::Type{ ApplicationGatewayBackendSettingsPropertiesFormat }, name::Symbol, val)

    if name === Symbol("port")
        OpenAPI.validate_param(name, "ApplicationGatewayBackendSettingsPropertiesFormat", :format, val, "int32")
    end


    if name === Symbol("timeout")
        OpenAPI.validate_param(name, "ApplicationGatewayBackendSettingsPropertiesFormat", :format, val, "int32")
    end





end
