# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ApplicationGatewayBackendHttpSettings
Backend address pool settings of an application gateway.

    ApplicationGatewayBackendHttpSettings(;
        properties=nothing,
        name=nothing,
        etag=nothing,
        type=nothing,
        id=nothing,
    )

    - properties::ApplicationGatewayBackendHttpSettingsPropertiesFormat
    - name::String : Name of the backend http settings that is unique within an Application Gateway.
    - etag::String : A unique read-only string that changes whenever the resource is updated.
    - type::String : Type of the resource.
    - id::String : Resource ID.
"""
Base.@kwdef mutable struct ApplicationGatewayBackendHttpSettings <: OpenAPI.APIModel
    properties = nothing # spec type: Union{ Nothing, ApplicationGatewayBackendHttpSettingsPropertiesFormat }
    name::Union{Nothing, String} = nothing
    etag::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing
    id::Union{Nothing, String} = nothing

    function ApplicationGatewayBackendHttpSettings(properties, name, etag, type, id, )
        o = new(properties, name, etag, type, id, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type ApplicationGatewayBackendHttpSettings

const _property_types_ApplicationGatewayBackendHttpSettings = Dict{Symbol,String}(Symbol("properties")=>"ApplicationGatewayBackendHttpSettingsPropertiesFormat", Symbol("name")=>"String", Symbol("etag")=>"String", Symbol("type")=>"String", Symbol("id")=>"String", )
OpenAPI.property_type(::Type{ ApplicationGatewayBackendHttpSettings }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ApplicationGatewayBackendHttpSettings[name]))}

function OpenAPI.check_required(o::ApplicationGatewayBackendHttpSettings)
    true
end

function OpenAPI.validate_properties(o::ApplicationGatewayBackendHttpSettings)
    OpenAPI.validate_property(ApplicationGatewayBackendHttpSettings, Symbol("properties"), o.properties)
    OpenAPI.validate_property(ApplicationGatewayBackendHttpSettings, Symbol("name"), o.name)
    OpenAPI.validate_property(ApplicationGatewayBackendHttpSettings, Symbol("etag"), o.etag)
    OpenAPI.validate_property(ApplicationGatewayBackendHttpSettings, Symbol("type"), o.type)
    OpenAPI.validate_property(ApplicationGatewayBackendHttpSettings, Symbol("id"), o.id)
end

function OpenAPI.validate_property(::Type{ ApplicationGatewayBackendHttpSettings }, name::Symbol, val)





end
