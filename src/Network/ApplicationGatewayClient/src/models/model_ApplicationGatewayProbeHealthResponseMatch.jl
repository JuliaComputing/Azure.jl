# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ApplicationGatewayProbeHealthResponseMatch
Application gateway probe health response match.

    ApplicationGatewayProbeHealthResponseMatch(;
        body=nothing,
        statusCodes=nothing,
    )

    - body::String : Body that must be contained in the health response. Default value is empty.
    - statusCodes::Vector{String} : Allowed ranges of healthy status codes. Default range of healthy status codes is 200-399.
"""
Base.@kwdef mutable struct ApplicationGatewayProbeHealthResponseMatch <: OpenAPI.APIModel
    body::Union{Nothing, String} = nothing
    statusCodes::Union{Nothing, Vector{String}} = nothing

    function ApplicationGatewayProbeHealthResponseMatch(body, statusCodes, )
        o = new(body, statusCodes, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type ApplicationGatewayProbeHealthResponseMatch

const _property_types_ApplicationGatewayProbeHealthResponseMatch = Dict{Symbol,String}(Symbol("body")=>"String", Symbol("statusCodes")=>"Vector{String}", )
OpenAPI.property_type(::Type{ ApplicationGatewayProbeHealthResponseMatch }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ApplicationGatewayProbeHealthResponseMatch[name]))}

function OpenAPI.check_required(o::ApplicationGatewayProbeHealthResponseMatch)
    true
end

function OpenAPI.validate_properties(o::ApplicationGatewayProbeHealthResponseMatch)
    OpenAPI.validate_property(ApplicationGatewayProbeHealthResponseMatch, Symbol("body"), o.body)
    OpenAPI.validate_property(ApplicationGatewayProbeHealthResponseMatch, Symbol("statusCodes"), o.statusCodes)
end

function OpenAPI.validate_property(::Type{ ApplicationGatewayProbeHealthResponseMatch }, name::Symbol, val)


end
