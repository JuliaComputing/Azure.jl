# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ApplicationGatewaySslProfilePropertiesFormat
Properties of SSL profile of an application gateway.

    ApplicationGatewaySslProfilePropertiesFormat(;
        trustedClientCertificates=nothing,
        sslPolicy=nothing,
        clientAuthConfiguration=nothing,
        provisioningState=nothing,
    )

    - trustedClientCertificates::Vector{SubResource} : Array of references to application gateway trusted client certificates.
    - sslPolicy::ApplicationGatewaySslPolicy
    - clientAuthConfiguration::ApplicationGatewayClientAuthConfiguration
    - provisioningState::ProvisioningState
"""
Base.@kwdef mutable struct ApplicationGatewaySslProfilePropertiesFormat <: OpenAPI.APIModel
    trustedClientCertificates::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{SubResource} }
    sslPolicy = nothing # spec type: Union{ Nothing, ApplicationGatewaySslPolicy }
    clientAuthConfiguration = nothing # spec type: Union{ Nothing, ApplicationGatewayClientAuthConfiguration }
    provisioningState = nothing # spec type: Union{ Nothing, ProvisioningState }

    function ApplicationGatewaySslProfilePropertiesFormat(trustedClientCertificates, sslPolicy, clientAuthConfiguration, provisioningState, )
        o = new(trustedClientCertificates, sslPolicy, clientAuthConfiguration, provisioningState, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type ApplicationGatewaySslProfilePropertiesFormat

const _property_types_ApplicationGatewaySslProfilePropertiesFormat = Dict{Symbol,String}(Symbol("trustedClientCertificates")=>"Vector{SubResource}", Symbol("sslPolicy")=>"ApplicationGatewaySslPolicy", Symbol("clientAuthConfiguration")=>"ApplicationGatewayClientAuthConfiguration", Symbol("provisioningState")=>"ProvisioningState", )
OpenAPI.property_type(::Type{ ApplicationGatewaySslProfilePropertiesFormat }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ApplicationGatewaySslProfilePropertiesFormat[name]))}

function OpenAPI.check_required(o::ApplicationGatewaySslProfilePropertiesFormat)
    true
end

function OpenAPI.validate_properties(o::ApplicationGatewaySslProfilePropertiesFormat)
    OpenAPI.validate_property(ApplicationGatewaySslProfilePropertiesFormat, Symbol("trustedClientCertificates"), o.trustedClientCertificates)
    OpenAPI.validate_property(ApplicationGatewaySslProfilePropertiesFormat, Symbol("sslPolicy"), o.sslPolicy)
    OpenAPI.validate_property(ApplicationGatewaySslProfilePropertiesFormat, Symbol("clientAuthConfiguration"), o.clientAuthConfiguration)
    OpenAPI.validate_property(ApplicationGatewaySslProfilePropertiesFormat, Symbol("provisioningState"), o.provisioningState)
end

function OpenAPI.validate_property(::Type{ ApplicationGatewaySslProfilePropertiesFormat }, name::Symbol, val)




end
