# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ApplicationGatewayGlobalConfiguration
Application Gateway global configuration.

    ApplicationGatewayGlobalConfiguration(;
        enableRequestBuffering=nothing,
        enableResponseBuffering=nothing,
    )

    - enableRequestBuffering::Bool : Enable request buffering.
    - enableResponseBuffering::Bool : Enable response buffering.
"""
Base.@kwdef mutable struct ApplicationGatewayGlobalConfiguration <: OpenAPI.APIModel
    enableRequestBuffering::Union{Nothing, Bool} = nothing
    enableResponseBuffering::Union{Nothing, Bool} = nothing

    function ApplicationGatewayGlobalConfiguration(enableRequestBuffering, enableResponseBuffering, )
        o = new(enableRequestBuffering, enableResponseBuffering, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type ApplicationGatewayGlobalConfiguration

const _property_types_ApplicationGatewayGlobalConfiguration = Dict{Symbol,String}(Symbol("enableRequestBuffering")=>"Bool", Symbol("enableResponseBuffering")=>"Bool", )
OpenAPI.property_type(::Type{ ApplicationGatewayGlobalConfiguration }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ApplicationGatewayGlobalConfiguration[name]))}

function OpenAPI.check_required(o::ApplicationGatewayGlobalConfiguration)
    true
end

function OpenAPI.validate_properties(o::ApplicationGatewayGlobalConfiguration)
    OpenAPI.validate_property(ApplicationGatewayGlobalConfiguration, Symbol("enableRequestBuffering"), o.enableRequestBuffering)
    OpenAPI.validate_property(ApplicationGatewayGlobalConfiguration, Symbol("enableResponseBuffering"), o.enableResponseBuffering)
end

function OpenAPI.validate_property(::Type{ ApplicationGatewayGlobalConfiguration }, name::Symbol, val)


end
