# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ApplicationGatewayUrlPathMap
UrlPathMaps give a url path to the backend mapping information for PathBasedRouting.

    ApplicationGatewayUrlPathMap(;
        properties=nothing,
        name=nothing,
        etag=nothing,
        type=nothing,
        id=nothing,
    )

    - properties::ApplicationGatewayUrlPathMapPropertiesFormat
    - name::String : Name of the URL path map that is unique within an Application Gateway.
    - etag::String : A unique read-only string that changes whenever the resource is updated.
    - type::String : Type of the resource.
    - id::String : Resource ID.
"""
Base.@kwdef mutable struct ApplicationGatewayUrlPathMap <: OpenAPI.APIModel
    properties = nothing # spec type: Union{ Nothing, ApplicationGatewayUrlPathMapPropertiesFormat }
    name::Union{Nothing, String} = nothing
    etag::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing
    id::Union{Nothing, String} = nothing

    function ApplicationGatewayUrlPathMap(properties, name, etag, type, id, )
        o = new(properties, name, etag, type, id, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type ApplicationGatewayUrlPathMap

const _property_types_ApplicationGatewayUrlPathMap = Dict{Symbol,String}(Symbol("properties")=>"ApplicationGatewayUrlPathMapPropertiesFormat", Symbol("name")=>"String", Symbol("etag")=>"String", Symbol("type")=>"String", Symbol("id")=>"String", )
OpenAPI.property_type(::Type{ ApplicationGatewayUrlPathMap }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ApplicationGatewayUrlPathMap[name]))}

function OpenAPI.check_required(o::ApplicationGatewayUrlPathMap)
    true
end

function OpenAPI.validate_properties(o::ApplicationGatewayUrlPathMap)
    OpenAPI.validate_property(ApplicationGatewayUrlPathMap, Symbol("properties"), o.properties)
    OpenAPI.validate_property(ApplicationGatewayUrlPathMap, Symbol("name"), o.name)
    OpenAPI.validate_property(ApplicationGatewayUrlPathMap, Symbol("etag"), o.etag)
    OpenAPI.validate_property(ApplicationGatewayUrlPathMap, Symbol("type"), o.type)
    OpenAPI.validate_property(ApplicationGatewayUrlPathMap, Symbol("id"), o.id)
end

function OpenAPI.validate_property(::Type{ ApplicationGatewayUrlPathMap }, name::Symbol, val)





end
