# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""HeaderValueMatcher
An optional field under \&quot;Rewrite Action\&quot;. It lets you capture and modify the value(s) of a specific header when multiple headers with the same name exist. Currently supported for Set-Cookie Response header only. For more details, visit https://aka.ms/appgwheadercrud

    HeaderValueMatcher(;
        pattern=nothing,
        ignoreCase=nothing,
        negate=nothing,
    )

    - pattern::String : The pattern, either fixed string or regular expression, that evaluates if a header value should be selected for rewrite.
    - ignoreCase::Bool : Setting this parameter to truth value with force the pattern to do a case in-sensitive comparison.
    - negate::Bool : Setting this value as truth will force to check the negation of the condition given by the user in the pattern field.
"""
Base.@kwdef mutable struct HeaderValueMatcher <: OpenAPI.APIModel
    pattern::Union{Nothing, String} = nothing
    ignoreCase::Union{Nothing, Bool} = nothing
    negate::Union{Nothing, Bool} = nothing

    function HeaderValueMatcher(pattern, ignoreCase, negate, )
        o = new(pattern, ignoreCase, negate, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type HeaderValueMatcher

const _property_types_HeaderValueMatcher = Dict{Symbol,String}(Symbol("pattern")=>"String", Symbol("ignoreCase")=>"Bool", Symbol("negate")=>"Bool", )
OpenAPI.property_type(::Type{ HeaderValueMatcher }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_HeaderValueMatcher[name]))}

function OpenAPI.check_required(o::HeaderValueMatcher)
    true
end

function OpenAPI.validate_properties(o::HeaderValueMatcher)
    OpenAPI.validate_property(HeaderValueMatcher, Symbol("pattern"), o.pattern)
    OpenAPI.validate_property(HeaderValueMatcher, Symbol("ignoreCase"), o.ignoreCase)
    OpenAPI.validate_property(HeaderValueMatcher, Symbol("negate"), o.negate)
end

function OpenAPI.validate_property(::Type{ HeaderValueMatcher }, name::Symbol, val)



end
