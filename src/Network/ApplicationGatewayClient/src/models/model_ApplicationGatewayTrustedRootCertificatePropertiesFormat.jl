# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ApplicationGatewayTrustedRootCertificatePropertiesFormat
Trusted Root certificates properties of an application gateway.

    ApplicationGatewayTrustedRootCertificatePropertiesFormat(;
        data=nothing,
        keyVaultSecretId=nothing,
        provisioningState=nothing,
    )

    - data::String : Certificate public data.
    - keyVaultSecretId::String : Secret Id of (base-64 encoded unencrypted pfx) &#39;Secret&#39; or &#39;Certificate&#39; object stored in KeyVault.
    - provisioningState::ProvisioningState
"""
Base.@kwdef mutable struct ApplicationGatewayTrustedRootCertificatePropertiesFormat <: OpenAPI.APIModel
    data::Union{Nothing, String} = nothing
    keyVaultSecretId::Union{Nothing, String} = nothing
    provisioningState = nothing # spec type: Union{ Nothing, ProvisioningState }

    function ApplicationGatewayTrustedRootCertificatePropertiesFormat(data, keyVaultSecretId, provisioningState, )
        OpenAPI.validate_property(ApplicationGatewayTrustedRootCertificatePropertiesFormat, Symbol("data"), data)
        OpenAPI.validate_property(ApplicationGatewayTrustedRootCertificatePropertiesFormat, Symbol("keyVaultSecretId"), keyVaultSecretId)
        OpenAPI.validate_property(ApplicationGatewayTrustedRootCertificatePropertiesFormat, Symbol("provisioningState"), provisioningState)
        return new(data, keyVaultSecretId, provisioningState, )
    end
end # type ApplicationGatewayTrustedRootCertificatePropertiesFormat

const _property_types_ApplicationGatewayTrustedRootCertificatePropertiesFormat = Dict{Symbol,String}(Symbol("data")=>"String", Symbol("keyVaultSecretId")=>"String", Symbol("provisioningState")=>"ProvisioningState", )
OpenAPI.property_type(::Type{ ApplicationGatewayTrustedRootCertificatePropertiesFormat }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ApplicationGatewayTrustedRootCertificatePropertiesFormat[name]))}

function check_required(o::ApplicationGatewayTrustedRootCertificatePropertiesFormat)
    true
end

function OpenAPI.validate_property(::Type{ ApplicationGatewayTrustedRootCertificatePropertiesFormat }, name::Symbol, val)
end
