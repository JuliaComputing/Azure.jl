# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ApplicationGatewayPrivateLinkIpConfigurationProperties
Properties of an application gateway private link IP configuration.

    ApplicationGatewayPrivateLinkIpConfigurationProperties(;
        privateIPAddress=nothing,
        privateIPAllocationMethod=nothing,
        subnet=nothing,
        primary=nothing,
        provisioningState=nothing,
    )

    - privateIPAddress::String : The private IP address of the IP configuration.
    - privateIPAllocationMethod::IPAllocationMethod
    - subnet::SubResource
    - primary::Bool : Whether the ip configuration is primary or not.
    - provisioningState::ProvisioningState
"""
Base.@kwdef mutable struct ApplicationGatewayPrivateLinkIpConfigurationProperties <: OpenAPI.APIModel
    privateIPAddress::Union{Nothing, String} = nothing
    privateIPAllocationMethod = nothing # spec type: Union{ Nothing, IPAllocationMethod }
    subnet = nothing # spec type: Union{ Nothing, SubResource }
    primary::Union{Nothing, Bool} = nothing
    provisioningState = nothing # spec type: Union{ Nothing, ProvisioningState }

    function ApplicationGatewayPrivateLinkIpConfigurationProperties(privateIPAddress, privateIPAllocationMethod, subnet, primary, provisioningState, )
        o = new(privateIPAddress, privateIPAllocationMethod, subnet, primary, provisioningState, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type ApplicationGatewayPrivateLinkIpConfigurationProperties

const _property_types_ApplicationGatewayPrivateLinkIpConfigurationProperties = Dict{Symbol,String}(Symbol("privateIPAddress")=>"String", Symbol("privateIPAllocationMethod")=>"IPAllocationMethod", Symbol("subnet")=>"SubResource", Symbol("primary")=>"Bool", Symbol("provisioningState")=>"ProvisioningState", )
OpenAPI.property_type(::Type{ ApplicationGatewayPrivateLinkIpConfigurationProperties }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ApplicationGatewayPrivateLinkIpConfigurationProperties[name]))}

function OpenAPI.check_required(o::ApplicationGatewayPrivateLinkIpConfigurationProperties)
    true
end

function OpenAPI.validate_properties(o::ApplicationGatewayPrivateLinkIpConfigurationProperties)
    OpenAPI.validate_property(ApplicationGatewayPrivateLinkIpConfigurationProperties, Symbol("privateIPAddress"), o.privateIPAddress)
    OpenAPI.validate_property(ApplicationGatewayPrivateLinkIpConfigurationProperties, Symbol("privateIPAllocationMethod"), o.privateIPAllocationMethod)
    OpenAPI.validate_property(ApplicationGatewayPrivateLinkIpConfigurationProperties, Symbol("subnet"), o.subnet)
    OpenAPI.validate_property(ApplicationGatewayPrivateLinkIpConfigurationProperties, Symbol("primary"), o.primary)
    OpenAPI.validate_property(ApplicationGatewayPrivateLinkIpConfigurationProperties, Symbol("provisioningState"), o.provisioningState)
end

function OpenAPI.validate_property(::Type{ ApplicationGatewayPrivateLinkIpConfigurationProperties }, name::Symbol, val)





end
