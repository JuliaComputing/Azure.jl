# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ApplicationGatewayCustomError
Customer error of an application gateway.

    ApplicationGatewayCustomError(;
        statusCode=nothing,
        customErrorPageUrl=nothing,
    )

    - statusCode::String : Status code of the application gateway customer error.
    - customErrorPageUrl::String : Error page URL of the application gateway customer error.
"""
Base.@kwdef mutable struct ApplicationGatewayCustomError <: OpenAPI.APIModel
    statusCode::Union{Nothing, String} = nothing
    customErrorPageUrl::Union{Nothing, String} = nothing

    function ApplicationGatewayCustomError(statusCode, customErrorPageUrl, )
        OpenAPI.validate_property(ApplicationGatewayCustomError, Symbol("statusCode"), statusCode)
        OpenAPI.validate_property(ApplicationGatewayCustomError, Symbol("customErrorPageUrl"), customErrorPageUrl)
        return new(statusCode, customErrorPageUrl, )
    end
end # type ApplicationGatewayCustomError

const _property_types_ApplicationGatewayCustomError = Dict{Symbol,String}(Symbol("statusCode")=>"String", Symbol("customErrorPageUrl")=>"String", )
OpenAPI.property_type(::Type{ ApplicationGatewayCustomError }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ApplicationGatewayCustomError[name]))}

function check_required(o::ApplicationGatewayCustomError)
    true
end

function OpenAPI.validate_property(::Type{ ApplicationGatewayCustomError }, name::Symbol, val)
    if name === Symbol("statusCode")
        OpenAPI.validate_param(name, "ApplicationGatewayCustomError", :enum, val, ["HttpStatus403", "HttpStatus502"])
    end
end
