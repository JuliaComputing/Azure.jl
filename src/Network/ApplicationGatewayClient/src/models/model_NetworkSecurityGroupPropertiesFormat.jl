# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""NetworkSecurityGroupPropertiesFormat
Network Security Group resource.

    NetworkSecurityGroupPropertiesFormat(;
        securityRules=nothing,
        defaultSecurityRules=nothing,
        networkInterfaces=nothing,
        subnets=nothing,
        flowLogs=nothing,
        resourceGuid=nothing,
        provisioningState=nothing,
    )

    - securityRules::Vector{SecurityRule} : A collection of security rules of the network security group.
    - defaultSecurityRules::Vector{SecurityRule} : The default security rules of network security group.
    - networkInterfaces::Vector{NetworkInterface} : A collection of references to network interfaces.
    - subnets::Vector{Subnet} : A collection of references to subnets.
    - flowLogs::Vector{FlowLog} : A collection of references to flow log resources.
    - resourceGuid::String : The resource GUID property of the network security group resource.
    - provisioningState::ProvisioningState
"""
Base.@kwdef mutable struct NetworkSecurityGroupPropertiesFormat <: OpenAPI.APIModel
    securityRules::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{SecurityRule} }
    defaultSecurityRules::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{SecurityRule} }
    networkInterfaces::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{NetworkInterface} }
    subnets::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{Subnet} }
    flowLogs::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{FlowLog} }
    resourceGuid::Union{Nothing, String} = nothing
    provisioningState = nothing # spec type: Union{ Nothing, ProvisioningState }

    function NetworkSecurityGroupPropertiesFormat(securityRules, defaultSecurityRules, networkInterfaces, subnets, flowLogs, resourceGuid, provisioningState, )
        OpenAPI.validate_property(NetworkSecurityGroupPropertiesFormat, Symbol("securityRules"), securityRules)
        OpenAPI.validate_property(NetworkSecurityGroupPropertiesFormat, Symbol("defaultSecurityRules"), defaultSecurityRules)
        OpenAPI.validate_property(NetworkSecurityGroupPropertiesFormat, Symbol("networkInterfaces"), networkInterfaces)
        OpenAPI.validate_property(NetworkSecurityGroupPropertiesFormat, Symbol("subnets"), subnets)
        OpenAPI.validate_property(NetworkSecurityGroupPropertiesFormat, Symbol("flowLogs"), flowLogs)
        OpenAPI.validate_property(NetworkSecurityGroupPropertiesFormat, Symbol("resourceGuid"), resourceGuid)
        OpenAPI.validate_property(NetworkSecurityGroupPropertiesFormat, Symbol("provisioningState"), provisioningState)
        return new(securityRules, defaultSecurityRules, networkInterfaces, subnets, flowLogs, resourceGuid, provisioningState, )
    end
end # type NetworkSecurityGroupPropertiesFormat

const _property_types_NetworkSecurityGroupPropertiesFormat = Dict{Symbol,String}(Symbol("securityRules")=>"Vector{SecurityRule}", Symbol("defaultSecurityRules")=>"Vector{SecurityRule}", Symbol("networkInterfaces")=>"Vector{NetworkInterface}", Symbol("subnets")=>"Vector{Subnet}", Symbol("flowLogs")=>"Vector{FlowLog}", Symbol("resourceGuid")=>"String", Symbol("provisioningState")=>"ProvisioningState", )
OpenAPI.property_type(::Type{ NetworkSecurityGroupPropertiesFormat }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_NetworkSecurityGroupPropertiesFormat[name]))}

function check_required(o::NetworkSecurityGroupPropertiesFormat)
    true
end

function OpenAPI.validate_property(::Type{ NetworkSecurityGroupPropertiesFormat }, name::Symbol, val)
end
