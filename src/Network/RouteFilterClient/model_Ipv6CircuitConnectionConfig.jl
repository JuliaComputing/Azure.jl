# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct Ipv6CircuitConnectionConfig <: SwaggerModel
    addressPrefix::Any # spec type: Union{ Nothing, String } # spec name: addressPrefix
    circuitConnectionStatus::Any # spec type: Union{ Nothing, CircuitConnectionStatus } # spec name: circuitConnectionStatus

    function Ipv6CircuitConnectionConfig(;addressPrefix=nothing, circuitConnectionStatus=nothing)
        o = new()
        validate_property(Ipv6CircuitConnectionConfig, Symbol("addressPrefix"), addressPrefix)
        setfield!(o, Symbol("addressPrefix"), addressPrefix)
        validate_property(Ipv6CircuitConnectionConfig, Symbol("circuitConnectionStatus"), circuitConnectionStatus)
        setfield!(o, Symbol("circuitConnectionStatus"), circuitConnectionStatus)
        o
    end
end # type Ipv6CircuitConnectionConfig

const _property_map_Ipv6CircuitConnectionConfig = Dict{Symbol,Symbol}(Symbol("addressPrefix")=>Symbol("addressPrefix"), Symbol("circuitConnectionStatus")=>Symbol("circuitConnectionStatus"))
const _property_types_Ipv6CircuitConnectionConfig = Dict{Symbol,String}(Symbol("addressPrefix")=>"String", Symbol("circuitConnectionStatus")=>"CircuitConnectionStatus")
Base.propertynames(::Type{ Ipv6CircuitConnectionConfig }) = collect(keys(_property_map_Ipv6CircuitConnectionConfig))
Swagger.property_type(::Type{ Ipv6CircuitConnectionConfig }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Ipv6CircuitConnectionConfig[name]))}
Swagger.field_name(::Type{ Ipv6CircuitConnectionConfig }, property_name::Symbol) =  _property_map_Ipv6CircuitConnectionConfig[property_name]

function check_required(o::Ipv6CircuitConnectionConfig)
    true
end

function validate_property(::Type{ Ipv6CircuitConnectionConfig }, name::Symbol, val)
end
