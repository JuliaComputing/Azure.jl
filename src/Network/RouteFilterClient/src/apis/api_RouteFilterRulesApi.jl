# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct RouteFilterRulesApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `RouteFilterRulesApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ RouteFilterRulesApi }) = "https://management.azure.com"

const _returntypes_route_filter_rules_create_or_update_RouteFilterRulesApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => RouteFilterRule,
    Regex("^" * replace("201", "x"=>".") * "\$") => RouteFilterRule,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_route_filter_rules_create_or_update(_api::RouteFilterRulesApi, resource_group_name::String, route_filter_name::String, rule_name::String, api_version::String, subscription_id::String, route_filter_rule_parameters::RouteFilterRule; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_route_filter_rules_create_or_update_RouteFilterRulesApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}", ["azure_auth", ], route_filter_rule_parameters)
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "routeFilterName", route_filter_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "ruleName", rule_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Creates or updates a route in the specified route filter.

Params:
- resource_group_name::String (required)
- route_filter_name::String (required)
- rule_name::String (required)
- api_version::String (required)
- subscription_id::String (required)
- route_filter_rule_parameters::RouteFilterRule (required)

Return: RouteFilterRule, OpenAPI.Clients.ApiResponse
"""
function route_filter_rules_create_or_update(_api::RouteFilterRulesApi, resource_group_name::String, route_filter_name::String, rule_name::String, api_version::String, subscription_id::String, route_filter_rule_parameters::RouteFilterRule; _mediaType=nothing)
    _ctx = _oacinternal_route_filter_rules_create_or_update(_api, resource_group_name, route_filter_name, rule_name, api_version, subscription_id, route_filter_rule_parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function route_filter_rules_create_or_update(_api::RouteFilterRulesApi, response_stream::Channel, resource_group_name::String, route_filter_name::String, rule_name::String, api_version::String, subscription_id::String, route_filter_rule_parameters::RouteFilterRule; _mediaType=nothing)
    _ctx = _oacinternal_route_filter_rules_create_or_update(_api, resource_group_name, route_filter_name, rule_name, api_version, subscription_id, route_filter_rule_parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_route_filter_rules_delete_RouteFilterRulesApi = Dict{Regex,Type}(
    Regex("^" * replace("202", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_route_filter_rules_delete(_api::RouteFilterRulesApi, resource_group_name::String, route_filter_name::String, rule_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_route_filter_rules_delete_RouteFilterRulesApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "routeFilterName", route_filter_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "ruleName", rule_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Deletes the specified rule from a route filter.

Params:
- resource_group_name::String (required)
- route_filter_name::String (required)
- rule_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function route_filter_rules_delete(_api::RouteFilterRulesApi, resource_group_name::String, route_filter_name::String, rule_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_route_filter_rules_delete(_api, resource_group_name, route_filter_name, rule_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function route_filter_rules_delete(_api::RouteFilterRulesApi, response_stream::Channel, resource_group_name::String, route_filter_name::String, rule_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_route_filter_rules_delete(_api, resource_group_name, route_filter_name, rule_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_route_filter_rules_get_RouteFilterRulesApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => RouteFilterRule,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_route_filter_rules_get(_api::RouteFilterRulesApi, resource_group_name::String, route_filter_name::String, rule_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_route_filter_rules_get_RouteFilterRulesApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules/{ruleName}", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "routeFilterName", route_filter_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "ruleName", rule_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Gets the specified rule from a route filter.

Params:
- resource_group_name::String (required)
- route_filter_name::String (required)
- rule_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: RouteFilterRule, OpenAPI.Clients.ApiResponse
"""
function route_filter_rules_get(_api::RouteFilterRulesApi, resource_group_name::String, route_filter_name::String, rule_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_route_filter_rules_get(_api, resource_group_name, route_filter_name, rule_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function route_filter_rules_get(_api::RouteFilterRulesApi, response_stream::Channel, resource_group_name::String, route_filter_name::String, rule_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_route_filter_rules_get(_api, resource_group_name, route_filter_name, rule_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_route_filter_rules_list_by_route_filter_RouteFilterRulesApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => RouteFilterRuleListResult,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_route_filter_rules_list_by_route_filter(_api::RouteFilterRulesApi, resource_group_name::String, route_filter_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_route_filter_rules_list_by_route_filter_RouteFilterRulesApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeFilters/{routeFilterName}/routeFilterRules", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "routeFilterName", route_filter_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Gets all RouteFilterRules in a route filter.

Params:
- resource_group_name::String (required)
- route_filter_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: RouteFilterRuleListResult, OpenAPI.Clients.ApiResponse
"""
function route_filter_rules_list_by_route_filter(_api::RouteFilterRulesApi, resource_group_name::String, route_filter_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_route_filter_rules_list_by_route_filter(_api, resource_group_name, route_filter_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function route_filter_rules_list_by_route_filter(_api::RouteFilterRulesApi, response_stream::Channel, resource_group_name::String, route_filter_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_route_filter_rules_list_by_route_filter(_api, resource_group_name, route_filter_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export route_filter_rules_create_or_update
export route_filter_rules_delete
export route_filter_rules_get
export route_filter_rules_list_by_route_filter
