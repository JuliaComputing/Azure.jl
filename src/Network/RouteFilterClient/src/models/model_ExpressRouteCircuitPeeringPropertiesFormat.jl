# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ExpressRouteCircuitPeeringPropertiesFormat
Properties of the express route circuit peering.

    ExpressRouteCircuitPeeringPropertiesFormat(;
        peeringType=nothing,
        state=nothing,
        azureASN=nothing,
        peerASN=nothing,
        primaryPeerAddressPrefix=nothing,
        secondaryPeerAddressPrefix=nothing,
        primaryAzurePort=nothing,
        secondaryAzurePort=nothing,
        sharedKey=nothing,
        vlanId=nothing,
        microsoftPeeringConfig=nothing,
        stats=nothing,
        provisioningState=nothing,
        gatewayManagerEtag=nothing,
        lastModifiedBy=nothing,
        routeFilter=nothing,
        ipv6PeeringConfig=nothing,
        expressRouteConnection=nothing,
        connections=nothing,
        peeredConnections=nothing,
    )

    - peeringType::ExpressRoutePeeringType
    - state::ExpressRoutePeeringState
    - azureASN::Int64 : The Azure ASN.
    - peerASN::Int64 : The peer ASN.
    - primaryPeerAddressPrefix::String : The primary address prefix.
    - secondaryPeerAddressPrefix::String : The secondary address prefix.
    - primaryAzurePort::String : The primary port.
    - secondaryAzurePort::String : The secondary port.
    - sharedKey::String : The shared key.
    - vlanId::Int64 : The VLAN ID.
    - microsoftPeeringConfig::ExpressRouteCircuitPeeringConfig
    - stats::ExpressRouteCircuitStats
    - provisioningState::ProvisioningState
    - gatewayManagerEtag::String : The GatewayManager Etag.
    - lastModifiedBy::String : Who was the last to modify the peering.
    - routeFilter::SubResource
    - ipv6PeeringConfig::Ipv6ExpressRouteCircuitPeeringConfig
    - expressRouteConnection::ExpressRouteConnectionId
    - connections::Vector{ExpressRouteCircuitConnection} : The list of circuit connections associated with Azure Private Peering for this circuit.
    - peeredConnections::Vector{PeerExpressRouteCircuitConnection} : The list of peered circuit connections associated with Azure Private Peering for this circuit.
"""
Base.@kwdef mutable struct ExpressRouteCircuitPeeringPropertiesFormat <: OpenAPI.APIModel
    peeringType = nothing # spec type: Union{ Nothing, ExpressRoutePeeringType }
    state = nothing # spec type: Union{ Nothing, ExpressRoutePeeringState }
    azureASN::Union{Nothing, Int64} = nothing
    peerASN::Union{Nothing, Int64} = nothing
    primaryPeerAddressPrefix::Union{Nothing, String} = nothing
    secondaryPeerAddressPrefix::Union{Nothing, String} = nothing
    primaryAzurePort::Union{Nothing, String} = nothing
    secondaryAzurePort::Union{Nothing, String} = nothing
    sharedKey::Union{Nothing, String} = nothing
    vlanId::Union{Nothing, Int64} = nothing
    microsoftPeeringConfig = nothing # spec type: Union{ Nothing, ExpressRouteCircuitPeeringConfig }
    stats = nothing # spec type: Union{ Nothing, ExpressRouteCircuitStats }
    provisioningState = nothing # spec type: Union{ Nothing, ProvisioningState }
    gatewayManagerEtag::Union{Nothing, String} = nothing
    lastModifiedBy::Union{Nothing, String} = nothing
    routeFilter = nothing # spec type: Union{ Nothing, SubResource }
    ipv6PeeringConfig = nothing # spec type: Union{ Nothing, Ipv6ExpressRouteCircuitPeeringConfig }
    expressRouteConnection = nothing # spec type: Union{ Nothing, ExpressRouteConnectionId }
    connections::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{ExpressRouteCircuitConnection} }
    peeredConnections::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{PeerExpressRouteCircuitConnection} }

    function ExpressRouteCircuitPeeringPropertiesFormat(peeringType, state, azureASN, peerASN, primaryPeerAddressPrefix, secondaryPeerAddressPrefix, primaryAzurePort, secondaryAzurePort, sharedKey, vlanId, microsoftPeeringConfig, stats, provisioningState, gatewayManagerEtag, lastModifiedBy, routeFilter, ipv6PeeringConfig, expressRouteConnection, connections, peeredConnections, )
        OpenAPI.validate_property(ExpressRouteCircuitPeeringPropertiesFormat, Symbol("peeringType"), peeringType)
        OpenAPI.validate_property(ExpressRouteCircuitPeeringPropertiesFormat, Symbol("state"), state)
        OpenAPI.validate_property(ExpressRouteCircuitPeeringPropertiesFormat, Symbol("azureASN"), azureASN)
        OpenAPI.validate_property(ExpressRouteCircuitPeeringPropertiesFormat, Symbol("peerASN"), peerASN)
        OpenAPI.validate_property(ExpressRouteCircuitPeeringPropertiesFormat, Symbol("primaryPeerAddressPrefix"), primaryPeerAddressPrefix)
        OpenAPI.validate_property(ExpressRouteCircuitPeeringPropertiesFormat, Symbol("secondaryPeerAddressPrefix"), secondaryPeerAddressPrefix)
        OpenAPI.validate_property(ExpressRouteCircuitPeeringPropertiesFormat, Symbol("primaryAzurePort"), primaryAzurePort)
        OpenAPI.validate_property(ExpressRouteCircuitPeeringPropertiesFormat, Symbol("secondaryAzurePort"), secondaryAzurePort)
        OpenAPI.validate_property(ExpressRouteCircuitPeeringPropertiesFormat, Symbol("sharedKey"), sharedKey)
        OpenAPI.validate_property(ExpressRouteCircuitPeeringPropertiesFormat, Symbol("vlanId"), vlanId)
        OpenAPI.validate_property(ExpressRouteCircuitPeeringPropertiesFormat, Symbol("microsoftPeeringConfig"), microsoftPeeringConfig)
        OpenAPI.validate_property(ExpressRouteCircuitPeeringPropertiesFormat, Symbol("stats"), stats)
        OpenAPI.validate_property(ExpressRouteCircuitPeeringPropertiesFormat, Symbol("provisioningState"), provisioningState)
        OpenAPI.validate_property(ExpressRouteCircuitPeeringPropertiesFormat, Symbol("gatewayManagerEtag"), gatewayManagerEtag)
        OpenAPI.validate_property(ExpressRouteCircuitPeeringPropertiesFormat, Symbol("lastModifiedBy"), lastModifiedBy)
        OpenAPI.validate_property(ExpressRouteCircuitPeeringPropertiesFormat, Symbol("routeFilter"), routeFilter)
        OpenAPI.validate_property(ExpressRouteCircuitPeeringPropertiesFormat, Symbol("ipv6PeeringConfig"), ipv6PeeringConfig)
        OpenAPI.validate_property(ExpressRouteCircuitPeeringPropertiesFormat, Symbol("expressRouteConnection"), expressRouteConnection)
        OpenAPI.validate_property(ExpressRouteCircuitPeeringPropertiesFormat, Symbol("connections"), connections)
        OpenAPI.validate_property(ExpressRouteCircuitPeeringPropertiesFormat, Symbol("peeredConnections"), peeredConnections)
        return new(peeringType, state, azureASN, peerASN, primaryPeerAddressPrefix, secondaryPeerAddressPrefix, primaryAzurePort, secondaryAzurePort, sharedKey, vlanId, microsoftPeeringConfig, stats, provisioningState, gatewayManagerEtag, lastModifiedBy, routeFilter, ipv6PeeringConfig, expressRouteConnection, connections, peeredConnections, )
    end
end # type ExpressRouteCircuitPeeringPropertiesFormat

const _property_types_ExpressRouteCircuitPeeringPropertiesFormat = Dict{Symbol,String}(Symbol("peeringType")=>"ExpressRoutePeeringType", Symbol("state")=>"ExpressRoutePeeringState", Symbol("azureASN")=>"Int64", Symbol("peerASN")=>"Int64", Symbol("primaryPeerAddressPrefix")=>"String", Symbol("secondaryPeerAddressPrefix")=>"String", Symbol("primaryAzurePort")=>"String", Symbol("secondaryAzurePort")=>"String", Symbol("sharedKey")=>"String", Symbol("vlanId")=>"Int64", Symbol("microsoftPeeringConfig")=>"ExpressRouteCircuitPeeringConfig", Symbol("stats")=>"ExpressRouteCircuitStats", Symbol("provisioningState")=>"ProvisioningState", Symbol("gatewayManagerEtag")=>"String", Symbol("lastModifiedBy")=>"String", Symbol("routeFilter")=>"SubResource", Symbol("ipv6PeeringConfig")=>"Ipv6ExpressRouteCircuitPeeringConfig", Symbol("expressRouteConnection")=>"ExpressRouteConnectionId", Symbol("connections")=>"Vector{ExpressRouteCircuitConnection}", Symbol("peeredConnections")=>"Vector{PeerExpressRouteCircuitConnection}", )
OpenAPI.property_type(::Type{ ExpressRouteCircuitPeeringPropertiesFormat }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ExpressRouteCircuitPeeringPropertiesFormat[name]))}

function check_required(o::ExpressRouteCircuitPeeringPropertiesFormat)
    true
end

function OpenAPI.validate_property(::Type{ ExpressRouteCircuitPeeringPropertiesFormat }, name::Symbol, val)
    if name === Symbol("azureASN")
        OpenAPI.validate_param(name, "ExpressRouteCircuitPeeringPropertiesFormat", :format, val, "int32")
    end
    if name === Symbol("peerASN")
        OpenAPI.validate_param(name, "ExpressRouteCircuitPeeringPropertiesFormat", :format, val, "int64")
    end
    if name === Symbol("peerASN")
        OpenAPI.validate_param(name, "ExpressRouteCircuitPeeringPropertiesFormat", :maximum, val, 4294967295, false)
        OpenAPI.validate_param(name, "ExpressRouteCircuitPeeringPropertiesFormat", :minimum, val, 1, false)
    end
    if name === Symbol("vlanId")
        OpenAPI.validate_param(name, "ExpressRouteCircuitPeeringPropertiesFormat", :format, val, "int32")
    end
end
