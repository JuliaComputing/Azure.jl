# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct ExpressRouteCircuitStats <: SwaggerModel
    primarybytesIn::Any # spec type: Union{ Nothing, Int64 } # spec name: primarybytesIn
    primarybytesOut::Any # spec type: Union{ Nothing, Int64 } # spec name: primarybytesOut
    secondarybytesIn::Any # spec type: Union{ Nothing, Int64 } # spec name: secondarybytesIn
    secondarybytesOut::Any # spec type: Union{ Nothing, Int64 } # spec name: secondarybytesOut

    function ExpressRouteCircuitStats(;primarybytesIn=nothing, primarybytesOut=nothing, secondarybytesIn=nothing, secondarybytesOut=nothing)
        o = new()
        validate_property(ExpressRouteCircuitStats, Symbol("primarybytesIn"), primarybytesIn)
        setfield!(o, Symbol("primarybytesIn"), primarybytesIn)
        validate_property(ExpressRouteCircuitStats, Symbol("primarybytesOut"), primarybytesOut)
        setfield!(o, Symbol("primarybytesOut"), primarybytesOut)
        validate_property(ExpressRouteCircuitStats, Symbol("secondarybytesIn"), secondarybytesIn)
        setfield!(o, Symbol("secondarybytesIn"), secondarybytesIn)
        validate_property(ExpressRouteCircuitStats, Symbol("secondarybytesOut"), secondarybytesOut)
        setfield!(o, Symbol("secondarybytesOut"), secondarybytesOut)
        o
    end
end # type ExpressRouteCircuitStats

const _property_map_ExpressRouteCircuitStats = Dict{Symbol,Symbol}(Symbol("primarybytesIn")=>Symbol("primarybytesIn"), Symbol("primarybytesOut")=>Symbol("primarybytesOut"), Symbol("secondarybytesIn")=>Symbol("secondarybytesIn"), Symbol("secondarybytesOut")=>Symbol("secondarybytesOut"))
const _property_types_ExpressRouteCircuitStats = Dict{Symbol,String}(Symbol("primarybytesIn")=>"Int64", Symbol("primarybytesOut")=>"Int64", Symbol("secondarybytesIn")=>"Int64", Symbol("secondarybytesOut")=>"Int64")
Base.propertynames(::Type{ ExpressRouteCircuitStats }) = collect(keys(_property_map_ExpressRouteCircuitStats))
Swagger.property_type(::Type{ ExpressRouteCircuitStats }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ExpressRouteCircuitStats[name]))}
Swagger.field_name(::Type{ ExpressRouteCircuitStats }, property_name::Symbol) =  _property_map_ExpressRouteCircuitStats[property_name]

function check_required(o::ExpressRouteCircuitStats)
    true
end

function validate_property(::Type{ ExpressRouteCircuitStats }, name::Symbol, val)
end
