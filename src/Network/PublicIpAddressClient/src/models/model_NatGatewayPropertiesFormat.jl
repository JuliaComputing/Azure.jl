# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""NatGatewayPropertiesFormat
Nat Gateway properties.

    NatGatewayPropertiesFormat(;
        idleTimeoutInMinutes=nothing,
        publicIpAddresses=nothing,
        publicIpAddressesV6=nothing,
        publicIpPrefixes=nothing,
        publicIpPrefixesV6=nothing,
        subnets=nothing,
        sourceVirtualNetwork=nothing,
        resourceGuid=nothing,
        provisioningState=nothing,
    )

    - idleTimeoutInMinutes::Int64 : The idle timeout of the nat gateway.
    - publicIpAddresses::Vector{SubResource} : An array of public ip addresses V4 associated with the nat gateway resource.
    - publicIpAddressesV6::Vector{SubResource} : An array of public ip addresses V6 associated with the nat gateway resource.
    - publicIpPrefixes::Vector{SubResource} : An array of public ip prefixes V4 associated with the nat gateway resource.
    - publicIpPrefixesV6::Vector{SubResource} : An array of public ip prefixes V6 associated with the nat gateway resource.
    - subnets::Vector{SubResource} : An array of references to the subnets using this nat gateway resource.
    - sourceVirtualNetwork::SubResource
    - resourceGuid::String : The resource GUID property of the NAT gateway resource.
    - provisioningState::ProvisioningState
"""
Base.@kwdef mutable struct NatGatewayPropertiesFormat <: OpenAPI.APIModel
    idleTimeoutInMinutes::Union{Nothing, Int64} = nothing
    publicIpAddresses::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{SubResource} }
    publicIpAddressesV6::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{SubResource} }
    publicIpPrefixes::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{SubResource} }
    publicIpPrefixesV6::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{SubResource} }
    subnets::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{SubResource} }
    sourceVirtualNetwork = nothing # spec type: Union{ Nothing, SubResource }
    resourceGuid::Union{Nothing, String} = nothing
    provisioningState = nothing # spec type: Union{ Nothing, ProvisioningState }

    function NatGatewayPropertiesFormat(idleTimeoutInMinutes, publicIpAddresses, publicIpAddressesV6, publicIpPrefixes, publicIpPrefixesV6, subnets, sourceVirtualNetwork, resourceGuid, provisioningState, )
        o = new(idleTimeoutInMinutes, publicIpAddresses, publicIpAddressesV6, publicIpPrefixes, publicIpPrefixesV6, subnets, sourceVirtualNetwork, resourceGuid, provisioningState, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type NatGatewayPropertiesFormat

const _property_types_NatGatewayPropertiesFormat = Dict{Symbol,String}(Symbol("idleTimeoutInMinutes")=>"Int64", Symbol("publicIpAddresses")=>"Vector{SubResource}", Symbol("publicIpAddressesV6")=>"Vector{SubResource}", Symbol("publicIpPrefixes")=>"Vector{SubResource}", Symbol("publicIpPrefixesV6")=>"Vector{SubResource}", Symbol("subnets")=>"Vector{SubResource}", Symbol("sourceVirtualNetwork")=>"SubResource", Symbol("resourceGuid")=>"String", Symbol("provisioningState")=>"ProvisioningState", )
OpenAPI.property_type(::Type{ NatGatewayPropertiesFormat }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_NatGatewayPropertiesFormat[name]))}

function OpenAPI.check_required(o::NatGatewayPropertiesFormat)
    true
end

function OpenAPI.validate_properties(o::NatGatewayPropertiesFormat)
    OpenAPI.validate_property(NatGatewayPropertiesFormat, Symbol("idleTimeoutInMinutes"), o.idleTimeoutInMinutes)
    OpenAPI.validate_property(NatGatewayPropertiesFormat, Symbol("publicIpAddresses"), o.publicIpAddresses)
    OpenAPI.validate_property(NatGatewayPropertiesFormat, Symbol("publicIpAddressesV6"), o.publicIpAddressesV6)
    OpenAPI.validate_property(NatGatewayPropertiesFormat, Symbol("publicIpPrefixes"), o.publicIpPrefixes)
    OpenAPI.validate_property(NatGatewayPropertiesFormat, Symbol("publicIpPrefixesV6"), o.publicIpPrefixesV6)
    OpenAPI.validate_property(NatGatewayPropertiesFormat, Symbol("subnets"), o.subnets)
    OpenAPI.validate_property(NatGatewayPropertiesFormat, Symbol("sourceVirtualNetwork"), o.sourceVirtualNetwork)
    OpenAPI.validate_property(NatGatewayPropertiesFormat, Symbol("resourceGuid"), o.resourceGuid)
    OpenAPI.validate_property(NatGatewayPropertiesFormat, Symbol("provisioningState"), o.provisioningState)
end

function OpenAPI.validate_property(::Type{ NatGatewayPropertiesFormat }, name::Symbol, val)

    if name === Symbol("idleTimeoutInMinutes")
        OpenAPI.validate_param(name, "NatGatewayPropertiesFormat", :format, val, "int32")
    end








end
