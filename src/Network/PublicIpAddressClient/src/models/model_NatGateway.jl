# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""NatGateway
Nat Gateway resource.

    NatGateway(;
        sku=nothing,
        properties=nothing,
        zones=nothing,
        etag=nothing,
        id=nothing,
        name=nothing,
        type=nothing,
        location=nothing,
        tags=nothing,
    )

    - sku::NatGatewaySku
    - properties::NatGatewayPropertiesFormat
    - zones::Vector{String} : A list of availability zones denoting the zone in which Nat Gateway should be deployed.
    - etag::String : A unique read-only string that changes whenever the resource is updated.
    - id::String : Resource ID.
    - name::String : Resource name.
    - type::String : Resource type.
    - location::String : Resource location.
    - tags::Dict{String, String} : Resource tags.
"""
Base.@kwdef mutable struct NatGateway <: OpenAPI.APIModel
    sku = nothing # spec type: Union{ Nothing, NatGatewaySku }
    properties = nothing # spec type: Union{ Nothing, NatGatewayPropertiesFormat }
    zones::Union{Nothing, Vector{String}} = nothing
    etag::Union{Nothing, String} = nothing
    id::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing
    location::Union{Nothing, String} = nothing
    tags::Union{Nothing, Dict{String, String}} = nothing

    function NatGateway(sku, properties, zones, etag, id, name, type, location, tags, )
        o = new(sku, properties, zones, etag, id, name, type, location, tags, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type NatGateway

const _property_types_NatGateway = Dict{Symbol,String}(Symbol("sku")=>"NatGatewaySku", Symbol("properties")=>"NatGatewayPropertiesFormat", Symbol("zones")=>"Vector{String}", Symbol("etag")=>"String", Symbol("id")=>"String", Symbol("name")=>"String", Symbol("type")=>"String", Symbol("location")=>"String", Symbol("tags")=>"Dict{String, String}", )
OpenAPI.property_type(::Type{ NatGateway }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_NatGateway[name]))}

function OpenAPI.check_required(o::NatGateway)
    true
end

function OpenAPI.validate_properties(o::NatGateway)
    OpenAPI.validate_property(NatGateway, Symbol("sku"), o.sku)
    OpenAPI.validate_property(NatGateway, Symbol("properties"), o.properties)
    OpenAPI.validate_property(NatGateway, Symbol("zones"), o.zones)
    OpenAPI.validate_property(NatGateway, Symbol("etag"), o.etag)
    OpenAPI.validate_property(NatGateway, Symbol("id"), o.id)
    OpenAPI.validate_property(NatGateway, Symbol("name"), o.name)
    OpenAPI.validate_property(NatGateway, Symbol("type"), o.type)
    OpenAPI.validate_property(NatGateway, Symbol("location"), o.location)
    OpenAPI.validate_property(NatGateway, Symbol("tags"), o.tags)
end

function OpenAPI.validate_property(::Type{ NatGateway }, name::Symbol, val)









end
