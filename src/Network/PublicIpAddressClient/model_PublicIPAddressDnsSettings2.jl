# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct PublicIPAddressDnsSettings2 <: SwaggerModel
    domainNameLabel::Any # spec type: Union{ Nothing, String } # spec name: domainNameLabel
    fqdn::Any # spec type: Union{ Nothing, String } # spec name: fqdn
    reverseFqdn::Any # spec type: Union{ Nothing, String } # spec name: reverseFqdn

    function PublicIPAddressDnsSettings2(;domainNameLabel=nothing, fqdn=nothing, reverseFqdn=nothing)
        o = new()
        validate_property(PublicIPAddressDnsSettings2, Symbol("domainNameLabel"), domainNameLabel)
        setfield!(o, Symbol("domainNameLabel"), domainNameLabel)
        validate_property(PublicIPAddressDnsSettings2, Symbol("fqdn"), fqdn)
        setfield!(o, Symbol("fqdn"), fqdn)
        validate_property(PublicIPAddressDnsSettings2, Symbol("reverseFqdn"), reverseFqdn)
        setfield!(o, Symbol("reverseFqdn"), reverseFqdn)
        o
    end
end # type PublicIPAddressDnsSettings2

const _property_map_PublicIPAddressDnsSettings2 = Dict{Symbol,Symbol}(Symbol("domainNameLabel")=>Symbol("domainNameLabel"), Symbol("fqdn")=>Symbol("fqdn"), Symbol("reverseFqdn")=>Symbol("reverseFqdn"))
const _property_types_PublicIPAddressDnsSettings2 = Dict{Symbol,String}(Symbol("domainNameLabel")=>"String", Symbol("fqdn")=>"String", Symbol("reverseFqdn")=>"String")
Base.propertynames(::Type{ PublicIPAddressDnsSettings2 }) = collect(keys(_property_map_PublicIPAddressDnsSettings2))
Swagger.property_type(::Type{ PublicIPAddressDnsSettings2 }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_PublicIPAddressDnsSettings2[name]))}
Swagger.field_name(::Type{ PublicIPAddressDnsSettings2 }, property_name::Symbol) =  _property_map_PublicIPAddressDnsSettings2[property_name]

function check_required(o::PublicIPAddressDnsSettings2)
    true
end

function validate_property(::Type{ PublicIPAddressDnsSettings2 }, name::Symbol, val)
end
