# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""TunnelConnectionHealth
VirtualNetworkGatewayConnection properties.

    TunnelConnectionHealth(;
        tunnel=nothing,
        connectionStatus=nothing,
        ingressBytesTransferred=nothing,
        egressBytesTransferred=nothing,
        lastConnectionEstablishedUtcTime=nothing,
    )

    - tunnel::String : Tunnel name.
    - connectionStatus::VirtualNetworkGatewayConnectionStatus
    - ingressBytesTransferred::Int64 : The Ingress Bytes Transferred in this connection.
    - egressBytesTransferred::Int64 : The Egress Bytes Transferred in this connection.
    - lastConnectionEstablishedUtcTime::String : The time at which connection was established in Utc format.
"""
Base.@kwdef mutable struct TunnelConnectionHealth <: OpenAPI.APIModel
    tunnel::Union{Nothing, String} = nothing
    connectionStatus = nothing # spec type: Union{ Nothing, VirtualNetworkGatewayConnectionStatus }
    ingressBytesTransferred::Union{Nothing, Int64} = nothing
    egressBytesTransferred::Union{Nothing, Int64} = nothing
    lastConnectionEstablishedUtcTime::Union{Nothing, String} = nothing

    function TunnelConnectionHealth(tunnel, connectionStatus, ingressBytesTransferred, egressBytesTransferred, lastConnectionEstablishedUtcTime, )
        OpenAPI.validate_property(TunnelConnectionHealth, Symbol("tunnel"), tunnel)
        OpenAPI.validate_property(TunnelConnectionHealth, Symbol("connectionStatus"), connectionStatus)
        OpenAPI.validate_property(TunnelConnectionHealth, Symbol("ingressBytesTransferred"), ingressBytesTransferred)
        OpenAPI.validate_property(TunnelConnectionHealth, Symbol("egressBytesTransferred"), egressBytesTransferred)
        OpenAPI.validate_property(TunnelConnectionHealth, Symbol("lastConnectionEstablishedUtcTime"), lastConnectionEstablishedUtcTime)
        return new(tunnel, connectionStatus, ingressBytesTransferred, egressBytesTransferred, lastConnectionEstablishedUtcTime, )
    end
end # type TunnelConnectionHealth

const _property_types_TunnelConnectionHealth = Dict{Symbol,String}(Symbol("tunnel")=>"String", Symbol("connectionStatus")=>"VirtualNetworkGatewayConnectionStatus", Symbol("ingressBytesTransferred")=>"Int64", Symbol("egressBytesTransferred")=>"Int64", Symbol("lastConnectionEstablishedUtcTime")=>"String", )
OpenAPI.property_type(::Type{ TunnelConnectionHealth }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_TunnelConnectionHealth[name]))}

function check_required(o::TunnelConnectionHealth)
    true
end

function OpenAPI.validate_property(::Type{ TunnelConnectionHealth }, name::Symbol, val)
    if name === Symbol("ingressBytesTransferred")
        OpenAPI.validate_param(name, "TunnelConnectionHealth", :format, val, "int64")
    end
    if name === Symbol("egressBytesTransferred")
        OpenAPI.validate_param(name, "TunnelConnectionHealth", :format, val, "int64")
    end
end
