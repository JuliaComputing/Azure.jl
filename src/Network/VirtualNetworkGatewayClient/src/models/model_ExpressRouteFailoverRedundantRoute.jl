# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ExpressRouteFailoverRedundantRoute

    ExpressRouteFailoverRedundantRoute(;
        peeringLocations=nothing,
        routes=nothing,
    )

    - peeringLocations::Vector{String} : A list of all the peering locations for the redundant routes
    - routes::Vector{String} : A list of all the redundant routes in the peering locations
"""
Base.@kwdef mutable struct ExpressRouteFailoverRedundantRoute <: OpenAPI.APIModel
    peeringLocations::Union{Nothing, Vector{String}} = nothing
    routes::Union{Nothing, Vector{String}} = nothing

    function ExpressRouteFailoverRedundantRoute(peeringLocations, routes, )
        o = new(peeringLocations, routes, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type ExpressRouteFailoverRedundantRoute

const _property_types_ExpressRouteFailoverRedundantRoute = Dict{Symbol,String}(Symbol("peeringLocations")=>"Vector{String}", Symbol("routes")=>"Vector{String}", )
OpenAPI.property_type(::Type{ ExpressRouteFailoverRedundantRoute }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ExpressRouteFailoverRedundantRoute[name]))}

function OpenAPI.check_required(o::ExpressRouteFailoverRedundantRoute)
    true
end

function OpenAPI.validate_properties(o::ExpressRouteFailoverRedundantRoute)
    OpenAPI.validate_property(ExpressRouteFailoverRedundantRoute, Symbol("peeringLocations"), o.peeringLocations)
    OpenAPI.validate_property(ExpressRouteFailoverRedundantRoute, Symbol("routes"), o.routes)
end

function OpenAPI.validate_property(::Type{ ExpressRouteFailoverRedundantRoute }, name::Symbol, val)


end
