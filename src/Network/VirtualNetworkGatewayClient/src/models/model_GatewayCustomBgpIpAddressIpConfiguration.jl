# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""GatewayCustomBgpIpAddressIpConfiguration
GatewayCustomBgpIpAddressIpConfiguration for a virtual network gateway connection.

    GatewayCustomBgpIpAddressIpConfiguration(;
        ipConfigurationId=nothing,
        customBgpIpAddress=nothing,
    )

    - ipConfigurationId::String : The IpconfigurationId of ipconfiguration which belongs to gateway.
    - customBgpIpAddress::String : The custom BgpPeeringAddress which belongs to IpconfigurationId.
"""
Base.@kwdef mutable struct GatewayCustomBgpIpAddressIpConfiguration <: OpenAPI.APIModel
    ipConfigurationId::Union{Nothing, String} = nothing
    customBgpIpAddress::Union{Nothing, String} = nothing

    function GatewayCustomBgpIpAddressIpConfiguration(ipConfigurationId, customBgpIpAddress, )
        o = new(ipConfigurationId, customBgpIpAddress, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type GatewayCustomBgpIpAddressIpConfiguration

const _property_types_GatewayCustomBgpIpAddressIpConfiguration = Dict{Symbol,String}(Symbol("ipConfigurationId")=>"String", Symbol("customBgpIpAddress")=>"String", )
OpenAPI.property_type(::Type{ GatewayCustomBgpIpAddressIpConfiguration }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_GatewayCustomBgpIpAddressIpConfiguration[name]))}

function OpenAPI.check_required(o::GatewayCustomBgpIpAddressIpConfiguration)
    o.ipConfigurationId === nothing && (return false)
    o.customBgpIpAddress === nothing && (return false)
    true
end

function OpenAPI.validate_properties(o::GatewayCustomBgpIpAddressIpConfiguration)
    OpenAPI.validate_property(GatewayCustomBgpIpAddressIpConfiguration, Symbol("ipConfigurationId"), o.ipConfigurationId)
    OpenAPI.validate_property(GatewayCustomBgpIpAddressIpConfiguration, Symbol("customBgpIpAddress"), o.customBgpIpAddress)
end

function OpenAPI.validate_property(::Type{ GatewayCustomBgpIpAddressIpConfiguration }, name::Symbol, val)


end
