# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""VirtualNetworkGatewayConnectionTunnelProperties

    VirtualNetworkGatewayConnectionTunnelProperties(;
        tunnelIpAddress=nothing,
        bgpPeeringAddress=nothing,
    )

    - tunnelIpAddress::String : Tunnel remote IP address
    - bgpPeeringAddress::String : Tunnel BGP peering address
"""
Base.@kwdef mutable struct VirtualNetworkGatewayConnectionTunnelProperties <: OpenAPI.APIModel
    tunnelIpAddress::Union{Nothing, String} = nothing
    bgpPeeringAddress::Union{Nothing, String} = nothing

    function VirtualNetworkGatewayConnectionTunnelProperties(tunnelIpAddress, bgpPeeringAddress, )
        o = new(tunnelIpAddress, bgpPeeringAddress, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type VirtualNetworkGatewayConnectionTunnelProperties

const _property_types_VirtualNetworkGatewayConnectionTunnelProperties = Dict{Symbol,String}(Symbol("tunnelIpAddress")=>"String", Symbol("bgpPeeringAddress")=>"String", )
OpenAPI.property_type(::Type{ VirtualNetworkGatewayConnectionTunnelProperties }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_VirtualNetworkGatewayConnectionTunnelProperties[name]))}

function OpenAPI.check_required(o::VirtualNetworkGatewayConnectionTunnelProperties)
    true
end

function OpenAPI.validate_properties(o::VirtualNetworkGatewayConnectionTunnelProperties)
    OpenAPI.validate_property(VirtualNetworkGatewayConnectionTunnelProperties, Symbol("tunnelIpAddress"), o.tunnelIpAddress)
    OpenAPI.validate_property(VirtualNetworkGatewayConnectionTunnelProperties, Symbol("bgpPeeringAddress"), o.bgpPeeringAddress)
end

function OpenAPI.validate_property(::Type{ VirtualNetworkGatewayConnectionTunnelProperties }, name::Symbol, val)


end
