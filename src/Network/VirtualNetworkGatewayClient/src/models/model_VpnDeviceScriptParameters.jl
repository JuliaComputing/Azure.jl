# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""VpnDeviceScriptParameters
Vpn device configuration script generation parameters.

    VpnDeviceScriptParameters(;
        vendor=nothing,
        deviceFamily=nothing,
        firmwareVersion=nothing,
    )

    - vendor::String : The vendor for the vpn device.
    - deviceFamily::String : The device family for the vpn device.
    - firmwareVersion::String : The firmware version for the vpn device.
"""
Base.@kwdef mutable struct VpnDeviceScriptParameters <: OpenAPI.APIModel
    vendor::Union{Nothing, String} = nothing
    deviceFamily::Union{Nothing, String} = nothing
    firmwareVersion::Union{Nothing, String} = nothing

    function VpnDeviceScriptParameters(vendor, deviceFamily, firmwareVersion, )
        OpenAPI.validate_property(VpnDeviceScriptParameters, Symbol("vendor"), vendor)
        OpenAPI.validate_property(VpnDeviceScriptParameters, Symbol("deviceFamily"), deviceFamily)
        OpenAPI.validate_property(VpnDeviceScriptParameters, Symbol("firmwareVersion"), firmwareVersion)
        return new(vendor, deviceFamily, firmwareVersion, )
    end
end # type VpnDeviceScriptParameters

const _property_types_VpnDeviceScriptParameters = Dict{Symbol,String}(Symbol("vendor")=>"String", Symbol("deviceFamily")=>"String", Symbol("firmwareVersion")=>"String", )
OpenAPI.property_type(::Type{ VpnDeviceScriptParameters }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_VpnDeviceScriptParameters[name]))}

function check_required(o::VpnDeviceScriptParameters)
    true
end

function OpenAPI.validate_property(::Type{ VpnDeviceScriptParameters }, name::Symbol, val)
end
