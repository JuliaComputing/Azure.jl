# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ResiliencyRecommendationComponents
Gateway Resiliency based Recommendations

    ResiliencyRecommendationComponents(;
        name=nothing,
        currentScore=nothing,
        maxScore=nothing,
        recommendations=nothing,
    )

    - name::String : Name of the Resiliency based Recommendation Component
    - currentScore::String : Current Score of the gateway
    - maxScore::String : Max score that the gateway can achieve if the specified recommendation is applied
    - recommendations::Vector{GatewayResiliencyRecommendation} : List of Gateway Resiliency based Recommendations
"""
Base.@kwdef mutable struct ResiliencyRecommendationComponents <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    currentScore::Union{Nothing, String} = nothing
    maxScore::Union{Nothing, String} = nothing
    recommendations::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{GatewayResiliencyRecommendation} }

    function ResiliencyRecommendationComponents(name, currentScore, maxScore, recommendations, )
        o = new(name, currentScore, maxScore, recommendations, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type ResiliencyRecommendationComponents

const _property_types_ResiliencyRecommendationComponents = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("currentScore")=>"String", Symbol("maxScore")=>"String", Symbol("recommendations")=>"Vector{GatewayResiliencyRecommendation}", )
OpenAPI.property_type(::Type{ ResiliencyRecommendationComponents }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ResiliencyRecommendationComponents[name]))}

function OpenAPI.check_required(o::ResiliencyRecommendationComponents)
    true
end

function OpenAPI.validate_properties(o::ResiliencyRecommendationComponents)
    OpenAPI.validate_property(ResiliencyRecommendationComponents, Symbol("name"), o.name)
    OpenAPI.validate_property(ResiliencyRecommendationComponents, Symbol("currentScore"), o.currentScore)
    OpenAPI.validate_property(ResiliencyRecommendationComponents, Symbol("maxScore"), o.maxScore)
    OpenAPI.validate_property(ResiliencyRecommendationComponents, Symbol("recommendations"), o.recommendations)
end

function OpenAPI.validate_property(::Type{ ResiliencyRecommendationComponents }, name::Symbol, val)




end
