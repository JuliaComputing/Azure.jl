# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""TrafficSelectorPolicy
An traffic selector policy for a virtual network gateway connection.

    TrafficSelectorPolicy(;
        localAddressRanges=nothing,
        remoteAddressRanges=nothing,
    )

    - localAddressRanges::Vector{String} : A collection of local address spaces in CIDR format.
    - remoteAddressRanges::Vector{String} : A collection of remote address spaces in CIDR format.
"""
Base.@kwdef mutable struct TrafficSelectorPolicy <: OpenAPI.APIModel
    localAddressRanges::Union{Nothing, Vector{String}} = nothing
    remoteAddressRanges::Union{Nothing, Vector{String}} = nothing

    function TrafficSelectorPolicy(localAddressRanges, remoteAddressRanges, )
        o = new(localAddressRanges, remoteAddressRanges, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type TrafficSelectorPolicy

const _property_types_TrafficSelectorPolicy = Dict{Symbol,String}(Symbol("localAddressRanges")=>"Vector{String}", Symbol("remoteAddressRanges")=>"Vector{String}", )
OpenAPI.property_type(::Type{ TrafficSelectorPolicy }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_TrafficSelectorPolicy[name]))}

function OpenAPI.check_required(o::TrafficSelectorPolicy)
    o.localAddressRanges === nothing && (return false)
    o.remoteAddressRanges === nothing && (return false)
    true
end

function OpenAPI.validate_properties(o::TrafficSelectorPolicy)
    OpenAPI.validate_property(TrafficSelectorPolicy, Symbol("localAddressRanges"), o.localAddressRanges)
    OpenAPI.validate_property(TrafficSelectorPolicy, Symbol("remoteAddressRanges"), o.remoteAddressRanges)
end

function OpenAPI.validate_property(::Type{ TrafficSelectorPolicy }, name::Symbol, val)


end
