# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""RouteSourceDetails

    RouteSourceDetails(;
        circuit=nothing,
        pri=nothing,
        sec=nothing,
    )

    - circuit::String : Express Route Circuit identifier
    - pri::String : Flag to indicate if the route learned from the primary device is active or passive
    - sec::String : Flag to indicate if the route learned from the secondary device is active or passive
"""
Base.@kwdef mutable struct RouteSourceDetails <: OpenAPI.APIModel
    circuit::Union{Nothing, String} = nothing
    pri::Union{Nothing, String} = nothing
    sec::Union{Nothing, String} = nothing

    function RouteSourceDetails(circuit, pri, sec, )
        o = new(circuit, pri, sec, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type RouteSourceDetails

const _property_types_RouteSourceDetails = Dict{Symbol,String}(Symbol("circuit")=>"String", Symbol("pri")=>"String", Symbol("sec")=>"String", )
OpenAPI.property_type(::Type{ RouteSourceDetails }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_RouteSourceDetails[name]))}

function OpenAPI.check_required(o::RouteSourceDetails)
    true
end

function OpenAPI.validate_properties(o::RouteSourceDetails)
    OpenAPI.validate_property(RouteSourceDetails, Symbol("circuit"), o.circuit)
    OpenAPI.validate_property(RouteSourceDetails, Symbol("pri"), o.pri)
    OpenAPI.validate_property(RouteSourceDetails, Symbol("sec"), o.sec)
end

function OpenAPI.validate_property(::Type{ RouteSourceDetails }, name::Symbol, val)



end
