# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""VirtualNetworkGatewayPolicyGroupProperties
Properties of VirtualNetworkGatewayPolicyGroup.

    VirtualNetworkGatewayPolicyGroupProperties(;
        isDefault=nothing,
        priority=nothing,
        policyMembers=nothing,
        vngClientConnectionConfigurations=nothing,
        provisioningState=nothing,
    )

    - isDefault::Bool : Shows if this is a Default VirtualNetworkGatewayPolicyGroup or not.
    - priority::Int64 : Priority for VirtualNetworkGatewayPolicyGroup.
    - policyMembers::Vector{VirtualNetworkGatewayPolicyGroupMember} : Multiple PolicyMembers for VirtualNetworkGatewayPolicyGroup.
    - vngClientConnectionConfigurations::Vector{SubResource} : List of references to vngClientConnectionConfigurations.
    - provisioningState::ProvisioningState
"""
Base.@kwdef mutable struct VirtualNetworkGatewayPolicyGroupProperties <: OpenAPI.APIModel
    isDefault::Union{Nothing, Bool} = nothing
    priority::Union{Nothing, Int64} = nothing
    policyMembers::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{VirtualNetworkGatewayPolicyGroupMember} }
    vngClientConnectionConfigurations::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{SubResource} }
    provisioningState = nothing # spec type: Union{ Nothing, ProvisioningState }

    function VirtualNetworkGatewayPolicyGroupProperties(isDefault, priority, policyMembers, vngClientConnectionConfigurations, provisioningState, )
        o = new(isDefault, priority, policyMembers, vngClientConnectionConfigurations, provisioningState, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type VirtualNetworkGatewayPolicyGroupProperties

const _property_types_VirtualNetworkGatewayPolicyGroupProperties = Dict{Symbol,String}(Symbol("isDefault")=>"Bool", Symbol("priority")=>"Int64", Symbol("policyMembers")=>"Vector{VirtualNetworkGatewayPolicyGroupMember}", Symbol("vngClientConnectionConfigurations")=>"Vector{SubResource}", Symbol("provisioningState")=>"ProvisioningState", )
OpenAPI.property_type(::Type{ VirtualNetworkGatewayPolicyGroupProperties }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_VirtualNetworkGatewayPolicyGroupProperties[name]))}

function OpenAPI.check_required(o::VirtualNetworkGatewayPolicyGroupProperties)
    o.isDefault === nothing && (return false)
    o.priority === nothing && (return false)
    o.policyMembers === nothing && (return false)
    true
end

function OpenAPI.validate_properties(o::VirtualNetworkGatewayPolicyGroupProperties)
    OpenAPI.validate_property(VirtualNetworkGatewayPolicyGroupProperties, Symbol("isDefault"), o.isDefault)
    OpenAPI.validate_property(VirtualNetworkGatewayPolicyGroupProperties, Symbol("priority"), o.priority)
    OpenAPI.validate_property(VirtualNetworkGatewayPolicyGroupProperties, Symbol("policyMembers"), o.policyMembers)
    OpenAPI.validate_property(VirtualNetworkGatewayPolicyGroupProperties, Symbol("vngClientConnectionConfigurations"), o.vngClientConnectionConfigurations)
    OpenAPI.validate_property(VirtualNetworkGatewayPolicyGroupProperties, Symbol("provisioningState"), o.provisioningState)
end

function OpenAPI.validate_property(::Type{ VirtualNetworkGatewayPolicyGroupProperties }, name::Symbol, val)


    if name === Symbol("priority")
        OpenAPI.validate_param(name, "VirtualNetworkGatewayPolicyGroupProperties", :format, val, "int32")
    end



end
