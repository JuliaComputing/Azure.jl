# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct VirtualNetworkGatewaysApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `VirtualNetworkGatewaysApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ VirtualNetworkGatewaysApi }) = "https://management.azure.com"

const _returntypes_virtual_network_gateways_create_or_update_VirtualNetworkGatewaysApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => VirtualNetworkGateway,
    Regex("^" * replace("201", "x"=>".") * "\$") => VirtualNetworkGateway,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_virtual_network_gateways_create_or_update(_api::VirtualNetworkGatewaysApi, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String, parameters::VirtualNetworkGateway; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_virtual_network_gateways_create_or_update_VirtualNetworkGatewaysApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}", ["azure_auth", ], parameters)
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "virtualNetworkGatewayName", virtual_network_gateway_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Creates or updates a virtual network gateway in the specified resource group.

Params:
- resource_group_name::String (required)
- virtual_network_gateway_name::String (required)
- api_version::String (required)
- subscription_id::String (required)
- parameters::VirtualNetworkGateway (required)

Return: VirtualNetworkGateway, OpenAPI.Clients.ApiResponse
"""
function virtual_network_gateways_create_or_update(_api::VirtualNetworkGatewaysApi, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String, parameters::VirtualNetworkGateway; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_create_or_update(_api, resource_group_name, virtual_network_gateway_name, api_version, subscription_id, parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function virtual_network_gateways_create_or_update(_api::VirtualNetworkGatewaysApi, response_stream::Channel, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String, parameters::VirtualNetworkGateway; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_create_or_update(_api, resource_group_name, virtual_network_gateway_name, api_version, subscription_id, parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_virtual_network_gateways_delete_VirtualNetworkGatewaysApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("202", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_virtual_network_gateways_delete(_api::VirtualNetworkGatewaysApi, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_virtual_network_gateways_delete_VirtualNetworkGatewaysApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "virtualNetworkGatewayName", virtual_network_gateway_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Deletes the specified virtual network gateway.

Params:
- resource_group_name::String (required)
- virtual_network_gateway_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function virtual_network_gateways_delete(_api::VirtualNetworkGatewaysApi, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_delete(_api, resource_group_name, virtual_network_gateway_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function virtual_network_gateways_delete(_api::VirtualNetworkGatewaysApi, response_stream::Channel, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_delete(_api, resource_group_name, virtual_network_gateway_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_virtual_network_gateways_disconnect_virtual_network_gateway_vpn_connections_VirtualNetworkGatewaysApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("202", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_virtual_network_gateways_disconnect_virtual_network_gateway_vpn_connections(_api::VirtualNetworkGatewaysApi, subscription_id::String, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, request::P2SVpnConnectionRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_virtual_network_gateways_disconnect_virtual_network_gateway_vpn_connections_VirtualNetworkGatewaysApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/disconnectVirtualNetworkGatewayVpnConnections", ["azure_auth", ], request)
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "virtualNetworkGatewayName", virtual_network_gateway_name)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Disconnect vpn connections of virtual network gateway in the specified resource group.

Params:
- subscription_id::String (required)
- resource_group_name::String (required)
- virtual_network_gateway_name::String (required)
- api_version::String (required)
- request::P2SVpnConnectionRequest (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function virtual_network_gateways_disconnect_virtual_network_gateway_vpn_connections(_api::VirtualNetworkGatewaysApi, subscription_id::String, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, request::P2SVpnConnectionRequest; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_disconnect_virtual_network_gateway_vpn_connections(_api, subscription_id, resource_group_name, virtual_network_gateway_name, api_version, request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function virtual_network_gateways_disconnect_virtual_network_gateway_vpn_connections(_api::VirtualNetworkGatewaysApi, response_stream::Channel, subscription_id::String, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, request::P2SVpnConnectionRequest; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_disconnect_virtual_network_gateway_vpn_connections(_api, subscription_id, resource_group_name, virtual_network_gateway_name, api_version, request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_virtual_network_gateways_generate_vpn_profile_VirtualNetworkGatewaysApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => String,
    Regex("^" * replace("202", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_virtual_network_gateways_generate_vpn_profile(_api::VirtualNetworkGatewaysApi, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String, parameters::VpnClientParameters; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_virtual_network_gateways_generate_vpn_profile_VirtualNetworkGatewaysApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/generatevpnprofile", ["azure_auth", ], parameters)
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "virtualNetworkGatewayName", virtual_network_gateway_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Generates VPN profile for P2S client of the virtual network gateway in the specified resource group. Used for IKEV2 and radius based authentication.

Params:
- resource_group_name::String (required)
- virtual_network_gateway_name::String (required)
- api_version::String (required)
- subscription_id::String (required)
- parameters::VpnClientParameters (required)

Return: String, OpenAPI.Clients.ApiResponse
"""
function virtual_network_gateways_generate_vpn_profile(_api::VirtualNetworkGatewaysApi, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String, parameters::VpnClientParameters; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_generate_vpn_profile(_api, resource_group_name, virtual_network_gateway_name, api_version, subscription_id, parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function virtual_network_gateways_generate_vpn_profile(_api::VirtualNetworkGatewaysApi, response_stream::Channel, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String, parameters::VpnClientParameters; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_generate_vpn_profile(_api, resource_group_name, virtual_network_gateway_name, api_version, subscription_id, parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_virtual_network_gateways_generatevpnclientpackage_VirtualNetworkGatewaysApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => String,
    Regex("^" * replace("202", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_virtual_network_gateways_generatevpnclientpackage(_api::VirtualNetworkGatewaysApi, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String, parameters::VpnClientParameters; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_virtual_network_gateways_generatevpnclientpackage_VirtualNetworkGatewaysApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/generatevpnclientpackage", ["azure_auth", ], parameters)
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "virtualNetworkGatewayName", virtual_network_gateway_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Generates VPN client package for P2S client of the virtual network gateway in the specified resource group.

Params:
- resource_group_name::String (required)
- virtual_network_gateway_name::String (required)
- api_version::String (required)
- subscription_id::String (required)
- parameters::VpnClientParameters (required)

Return: String, OpenAPI.Clients.ApiResponse
"""
function virtual_network_gateways_generatevpnclientpackage(_api::VirtualNetworkGatewaysApi, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String, parameters::VpnClientParameters; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_generatevpnclientpackage(_api, resource_group_name, virtual_network_gateway_name, api_version, subscription_id, parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function virtual_network_gateways_generatevpnclientpackage(_api::VirtualNetworkGatewaysApi, response_stream::Channel, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String, parameters::VpnClientParameters; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_generatevpnclientpackage(_api, resource_group_name, virtual_network_gateway_name, api_version, subscription_id, parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_virtual_network_gateways_get_VirtualNetworkGatewaysApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => VirtualNetworkGateway,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_virtual_network_gateways_get(_api::VirtualNetworkGatewaysApi, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_virtual_network_gateways_get_VirtualNetworkGatewaysApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "virtualNetworkGatewayName", virtual_network_gateway_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Gets the specified virtual network gateway by resource group.

Params:
- resource_group_name::String (required)
- virtual_network_gateway_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: VirtualNetworkGateway, OpenAPI.Clients.ApiResponse
"""
function virtual_network_gateways_get(_api::VirtualNetworkGatewaysApi, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_get(_api, resource_group_name, virtual_network_gateway_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function virtual_network_gateways_get(_api::VirtualNetworkGatewaysApi, response_stream::Channel, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_get(_api, resource_group_name, virtual_network_gateway_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_virtual_network_gateways_get_advertised_routes_VirtualNetworkGatewaysApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => GatewayRouteListResult,
    Regex("^" * replace("202", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_virtual_network_gateways_get_advertised_routes(_api::VirtualNetworkGatewaysApi, resource_group_name::String, virtual_network_gateway_name::String, peer::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_virtual_network_gateways_get_advertised_routes_VirtualNetworkGatewaysApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getAdvertisedRoutes", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "virtualNetworkGatewayName", virtual_network_gateway_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "peer", peer)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""This operation retrieves a list of routes the virtual network gateway is advertising to the specified peer.

Params:
- resource_group_name::String (required)
- virtual_network_gateway_name::String (required)
- peer::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: GatewayRouteListResult, OpenAPI.Clients.ApiResponse
"""
function virtual_network_gateways_get_advertised_routes(_api::VirtualNetworkGatewaysApi, resource_group_name::String, virtual_network_gateway_name::String, peer::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_get_advertised_routes(_api, resource_group_name, virtual_network_gateway_name, peer, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function virtual_network_gateways_get_advertised_routes(_api::VirtualNetworkGatewaysApi, response_stream::Channel, resource_group_name::String, virtual_network_gateway_name::String, peer::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_get_advertised_routes(_api, resource_group_name, virtual_network_gateway_name, peer, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_virtual_network_gateways_get_bgp_peer_status_VirtualNetworkGatewaysApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => BgpPeerStatusListResult,
    Regex("^" * replace("202", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_virtual_network_gateways_get_bgp_peer_status(_api::VirtualNetworkGatewaysApi, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String; peer=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_virtual_network_gateways_get_bgp_peer_status_VirtualNetworkGatewaysApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getBgpPeerStatus", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "virtualNetworkGatewayName", virtual_network_gateway_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "peer", peer)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""The GetBgpPeerStatus operation retrieves the status of all BGP peers.

Params:
- resource_group_name::String (required)
- virtual_network_gateway_name::String (required)
- api_version::String (required)
- subscription_id::String (required)
- peer::String

Return: BgpPeerStatusListResult, OpenAPI.Clients.ApiResponse
"""
function virtual_network_gateways_get_bgp_peer_status(_api::VirtualNetworkGatewaysApi, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String; peer=nothing, _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_get_bgp_peer_status(_api, resource_group_name, virtual_network_gateway_name, api_version, subscription_id; peer=peer, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function virtual_network_gateways_get_bgp_peer_status(_api::VirtualNetworkGatewaysApi, response_stream::Channel, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String; peer=nothing, _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_get_bgp_peer_status(_api, resource_group_name, virtual_network_gateway_name, api_version, subscription_id; peer=peer, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_virtual_network_gateways_get_learned_routes_VirtualNetworkGatewaysApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => GatewayRouteListResult,
    Regex("^" * replace("202", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_virtual_network_gateways_get_learned_routes(_api::VirtualNetworkGatewaysApi, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_virtual_network_gateways_get_learned_routes_VirtualNetworkGatewaysApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getLearnedRoutes", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "virtualNetworkGatewayName", virtual_network_gateway_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""This operation retrieves a list of routes the virtual network gateway has learned, including routes learned from BGP peers.

Params:
- resource_group_name::String (required)
- virtual_network_gateway_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: GatewayRouteListResult, OpenAPI.Clients.ApiResponse
"""
function virtual_network_gateways_get_learned_routes(_api::VirtualNetworkGatewaysApi, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_get_learned_routes(_api, resource_group_name, virtual_network_gateway_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function virtual_network_gateways_get_learned_routes(_api::VirtualNetworkGatewaysApi, response_stream::Channel, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_get_learned_routes(_api, resource_group_name, virtual_network_gateway_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_virtual_network_gateways_get_vpn_profile_package_url_VirtualNetworkGatewaysApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => String,
    Regex("^" * replace("202", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_virtual_network_gateways_get_vpn_profile_package_url(_api::VirtualNetworkGatewaysApi, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_virtual_network_gateways_get_vpn_profile_package_url_VirtualNetworkGatewaysApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getvpnprofilepackageurl", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "virtualNetworkGatewayName", virtual_network_gateway_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Gets pre-generated VPN profile for P2S client of the virtual network gateway in the specified resource group. The profile needs to be generated first using generateVpnProfile.

Params:
- resource_group_name::String (required)
- virtual_network_gateway_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: String, OpenAPI.Clients.ApiResponse
"""
function virtual_network_gateways_get_vpn_profile_package_url(_api::VirtualNetworkGatewaysApi, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_get_vpn_profile_package_url(_api, resource_group_name, virtual_network_gateway_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function virtual_network_gateways_get_vpn_profile_package_url(_api::VirtualNetworkGatewaysApi, response_stream::Channel, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_get_vpn_profile_package_url(_api, resource_group_name, virtual_network_gateway_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_virtual_network_gateways_get_vpnclient_connection_health_VirtualNetworkGatewaysApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => VpnClientConnectionHealthDetailListResult,
    Regex("^" * replace("202", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_virtual_network_gateways_get_vpnclient_connection_health(_api::VirtualNetworkGatewaysApi, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_virtual_network_gateways_get_vpnclient_connection_health_VirtualNetworkGatewaysApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getVpnClientConnectionHealth", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "virtualNetworkGatewayName", virtual_network_gateway_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Get VPN client connection health detail per P2S client connection of the virtual network gateway in the specified resource group.

Params:
- resource_group_name::String (required)
- virtual_network_gateway_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: VpnClientConnectionHealthDetailListResult, OpenAPI.Clients.ApiResponse
"""
function virtual_network_gateways_get_vpnclient_connection_health(_api::VirtualNetworkGatewaysApi, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_get_vpnclient_connection_health(_api, resource_group_name, virtual_network_gateway_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function virtual_network_gateways_get_vpnclient_connection_health(_api::VirtualNetworkGatewaysApi, response_stream::Channel, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_get_vpnclient_connection_health(_api, resource_group_name, virtual_network_gateway_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_virtual_network_gateways_get_vpnclient_ipsec_parameters_VirtualNetworkGatewaysApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => VpnClientIPsecParameters,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_virtual_network_gateways_get_vpnclient_ipsec_parameters(_api::VirtualNetworkGatewaysApi, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_virtual_network_gateways_get_vpnclient_ipsec_parameters_VirtualNetworkGatewaysApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/getvpnclientipsecparameters", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "virtualNetworkGatewayName", virtual_network_gateway_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""The Get VpnclientIpsecParameters operation retrieves information about the vpnclient ipsec policy for P2S client of virtual network gateway in the specified resource group through Network resource provider.

Params:
- resource_group_name::String (required)
- virtual_network_gateway_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: VpnClientIPsecParameters, OpenAPI.Clients.ApiResponse
"""
function virtual_network_gateways_get_vpnclient_ipsec_parameters(_api::VirtualNetworkGatewaysApi, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_get_vpnclient_ipsec_parameters(_api, resource_group_name, virtual_network_gateway_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function virtual_network_gateways_get_vpnclient_ipsec_parameters(_api::VirtualNetworkGatewaysApi, response_stream::Channel, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_get_vpnclient_ipsec_parameters(_api, resource_group_name, virtual_network_gateway_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_virtual_network_gateways_list_VirtualNetworkGatewaysApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => VirtualNetworkGatewayListResult,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_virtual_network_gateways_list(_api::VirtualNetworkGatewaysApi, resource_group_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_virtual_network_gateways_list_VirtualNetworkGatewaysApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Gets all virtual network gateways by resource group.

Params:
- resource_group_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: VirtualNetworkGatewayListResult, OpenAPI.Clients.ApiResponse
"""
function virtual_network_gateways_list(_api::VirtualNetworkGatewaysApi, resource_group_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_list(_api, resource_group_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function virtual_network_gateways_list(_api::VirtualNetworkGatewaysApi, response_stream::Channel, resource_group_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_list(_api, resource_group_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_virtual_network_gateways_list_connections_VirtualNetworkGatewaysApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => VirtualNetworkGatewayListConnectionsResult,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_virtual_network_gateways_list_connections(_api::VirtualNetworkGatewaysApi, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_virtual_network_gateways_list_connections_VirtualNetworkGatewaysApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/connections", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "virtualNetworkGatewayName", virtual_network_gateway_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Gets all the connections in a virtual network gateway.

Params:
- resource_group_name::String (required)
- virtual_network_gateway_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: VirtualNetworkGatewayListConnectionsResult, OpenAPI.Clients.ApiResponse
"""
function virtual_network_gateways_list_connections(_api::VirtualNetworkGatewaysApi, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_list_connections(_api, resource_group_name, virtual_network_gateway_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function virtual_network_gateways_list_connections(_api::VirtualNetworkGatewaysApi, response_stream::Channel, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_list_connections(_api, resource_group_name, virtual_network_gateway_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_virtual_network_gateways_reset_VirtualNetworkGatewaysApi = Dict{Regex,Type}(
    Regex("^" * replace("202", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("200", "x"=>".") * "\$") => VirtualNetworkGateway,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_virtual_network_gateways_reset(_api::VirtualNetworkGatewaysApi, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String; gateway_vip=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_virtual_network_gateways_reset_VirtualNetworkGatewaysApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/reset", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "virtualNetworkGatewayName", virtual_network_gateway_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "gatewayVip", gateway_vip)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Resets the primary of the virtual network gateway in the specified resource group.

Params:
- resource_group_name::String (required)
- virtual_network_gateway_name::String (required)
- api_version::String (required)
- subscription_id::String (required)
- gateway_vip::String

Return: VirtualNetworkGateway, OpenAPI.Clients.ApiResponse
"""
function virtual_network_gateways_reset(_api::VirtualNetworkGatewaysApi, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String; gateway_vip=nothing, _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_reset(_api, resource_group_name, virtual_network_gateway_name, api_version, subscription_id; gateway_vip=gateway_vip, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function virtual_network_gateways_reset(_api::VirtualNetworkGatewaysApi, response_stream::Channel, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String; gateway_vip=nothing, _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_reset(_api, resource_group_name, virtual_network_gateway_name, api_version, subscription_id; gateway_vip=gateway_vip, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_virtual_network_gateways_reset_vpn_client_shared_key_VirtualNetworkGatewaysApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("202", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_virtual_network_gateways_reset_vpn_client_shared_key(_api::VirtualNetworkGatewaysApi, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_virtual_network_gateways_reset_vpn_client_shared_key_VirtualNetworkGatewaysApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/resetvpnclientsharedkey", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "virtualNetworkGatewayName", virtual_network_gateway_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Resets the VPN client shared key of the virtual network gateway in the specified resource group.

Params:
- resource_group_name::String (required)
- virtual_network_gateway_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function virtual_network_gateways_reset_vpn_client_shared_key(_api::VirtualNetworkGatewaysApi, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_reset_vpn_client_shared_key(_api, resource_group_name, virtual_network_gateway_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function virtual_network_gateways_reset_vpn_client_shared_key(_api::VirtualNetworkGatewaysApi, response_stream::Channel, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_reset_vpn_client_shared_key(_api, resource_group_name, virtual_network_gateway_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_virtual_network_gateways_set_vpnclient_ipsec_parameters_VirtualNetworkGatewaysApi = Dict{Regex,Type}(
    Regex("^" * replace("202", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("200", "x"=>".") * "\$") => VpnClientIPsecParameters,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_virtual_network_gateways_set_vpnclient_ipsec_parameters(_api::VirtualNetworkGatewaysApi, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String, vpnclient_ipsec_params::VpnClientIPsecParameters; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_virtual_network_gateways_set_vpnclient_ipsec_parameters_VirtualNetworkGatewaysApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/setvpnclientipsecparameters", ["azure_auth", ], vpnclient_ipsec_params)
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "virtualNetworkGatewayName", virtual_network_gateway_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""The Set VpnclientIpsecParameters operation sets the vpnclient ipsec policy for P2S client of virtual network gateway in the specified resource group through Network resource provider.

Params:
- resource_group_name::String (required)
- virtual_network_gateway_name::String (required)
- api_version::String (required)
- subscription_id::String (required)
- vpnclient_ipsec_params::VpnClientIPsecParameters (required)

Return: VpnClientIPsecParameters, OpenAPI.Clients.ApiResponse
"""
function virtual_network_gateways_set_vpnclient_ipsec_parameters(_api::VirtualNetworkGatewaysApi, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String, vpnclient_ipsec_params::VpnClientIPsecParameters; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_set_vpnclient_ipsec_parameters(_api, resource_group_name, virtual_network_gateway_name, api_version, subscription_id, vpnclient_ipsec_params; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function virtual_network_gateways_set_vpnclient_ipsec_parameters(_api::VirtualNetworkGatewaysApi, response_stream::Channel, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String, vpnclient_ipsec_params::VpnClientIPsecParameters; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_set_vpnclient_ipsec_parameters(_api, resource_group_name, virtual_network_gateway_name, api_version, subscription_id, vpnclient_ipsec_params; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_virtual_network_gateways_start_packet_capture_VirtualNetworkGatewaysApi = Dict{Regex,Type}(
    Regex("^" * replace("202", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("200", "x"=>".") * "\$") => String,
    Regex("^" * replace("0", "x"=>".") * "\$") => Error,
)

function _oacinternal_virtual_network_gateways_start_packet_capture(_api::VirtualNetworkGatewaysApi, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String; parameters=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_virtual_network_gateways_start_packet_capture_VirtualNetworkGatewaysApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/startPacketCapture", ["azure_auth", ], parameters)
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "virtualNetworkGatewayName", virtual_network_gateway_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Starts packet capture on virtual network gateway in the specified resource group.

Params:
- resource_group_name::String (required)
- virtual_network_gateway_name::String (required)
- api_version::String (required)
- subscription_id::String (required)
- parameters::VpnPacketCaptureStartParameters

Return: String, OpenAPI.Clients.ApiResponse
"""
function virtual_network_gateways_start_packet_capture(_api::VirtualNetworkGatewaysApi, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String; parameters=nothing, _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_start_packet_capture(_api, resource_group_name, virtual_network_gateway_name, api_version, subscription_id; parameters=parameters, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function virtual_network_gateways_start_packet_capture(_api::VirtualNetworkGatewaysApi, response_stream::Channel, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String; parameters=nothing, _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_start_packet_capture(_api, resource_group_name, virtual_network_gateway_name, api_version, subscription_id; parameters=parameters, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_virtual_network_gateways_stop_packet_capture_VirtualNetworkGatewaysApi = Dict{Regex,Type}(
    Regex("^" * replace("202", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("200", "x"=>".") * "\$") => String,
    Regex("^" * replace("0", "x"=>".") * "\$") => Error,
)

function _oacinternal_virtual_network_gateways_stop_packet_capture(_api::VirtualNetworkGatewaysApi, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String, parameters::VpnPacketCaptureStopParameters; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_virtual_network_gateways_stop_packet_capture_VirtualNetworkGatewaysApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/stopPacketCapture", ["azure_auth", ], parameters)
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "virtualNetworkGatewayName", virtual_network_gateway_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Stops packet capture on virtual network gateway in the specified resource group.

Params:
- resource_group_name::String (required)
- virtual_network_gateway_name::String (required)
- api_version::String (required)
- subscription_id::String (required)
- parameters::VpnPacketCaptureStopParameters (required)

Return: String, OpenAPI.Clients.ApiResponse
"""
function virtual_network_gateways_stop_packet_capture(_api::VirtualNetworkGatewaysApi, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String, parameters::VpnPacketCaptureStopParameters; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_stop_packet_capture(_api, resource_group_name, virtual_network_gateway_name, api_version, subscription_id, parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function virtual_network_gateways_stop_packet_capture(_api::VirtualNetworkGatewaysApi, response_stream::Channel, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String, parameters::VpnPacketCaptureStopParameters; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_stop_packet_capture(_api, resource_group_name, virtual_network_gateway_name, api_version, subscription_id, parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_virtual_network_gateways_supported_vpn_devices_VirtualNetworkGatewaysApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => String,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_virtual_network_gateways_supported_vpn_devices(_api::VirtualNetworkGatewaysApi, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_virtual_network_gateways_supported_vpn_devices_VirtualNetworkGatewaysApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}/supportedvpndevices", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "virtualNetworkGatewayName", virtual_network_gateway_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Gets a xml format representation for supported vpn devices.

Params:
- resource_group_name::String (required)
- virtual_network_gateway_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: String, OpenAPI.Clients.ApiResponse
"""
function virtual_network_gateways_supported_vpn_devices(_api::VirtualNetworkGatewaysApi, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_supported_vpn_devices(_api, resource_group_name, virtual_network_gateway_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function virtual_network_gateways_supported_vpn_devices(_api::VirtualNetworkGatewaysApi, response_stream::Channel, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_supported_vpn_devices(_api, resource_group_name, virtual_network_gateway_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_virtual_network_gateways_update_tags_VirtualNetworkGatewaysApi = Dict{Regex,Type}(
    Regex("^" * replace("202", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("200", "x"=>".") * "\$") => VirtualNetworkGateway,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_virtual_network_gateways_update_tags(_api::VirtualNetworkGatewaysApi, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String, parameters::TagsObject; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PATCH", _returntypes_virtual_network_gateways_update_tags_VirtualNetworkGatewaysApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworkGateways/{virtualNetworkGatewayName}", ["azure_auth", ], parameters)
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "virtualNetworkGatewayName", virtual_network_gateway_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Updates a virtual network gateway tags.

Params:
- resource_group_name::String (required)
- virtual_network_gateway_name::String (required)
- api_version::String (required)
- subscription_id::String (required)
- parameters::TagsObject (required)

Return: VirtualNetworkGateway, OpenAPI.Clients.ApiResponse
"""
function virtual_network_gateways_update_tags(_api::VirtualNetworkGatewaysApi, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String, parameters::TagsObject; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_update_tags(_api, resource_group_name, virtual_network_gateway_name, api_version, subscription_id, parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function virtual_network_gateways_update_tags(_api::VirtualNetworkGatewaysApi, response_stream::Channel, resource_group_name::String, virtual_network_gateway_name::String, api_version::String, subscription_id::String, parameters::TagsObject; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_update_tags(_api, resource_group_name, virtual_network_gateway_name, api_version, subscription_id, parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_virtual_network_gateways_vpn_device_configuration_script_VirtualNetworkGatewaysApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => String,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_virtual_network_gateways_vpn_device_configuration_script(_api::VirtualNetworkGatewaysApi, resource_group_name::String, virtual_network_gateway_connection_name::String, api_version::String, subscription_id::String, parameters::VpnDeviceScriptParameters; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_virtual_network_gateways_vpn_device_configuration_script_VirtualNetworkGatewaysApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/connections/{virtualNetworkGatewayConnectionName}/vpndeviceconfigurationscript", ["azure_auth", ], parameters)
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "virtualNetworkGatewayConnectionName", virtual_network_gateway_connection_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Gets a xml format representation for vpn device configuration script.

Params:
- resource_group_name::String (required)
- virtual_network_gateway_connection_name::String (required)
- api_version::String (required)
- subscription_id::String (required)
- parameters::VpnDeviceScriptParameters (required)

Return: String, OpenAPI.Clients.ApiResponse
"""
function virtual_network_gateways_vpn_device_configuration_script(_api::VirtualNetworkGatewaysApi, resource_group_name::String, virtual_network_gateway_connection_name::String, api_version::String, subscription_id::String, parameters::VpnDeviceScriptParameters; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_vpn_device_configuration_script(_api, resource_group_name, virtual_network_gateway_connection_name, api_version, subscription_id, parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function virtual_network_gateways_vpn_device_configuration_script(_api::VirtualNetworkGatewaysApi, response_stream::Channel, resource_group_name::String, virtual_network_gateway_connection_name::String, api_version::String, subscription_id::String, parameters::VpnDeviceScriptParameters; _mediaType=nothing)
    _ctx = _oacinternal_virtual_network_gateways_vpn_device_configuration_script(_api, resource_group_name, virtual_network_gateway_connection_name, api_version, subscription_id, parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export virtual_network_gateways_create_or_update
export virtual_network_gateways_delete
export virtual_network_gateways_disconnect_virtual_network_gateway_vpn_connections
export virtual_network_gateways_generate_vpn_profile
export virtual_network_gateways_generatevpnclientpackage
export virtual_network_gateways_get
export virtual_network_gateways_get_advertised_routes
export virtual_network_gateways_get_bgp_peer_status
export virtual_network_gateways_get_learned_routes
export virtual_network_gateways_get_vpn_profile_package_url
export virtual_network_gateways_get_vpnclient_connection_health
export virtual_network_gateways_get_vpnclient_ipsec_parameters
export virtual_network_gateways_list
export virtual_network_gateways_list_connections
export virtual_network_gateways_reset
export virtual_network_gateways_reset_vpn_client_shared_key
export virtual_network_gateways_set_vpnclient_ipsec_parameters
export virtual_network_gateways_start_packet_capture
export virtual_network_gateways_stop_packet_capture
export virtual_network_gateways_supported_vpn_devices
export virtual_network_gateways_update_tags
export virtual_network_gateways_vpn_device_configuration_script
