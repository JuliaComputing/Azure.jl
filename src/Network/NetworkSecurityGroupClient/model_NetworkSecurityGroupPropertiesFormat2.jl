# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct NetworkSecurityGroupPropertiesFormat2 <: SwaggerModel
    securityRules::Any # spec type: Union{ Nothing, Vector{SecurityRule2} } # spec name: securityRules
    defaultSecurityRules::Any # spec type: Union{ Nothing, Vector{SecurityRule2} } # spec name: defaultSecurityRules
    networkInterfaces::Any # spec type: Union{ Nothing, Vector{NetworkInterface} } # spec name: networkInterfaces
    subnets::Any # spec type: Union{ Nothing, Vector{Subnet} } # spec name: subnets
    flowLogs::Any # spec type: Union{ Nothing, Vector{FlowLog} } # spec name: flowLogs
    resourceGuid::Any # spec type: Union{ Nothing, String } # spec name: resourceGuid
    provisioningState::Any # spec type: Union{ Nothing, ProvisioningState } # spec name: provisioningState

    function NetworkSecurityGroupPropertiesFormat2(;securityRules=nothing, defaultSecurityRules=nothing, networkInterfaces=nothing, subnets=nothing, flowLogs=nothing, resourceGuid=nothing, provisioningState=nothing)
        o = new()
        validate_property(NetworkSecurityGroupPropertiesFormat2, Symbol("securityRules"), securityRules)
        setfield!(o, Symbol("securityRules"), securityRules)
        validate_property(NetworkSecurityGroupPropertiesFormat2, Symbol("defaultSecurityRules"), defaultSecurityRules)
        setfield!(o, Symbol("defaultSecurityRules"), defaultSecurityRules)
        validate_property(NetworkSecurityGroupPropertiesFormat2, Symbol("networkInterfaces"), networkInterfaces)
        setfield!(o, Symbol("networkInterfaces"), networkInterfaces)
        validate_property(NetworkSecurityGroupPropertiesFormat2, Symbol("subnets"), subnets)
        setfield!(o, Symbol("subnets"), subnets)
        validate_property(NetworkSecurityGroupPropertiesFormat2, Symbol("flowLogs"), flowLogs)
        setfield!(o, Symbol("flowLogs"), flowLogs)
        validate_property(NetworkSecurityGroupPropertiesFormat2, Symbol("resourceGuid"), resourceGuid)
        setfield!(o, Symbol("resourceGuid"), resourceGuid)
        validate_property(NetworkSecurityGroupPropertiesFormat2, Symbol("provisioningState"), provisioningState)
        setfield!(o, Symbol("provisioningState"), provisioningState)
        o
    end
end # type NetworkSecurityGroupPropertiesFormat2

const _property_map_NetworkSecurityGroupPropertiesFormat2 = Dict{Symbol,Symbol}(Symbol("securityRules")=>Symbol("securityRules"), Symbol("defaultSecurityRules")=>Symbol("defaultSecurityRules"), Symbol("networkInterfaces")=>Symbol("networkInterfaces"), Symbol("subnets")=>Symbol("subnets"), Symbol("flowLogs")=>Symbol("flowLogs"), Symbol("resourceGuid")=>Symbol("resourceGuid"), Symbol("provisioningState")=>Symbol("provisioningState"))
const _property_types_NetworkSecurityGroupPropertiesFormat2 = Dict{Symbol,String}(Symbol("securityRules")=>"Vector{SecurityRule2}", Symbol("defaultSecurityRules")=>"Vector{SecurityRule2}", Symbol("networkInterfaces")=>"Vector{NetworkInterface}", Symbol("subnets")=>"Vector{Subnet}", Symbol("flowLogs")=>"Vector{FlowLog}", Symbol("resourceGuid")=>"String", Symbol("provisioningState")=>"ProvisioningState")
Base.propertynames(::Type{ NetworkSecurityGroupPropertiesFormat2 }) = collect(keys(_property_map_NetworkSecurityGroupPropertiesFormat2))
Swagger.property_type(::Type{ NetworkSecurityGroupPropertiesFormat2 }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_NetworkSecurityGroupPropertiesFormat2[name]))}
Swagger.field_name(::Type{ NetworkSecurityGroupPropertiesFormat2 }, property_name::Symbol) =  _property_map_NetworkSecurityGroupPropertiesFormat2[property_name]

function check_required(o::NetworkSecurityGroupPropertiesFormat2)
    true
end

function validate_property(::Type{ NetworkSecurityGroupPropertiesFormat2 }, name::Symbol, val)
end
