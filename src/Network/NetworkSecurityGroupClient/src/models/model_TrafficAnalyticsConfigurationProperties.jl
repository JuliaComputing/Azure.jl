# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""TrafficAnalyticsConfigurationProperties
Parameters that define the configuration of traffic analytics.

    TrafficAnalyticsConfigurationProperties(;
        enabled=nothing,
        workspaceId=nothing,
        workspaceRegion=nothing,
        workspaceResourceId=nothing,
        trafficAnalyticsInterval=nothing,
    )

    - enabled::Bool : Flag to enable/disable traffic analytics.
    - workspaceId::String : The resource guid of the attached workspace.
    - workspaceRegion::String : The location of the attached workspace.
    - workspaceResourceId::String : Resource Id of the attached workspace.
    - trafficAnalyticsInterval::Int64 : The interval in minutes which would decide how frequently TA service should do flow analytics.
"""
Base.@kwdef mutable struct TrafficAnalyticsConfigurationProperties <: OpenAPI.APIModel
    enabled::Union{Nothing, Bool} = nothing
    workspaceId::Union{Nothing, String} = nothing
    workspaceRegion::Union{Nothing, String} = nothing
    workspaceResourceId::Union{Nothing, String} = nothing
    trafficAnalyticsInterval::Union{Nothing, Int64} = nothing

    function TrafficAnalyticsConfigurationProperties(enabled, workspaceId, workspaceRegion, workspaceResourceId, trafficAnalyticsInterval, )
        OpenAPI.validate_property(TrafficAnalyticsConfigurationProperties, Symbol("enabled"), enabled)
        OpenAPI.validate_property(TrafficAnalyticsConfigurationProperties, Symbol("workspaceId"), workspaceId)
        OpenAPI.validate_property(TrafficAnalyticsConfigurationProperties, Symbol("workspaceRegion"), workspaceRegion)
        OpenAPI.validate_property(TrafficAnalyticsConfigurationProperties, Symbol("workspaceResourceId"), workspaceResourceId)
        OpenAPI.validate_property(TrafficAnalyticsConfigurationProperties, Symbol("trafficAnalyticsInterval"), trafficAnalyticsInterval)
        return new(enabled, workspaceId, workspaceRegion, workspaceResourceId, trafficAnalyticsInterval, )
    end
end # type TrafficAnalyticsConfigurationProperties

const _property_types_TrafficAnalyticsConfigurationProperties = Dict{Symbol,String}(Symbol("enabled")=>"Bool", Symbol("workspaceId")=>"String", Symbol("workspaceRegion")=>"String", Symbol("workspaceResourceId")=>"String", Symbol("trafficAnalyticsInterval")=>"Int64", )
OpenAPI.property_type(::Type{ TrafficAnalyticsConfigurationProperties }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_TrafficAnalyticsConfigurationProperties[name]))}

function check_required(o::TrafficAnalyticsConfigurationProperties)
    true
end

function OpenAPI.validate_property(::Type{ TrafficAnalyticsConfigurationProperties }, name::Symbol, val)
end
