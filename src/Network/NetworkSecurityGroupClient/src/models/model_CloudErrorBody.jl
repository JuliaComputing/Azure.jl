# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""CloudErrorBody
An error response from the service.

    CloudErrorBody(;
        code=nothing,
        message=nothing,
        target=nothing,
        details=nothing,
    )

    - code::String : An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    - message::String : A message describing the error, intended to be suitable for display in a user interface.
    - target::String : The target of the particular error. For example, the name of the property in error.
    - details::Vector{CloudErrorBody} : A list of additional details about the error.
"""
Base.@kwdef mutable struct CloudErrorBody <: OpenAPI.APIModel
    code::Union{Nothing, String} = nothing
    message::Union{Nothing, String} = nothing
    target::Union{Nothing, String} = nothing
    details::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CloudErrorBody} }

    function CloudErrorBody(code, message, target, details, )
        OpenAPI.validate_property(CloudErrorBody, Symbol("code"), code)
        OpenAPI.validate_property(CloudErrorBody, Symbol("message"), message)
        OpenAPI.validate_property(CloudErrorBody, Symbol("target"), target)
        OpenAPI.validate_property(CloudErrorBody, Symbol("details"), details)
        return new(code, message, target, details, )
    end
end # type CloudErrorBody

const _property_types_CloudErrorBody = Dict{Symbol,String}(Symbol("code")=>"String", Symbol("message")=>"String", Symbol("target")=>"String", Symbol("details")=>"Vector{CloudErrorBody}", )
OpenAPI.property_type(::Type{ CloudErrorBody }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CloudErrorBody[name]))}

function check_required(o::CloudErrorBody)
    true
end

function OpenAPI.validate_property(::Type{ CloudErrorBody }, name::Symbol, val)
end
