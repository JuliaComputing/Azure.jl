# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""PrivateLinkServiceConnectionProperties
Properties of the PrivateLinkServiceConnection.

    PrivateLinkServiceConnectionProperties(;
        provisioningState=nothing,
        privateLinkServiceId=nothing,
        groupIds=nothing,
        requestMessage=nothing,
        privateLinkServiceConnectionState=nothing,
    )

    - provisioningState::ProvisioningState
    - privateLinkServiceId::String : The resource id of private link service.
    - groupIds::Vector{String} : The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.
    - requestMessage::String : A message passed to the owner of the remote resource with this connection request. Restricted to 140 chars.
    - privateLinkServiceConnectionState::PrivateLinkServiceConnectionState
"""
Base.@kwdef mutable struct PrivateLinkServiceConnectionProperties <: OpenAPI.APIModel
    provisioningState = nothing # spec type: Union{ Nothing, ProvisioningState }
    privateLinkServiceId::Union{Nothing, String} = nothing
    groupIds::Union{Nothing, Vector{String}} = nothing
    requestMessage::Union{Nothing, String} = nothing
    privateLinkServiceConnectionState = nothing # spec type: Union{ Nothing, PrivateLinkServiceConnectionState }

    function PrivateLinkServiceConnectionProperties(provisioningState, privateLinkServiceId, groupIds, requestMessage, privateLinkServiceConnectionState, )
        o = new(provisioningState, privateLinkServiceId, groupIds, requestMessage, privateLinkServiceConnectionState, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type PrivateLinkServiceConnectionProperties

const _property_types_PrivateLinkServiceConnectionProperties = Dict{Symbol,String}(Symbol("provisioningState")=>"ProvisioningState", Symbol("privateLinkServiceId")=>"String", Symbol("groupIds")=>"Vector{String}", Symbol("requestMessage")=>"String", Symbol("privateLinkServiceConnectionState")=>"PrivateLinkServiceConnectionState", )
OpenAPI.property_type(::Type{ PrivateLinkServiceConnectionProperties }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_PrivateLinkServiceConnectionProperties[name]))}

function OpenAPI.check_required(o::PrivateLinkServiceConnectionProperties)
    true
end

function OpenAPI.validate_properties(o::PrivateLinkServiceConnectionProperties)
    OpenAPI.validate_property(PrivateLinkServiceConnectionProperties, Symbol("provisioningState"), o.provisioningState)
    OpenAPI.validate_property(PrivateLinkServiceConnectionProperties, Symbol("privateLinkServiceId"), o.privateLinkServiceId)
    OpenAPI.validate_property(PrivateLinkServiceConnectionProperties, Symbol("groupIds"), o.groupIds)
    OpenAPI.validate_property(PrivateLinkServiceConnectionProperties, Symbol("requestMessage"), o.requestMessage)
    OpenAPI.validate_property(PrivateLinkServiceConnectionProperties, Symbol("privateLinkServiceConnectionState"), o.privateLinkServiceConnectionState)
end

function OpenAPI.validate_property(::Type{ PrivateLinkServiceConnectionProperties }, name::Symbol, val)





end
