# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct RoutesApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `RoutesApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ RoutesApi }) = "https://management.azure.com"

const _returntypes_routes_create_or_update_RoutesApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Route,
    Regex("^" * replace("201", "x"=>".") * "\$") => Route,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_routes_create_or_update(_api::RoutesApi, resource_group_name::String, route_table_name::String, route_name::String, api_version::String, subscription_id::String, route_parameters::Route; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_routes_create_or_update_RoutesApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}", ["azure_auth", ], route_parameters)
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "routeTableName", route_table_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "routeName", route_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Creates or updates a route in the specified route table.

Params:
- resource_group_name::String (required)
- route_table_name::String (required)
- route_name::String (required)
- api_version::String (required)
- subscription_id::String (required)
- route_parameters::Route (required)

Return: Route, OpenAPI.Clients.ApiResponse
"""
function routes_create_or_update(_api::RoutesApi, resource_group_name::String, route_table_name::String, route_name::String, api_version::String, subscription_id::String, route_parameters::Route; _mediaType=nothing)
    _ctx = _oacinternal_routes_create_or_update(_api, resource_group_name, route_table_name, route_name, api_version, subscription_id, route_parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function routes_create_or_update(_api::RoutesApi, response_stream::Channel, resource_group_name::String, route_table_name::String, route_name::String, api_version::String, subscription_id::String, route_parameters::Route; _mediaType=nothing)
    _ctx = _oacinternal_routes_create_or_update(_api, resource_group_name, route_table_name, route_name, api_version, subscription_id, route_parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_routes_delete_RoutesApi = Dict{Regex,Type}(
    Regex("^" * replace("202", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_routes_delete(_api::RoutesApi, resource_group_name::String, route_table_name::String, route_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_routes_delete_RoutesApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "routeTableName", route_table_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "routeName", route_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Deletes the specified route from a route table.

Params:
- resource_group_name::String (required)
- route_table_name::String (required)
- route_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function routes_delete(_api::RoutesApi, resource_group_name::String, route_table_name::String, route_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_routes_delete(_api, resource_group_name, route_table_name, route_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function routes_delete(_api::RoutesApi, response_stream::Channel, resource_group_name::String, route_table_name::String, route_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_routes_delete(_api, resource_group_name, route_table_name, route_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_routes_get_RoutesApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Route,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_routes_get(_api::RoutesApi, resource_group_name::String, route_table_name::String, route_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_routes_get_RoutesApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes/{routeName}", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "routeTableName", route_table_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "routeName", route_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Gets the specified route from a route table.

Params:
- resource_group_name::String (required)
- route_table_name::String (required)
- route_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: Route, OpenAPI.Clients.ApiResponse
"""
function routes_get(_api::RoutesApi, resource_group_name::String, route_table_name::String, route_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_routes_get(_api, resource_group_name, route_table_name, route_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function routes_get(_api::RoutesApi, response_stream::Channel, resource_group_name::String, route_table_name::String, route_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_routes_get(_api, resource_group_name, route_table_name, route_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_routes_list_RoutesApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => RouteListResult,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_routes_list(_api::RoutesApi, resource_group_name::String, route_table_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_routes_list_RoutesApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/routeTables/{routeTableName}/routes", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "routeTableName", route_table_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Gets all routes in a route table.

Params:
- resource_group_name::String (required)
- route_table_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: RouteListResult, OpenAPI.Clients.ApiResponse
"""
function routes_list(_api::RoutesApi, resource_group_name::String, route_table_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_routes_list(_api, resource_group_name, route_table_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function routes_list(_api::RoutesApi, response_stream::Channel, resource_group_name::String, route_table_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_routes_list(_api, resource_group_name, route_table_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export routes_create_or_update
export routes_delete
export routes_get
export routes_list
