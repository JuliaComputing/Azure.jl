# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct TrafficAnalyticsConfigurationProperties <: SwaggerModel
    enabled::Any # spec type: Union{ Nothing, Bool } # spec name: enabled
    workspaceId::Any # spec type: Union{ Nothing, String } # spec name: workspaceId
    workspaceRegion::Any # spec type: Union{ Nothing, String } # spec name: workspaceRegion
    workspaceResourceId::Any # spec type: Union{ Nothing, String } # spec name: workspaceResourceId
    trafficAnalyticsInterval::Any # spec type: Union{ Nothing, Int32 } # spec name: trafficAnalyticsInterval

    function TrafficAnalyticsConfigurationProperties(;enabled=nothing, workspaceId=nothing, workspaceRegion=nothing, workspaceResourceId=nothing, trafficAnalyticsInterval=nothing)
        o = new()
        validate_property(TrafficAnalyticsConfigurationProperties, Symbol("enabled"), enabled)
        setfield!(o, Symbol("enabled"), enabled)
        validate_property(TrafficAnalyticsConfigurationProperties, Symbol("workspaceId"), workspaceId)
        setfield!(o, Symbol("workspaceId"), workspaceId)
        validate_property(TrafficAnalyticsConfigurationProperties, Symbol("workspaceRegion"), workspaceRegion)
        setfield!(o, Symbol("workspaceRegion"), workspaceRegion)
        validate_property(TrafficAnalyticsConfigurationProperties, Symbol("workspaceResourceId"), workspaceResourceId)
        setfield!(o, Symbol("workspaceResourceId"), workspaceResourceId)
        validate_property(TrafficAnalyticsConfigurationProperties, Symbol("trafficAnalyticsInterval"), trafficAnalyticsInterval)
        setfield!(o, Symbol("trafficAnalyticsInterval"), trafficAnalyticsInterval)
        o
    end
end # type TrafficAnalyticsConfigurationProperties

const _property_map_TrafficAnalyticsConfigurationProperties = Dict{Symbol,Symbol}(Symbol("enabled")=>Symbol("enabled"), Symbol("workspaceId")=>Symbol("workspaceId"), Symbol("workspaceRegion")=>Symbol("workspaceRegion"), Symbol("workspaceResourceId")=>Symbol("workspaceResourceId"), Symbol("trafficAnalyticsInterval")=>Symbol("trafficAnalyticsInterval"))
const _property_types_TrafficAnalyticsConfigurationProperties = Dict{Symbol,String}(Symbol("enabled")=>"Bool", Symbol("workspaceId")=>"String", Symbol("workspaceRegion")=>"String", Symbol("workspaceResourceId")=>"String", Symbol("trafficAnalyticsInterval")=>"Int32")
Base.propertynames(::Type{ TrafficAnalyticsConfigurationProperties }) = collect(keys(_property_map_TrafficAnalyticsConfigurationProperties))
Swagger.property_type(::Type{ TrafficAnalyticsConfigurationProperties }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_TrafficAnalyticsConfigurationProperties[name]))}
Swagger.field_name(::Type{ TrafficAnalyticsConfigurationProperties }, property_name::Symbol) =  _property_map_TrafficAnalyticsConfigurationProperties[property_name]

function check_required(o::TrafficAnalyticsConfigurationProperties)
    true
end

function validate_property(::Type{ TrafficAnalyticsConfigurationProperties }, name::Symbol, val)
end
