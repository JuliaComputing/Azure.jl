# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct LoadBalancerBackendAddressPropertiesFormat2 <: SwaggerModel
    virtualNetwork::Any # spec type: Union{ Nothing, SubResource } # spec name: virtualNetwork
    ipAddress::Any # spec type: Union{ Nothing, String } # spec name: ipAddress
    networkInterfaceIPConfiguration::Any # spec type: Union{ Nothing, SubResource } # spec name: networkInterfaceIPConfiguration

    function LoadBalancerBackendAddressPropertiesFormat2(;virtualNetwork=nothing, ipAddress=nothing, networkInterfaceIPConfiguration=nothing)
        o = new()
        validate_property(LoadBalancerBackendAddressPropertiesFormat2, Symbol("virtualNetwork"), virtualNetwork)
        setfield!(o, Symbol("virtualNetwork"), virtualNetwork)
        validate_property(LoadBalancerBackendAddressPropertiesFormat2, Symbol("ipAddress"), ipAddress)
        setfield!(o, Symbol("ipAddress"), ipAddress)
        validate_property(LoadBalancerBackendAddressPropertiesFormat2, Symbol("networkInterfaceIPConfiguration"), networkInterfaceIPConfiguration)
        setfield!(o, Symbol("networkInterfaceIPConfiguration"), networkInterfaceIPConfiguration)
        o
    end
end # type LoadBalancerBackendAddressPropertiesFormat2

const _property_map_LoadBalancerBackendAddressPropertiesFormat2 = Dict{Symbol,Symbol}(Symbol("virtualNetwork")=>Symbol("virtualNetwork"), Symbol("ipAddress")=>Symbol("ipAddress"), Symbol("networkInterfaceIPConfiguration")=>Symbol("networkInterfaceIPConfiguration"))
const _property_types_LoadBalancerBackendAddressPropertiesFormat2 = Dict{Symbol,String}(Symbol("virtualNetwork")=>"SubResource", Symbol("ipAddress")=>"String", Symbol("networkInterfaceIPConfiguration")=>"SubResource")
Base.propertynames(::Type{ LoadBalancerBackendAddressPropertiesFormat2 }) = collect(keys(_property_map_LoadBalancerBackendAddressPropertiesFormat2))
Swagger.property_type(::Type{ LoadBalancerBackendAddressPropertiesFormat2 }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_LoadBalancerBackendAddressPropertiesFormat2[name]))}
Swagger.field_name(::Type{ LoadBalancerBackendAddressPropertiesFormat2 }, property_name::Symbol) =  _property_map_LoadBalancerBackendAddressPropertiesFormat2[property_name]

function check_required(o::LoadBalancerBackendAddressPropertiesFormat2)
    true
end

function validate_property(::Type{ LoadBalancerBackendAddressPropertiesFormat2 }, name::Symbol, val)
end
