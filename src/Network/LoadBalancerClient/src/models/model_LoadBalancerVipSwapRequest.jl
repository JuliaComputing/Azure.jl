# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""LoadBalancerVipSwapRequest
The request for a VIP swap.

    LoadBalancerVipSwapRequest(;
        frontendIPConfigurations=nothing,
    )

    - frontendIPConfigurations::Vector{LoadBalancerVipSwapRequestFrontendIPConfiguration} : A list of frontend IP configuration resources that should swap VIPs.
"""
Base.@kwdef mutable struct LoadBalancerVipSwapRequest <: OpenAPI.APIModel
    frontendIPConfigurations::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{LoadBalancerVipSwapRequestFrontendIPConfiguration} }

    function LoadBalancerVipSwapRequest(frontendIPConfigurations, )
        o = new(frontendIPConfigurations, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type LoadBalancerVipSwapRequest

const _property_types_LoadBalancerVipSwapRequest = Dict{Symbol,String}(Symbol("frontendIPConfigurations")=>"Vector{LoadBalancerVipSwapRequestFrontendIPConfiguration}", )
OpenAPI.property_type(::Type{ LoadBalancerVipSwapRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_LoadBalancerVipSwapRequest[name]))}

function OpenAPI.check_required(o::LoadBalancerVipSwapRequest)
    true
end

function OpenAPI.validate_properties(o::LoadBalancerVipSwapRequest)
    OpenAPI.validate_property(LoadBalancerVipSwapRequest, Symbol("frontendIPConfigurations"), o.frontendIPConfigurations)
end

function OpenAPI.validate_property(::Type{ LoadBalancerVipSwapRequest }, name::Symbol, val)

end
