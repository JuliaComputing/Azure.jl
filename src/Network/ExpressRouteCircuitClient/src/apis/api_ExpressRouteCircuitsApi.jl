# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct ExpressRouteCircuitsApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `ExpressRouteCircuitsApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ ExpressRouteCircuitsApi }) = "https://management.azure.com"

const _returntypes_express_route_circuits_create_or_update_ExpressRouteCircuitsApi = Dict{Regex,Type}(
    Regex("^" * replace("201", "x"=>".") * "\$") => ExpressRouteCircuit,
    Regex("^" * replace("200", "x"=>".") * "\$") => ExpressRouteCircuit,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_express_route_circuits_create_or_update(_api::ExpressRouteCircuitsApi, resource_group_name::String, circuit_name::String, api_version::String, subscription_id::String, parameters::ExpressRouteCircuit; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_express_route_circuits_create_or_update_ExpressRouteCircuitsApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}", ["azure_auth", ], parameters)
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "circuitName", circuit_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Creates or updates an express route circuit.

Params:
- resource_group_name::String (required)
- circuit_name::String (required)
- api_version::String (required)
- subscription_id::String (required)
- parameters::ExpressRouteCircuit (required)

Return: ExpressRouteCircuit, OpenAPI.Clients.ApiResponse
"""
function express_route_circuits_create_or_update(_api::ExpressRouteCircuitsApi, resource_group_name::String, circuit_name::String, api_version::String, subscription_id::String, parameters::ExpressRouteCircuit; _mediaType=nothing)
    _ctx = _oacinternal_express_route_circuits_create_or_update(_api, resource_group_name, circuit_name, api_version, subscription_id, parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function express_route_circuits_create_or_update(_api::ExpressRouteCircuitsApi, response_stream::Channel, resource_group_name::String, circuit_name::String, api_version::String, subscription_id::String, parameters::ExpressRouteCircuit; _mediaType=nothing)
    _ctx = _oacinternal_express_route_circuits_create_or_update(_api, resource_group_name, circuit_name, api_version, subscription_id, parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_express_route_circuits_delete_ExpressRouteCircuitsApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("202", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_express_route_circuits_delete(_api::ExpressRouteCircuitsApi, resource_group_name::String, circuit_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_express_route_circuits_delete_ExpressRouteCircuitsApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "circuitName", circuit_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Deletes the specified express route circuit.

Params:
- resource_group_name::String (required)
- circuit_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function express_route_circuits_delete(_api::ExpressRouteCircuitsApi, resource_group_name::String, circuit_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_express_route_circuits_delete(_api, resource_group_name, circuit_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function express_route_circuits_delete(_api::ExpressRouteCircuitsApi, response_stream::Channel, resource_group_name::String, circuit_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_express_route_circuits_delete(_api, resource_group_name, circuit_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_express_route_circuits_get_ExpressRouteCircuitsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ExpressRouteCircuit,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_express_route_circuits_get(_api::ExpressRouteCircuitsApi, resource_group_name::String, circuit_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_express_route_circuits_get_ExpressRouteCircuitsApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "circuitName", circuit_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Gets information about the specified express route circuit.

Params:
- resource_group_name::String (required)
- circuit_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: ExpressRouteCircuit, OpenAPI.Clients.ApiResponse
"""
function express_route_circuits_get(_api::ExpressRouteCircuitsApi, resource_group_name::String, circuit_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_express_route_circuits_get(_api, resource_group_name, circuit_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function express_route_circuits_get(_api::ExpressRouteCircuitsApi, response_stream::Channel, resource_group_name::String, circuit_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_express_route_circuits_get(_api, resource_group_name, circuit_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_express_route_circuits_list_ExpressRouteCircuitsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ExpressRouteCircuitListResult,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_express_route_circuits_list(_api::ExpressRouteCircuitsApi, resource_group_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_express_route_circuits_list_ExpressRouteCircuitsApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Gets all the express route circuits in a resource group.

Params:
- resource_group_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: ExpressRouteCircuitListResult, OpenAPI.Clients.ApiResponse
"""
function express_route_circuits_list(_api::ExpressRouteCircuitsApi, resource_group_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_express_route_circuits_list(_api, resource_group_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function express_route_circuits_list(_api::ExpressRouteCircuitsApi, response_stream::Channel, resource_group_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_express_route_circuits_list(_api, resource_group_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_express_route_circuits_list_all_ExpressRouteCircuitsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ExpressRouteCircuitListResult,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_express_route_circuits_list_all(_api::ExpressRouteCircuitsApi, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_express_route_circuits_list_all_ExpressRouteCircuitsApi, "/subscriptions/{subscriptionId}/providers/Microsoft.Network/expressRouteCircuits", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Gets all the express route circuits in a subscription.

Params:
- api_version::String (required)
- subscription_id::String (required)

Return: ExpressRouteCircuitListResult, OpenAPI.Clients.ApiResponse
"""
function express_route_circuits_list_all(_api::ExpressRouteCircuitsApi, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_express_route_circuits_list_all(_api, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function express_route_circuits_list_all(_api::ExpressRouteCircuitsApi, response_stream::Channel, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_express_route_circuits_list_all(_api, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_express_route_circuits_update_tags_ExpressRouteCircuitsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ExpressRouteCircuit,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_express_route_circuits_update_tags(_api::ExpressRouteCircuitsApi, resource_group_name::String, circuit_name::String, api_version::String, subscription_id::String, parameters::TagsObject; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PATCH", _returntypes_express_route_circuits_update_tags_ExpressRouteCircuitsApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/expressRouteCircuits/{circuitName}", ["azure_auth", ], parameters)
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "circuitName", circuit_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Updates an express route circuit tags.

Params:
- resource_group_name::String (required)
- circuit_name::String (required)
- api_version::String (required)
- subscription_id::String (required)
- parameters::TagsObject (required)

Return: ExpressRouteCircuit, OpenAPI.Clients.ApiResponse
"""
function express_route_circuits_update_tags(_api::ExpressRouteCircuitsApi, resource_group_name::String, circuit_name::String, api_version::String, subscription_id::String, parameters::TagsObject; _mediaType=nothing)
    _ctx = _oacinternal_express_route_circuits_update_tags(_api, resource_group_name, circuit_name, api_version, subscription_id, parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function express_route_circuits_update_tags(_api::ExpressRouteCircuitsApi, response_stream::Channel, resource_group_name::String, circuit_name::String, api_version::String, subscription_id::String, parameters::TagsObject; _mediaType=nothing)
    _ctx = _oacinternal_express_route_circuits_update_tags(_api, resource_group_name, circuit_name, api_version, subscription_id, parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export express_route_circuits_create_or_update
export express_route_circuits_delete
export express_route_circuits_get
export express_route_circuits_list
export express_route_circuits_list_all
export express_route_circuits_update_tags
