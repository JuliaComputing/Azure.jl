# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ExpressRouteCircuitArpTable
The ARP table associated with the ExpressRouteCircuit.

    ExpressRouteCircuitArpTable(;
        age=nothing,
        interface=nothing,
        ipAddress=nothing,
        macAddress=nothing,
    )

    - age::Int64 : Entry age in minutes.
    - interface::String : Interface address.
    - ipAddress::String : The IP address.
    - macAddress::String : The MAC address.
"""
Base.@kwdef mutable struct ExpressRouteCircuitArpTable <: OpenAPI.APIModel
    age::Union{Nothing, Int64} = nothing
    interface::Union{Nothing, String} = nothing
    ipAddress::Union{Nothing, String} = nothing
    macAddress::Union{Nothing, String} = nothing

    function ExpressRouteCircuitArpTable(age, interface, ipAddress, macAddress, )
        OpenAPI.validate_property(ExpressRouteCircuitArpTable, Symbol("age"), age)
        OpenAPI.validate_property(ExpressRouteCircuitArpTable, Symbol("interface"), interface)
        OpenAPI.validate_property(ExpressRouteCircuitArpTable, Symbol("ipAddress"), ipAddress)
        OpenAPI.validate_property(ExpressRouteCircuitArpTable, Symbol("macAddress"), macAddress)
        return new(age, interface, ipAddress, macAddress, )
    end
end # type ExpressRouteCircuitArpTable

const _property_types_ExpressRouteCircuitArpTable = Dict{Symbol,String}(Symbol("age")=>"Int64", Symbol("interface")=>"String", Symbol("ipAddress")=>"String", Symbol("macAddress")=>"String", )
OpenAPI.property_type(::Type{ ExpressRouteCircuitArpTable }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ExpressRouteCircuitArpTable[name]))}

function check_required(o::ExpressRouteCircuitArpTable)
    true
end

function OpenAPI.validate_property(::Type{ ExpressRouteCircuitArpTable }, name::Symbol, val)
    if name === Symbol("age")
        OpenAPI.validate_param(name, "ExpressRouteCircuitArpTable", :format, val, "int32")
    end
end
