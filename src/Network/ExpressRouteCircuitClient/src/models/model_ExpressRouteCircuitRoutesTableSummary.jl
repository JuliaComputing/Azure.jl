# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ExpressRouteCircuitRoutesTableSummary
The routes table associated with the ExpressRouteCircuit.

    ExpressRouteCircuitRoutesTableSummary(;
        neighbor=nothing,
        v=nothing,
        as=nothing,
        upDown=nothing,
        statePfxRcd=nothing,
    )

    - neighbor::String : IP address of the neighbor.
    - v::Int64 : BGP version number spoken to the neighbor.
    - as::Int64 : Autonomous system number.
    - upDown::String : The length of time that the BGP session has been in the Established state, or the current status if not in the Established state.
    - statePfxRcd::String : Current state of the BGP session, and the number of prefixes that have been received from a neighbor or peer group.
"""
Base.@kwdef mutable struct ExpressRouteCircuitRoutesTableSummary <: OpenAPI.APIModel
    neighbor::Union{Nothing, String} = nothing
    v::Union{Nothing, Int64} = nothing
    as::Union{Nothing, Int64} = nothing
    upDown::Union{Nothing, String} = nothing
    statePfxRcd::Union{Nothing, String} = nothing

    function ExpressRouteCircuitRoutesTableSummary(neighbor, v, as, upDown, statePfxRcd, )
        OpenAPI.validate_property(ExpressRouteCircuitRoutesTableSummary, Symbol("neighbor"), neighbor)
        OpenAPI.validate_property(ExpressRouteCircuitRoutesTableSummary, Symbol("v"), v)
        OpenAPI.validate_property(ExpressRouteCircuitRoutesTableSummary, Symbol("as"), as)
        OpenAPI.validate_property(ExpressRouteCircuitRoutesTableSummary, Symbol("upDown"), upDown)
        OpenAPI.validate_property(ExpressRouteCircuitRoutesTableSummary, Symbol("statePfxRcd"), statePfxRcd)
        return new(neighbor, v, as, upDown, statePfxRcd, )
    end
end # type ExpressRouteCircuitRoutesTableSummary

const _property_types_ExpressRouteCircuitRoutesTableSummary = Dict{Symbol,String}(Symbol("neighbor")=>"String", Symbol("v")=>"Int64", Symbol("as")=>"Int64", Symbol("upDown")=>"String", Symbol("statePfxRcd")=>"String", )
OpenAPI.property_type(::Type{ ExpressRouteCircuitRoutesTableSummary }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ExpressRouteCircuitRoutesTableSummary[name]))}

function check_required(o::ExpressRouteCircuitRoutesTableSummary)
    true
end

function OpenAPI.validate_property(::Type{ ExpressRouteCircuitRoutesTableSummary }, name::Symbol, val)
    if name === Symbol("v")
        OpenAPI.validate_param(name, "ExpressRouteCircuitRoutesTableSummary", :format, val, "int32")
    end
    if name === Symbol("as")
        OpenAPI.validate_param(name, "ExpressRouteCircuitRoutesTableSummary", :format, val, "int32")
    end
end
