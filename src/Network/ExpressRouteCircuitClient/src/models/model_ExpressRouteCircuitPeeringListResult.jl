# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ExpressRouteCircuitPeeringListResult
Response for ListPeering API service call retrieves all peerings that belong to an ExpressRouteCircuit.

    ExpressRouteCircuitPeeringListResult(;
        value=nothing,
        nextLink=nothing,
    )

    - value::Vector{ExpressRouteCircuitPeering} : The peerings in an express route circuit.
    - nextLink::String : The URL to get the next set of results.
"""
Base.@kwdef mutable struct ExpressRouteCircuitPeeringListResult <: OpenAPI.APIModel
    value::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{ExpressRouteCircuitPeering} }
    nextLink::Union{Nothing, String} = nothing

    function ExpressRouteCircuitPeeringListResult(value, nextLink, )
        OpenAPI.validate_property(ExpressRouteCircuitPeeringListResult, Symbol("value"), value)
        OpenAPI.validate_property(ExpressRouteCircuitPeeringListResult, Symbol("nextLink"), nextLink)
        return new(value, nextLink, )
    end
end # type ExpressRouteCircuitPeeringListResult

const _property_types_ExpressRouteCircuitPeeringListResult = Dict{Symbol,String}(Symbol("value")=>"Vector{ExpressRouteCircuitPeering}", Symbol("nextLink")=>"String", )
OpenAPI.property_type(::Type{ ExpressRouteCircuitPeeringListResult }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ExpressRouteCircuitPeeringListResult[name]))}

function check_required(o::ExpressRouteCircuitPeeringListResult)
    true
end

function OpenAPI.validate_property(::Type{ ExpressRouteCircuitPeeringListResult }, name::Symbol, val)
end
