# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ExpressRouteCircuit
ExpressRouteCircuit resource.

    ExpressRouteCircuit(;
        sku=nothing,
        properties=nothing,
        etag=nothing,
        id=nothing,
        name=nothing,
        type=nothing,
        location=nothing,
        tags=nothing,
    )

    - sku::ExpressRouteCircuitSku
    - properties::ExpressRouteCircuitPropertiesFormat
    - etag::String : A unique read-only string that changes whenever the resource is updated.
    - id::String : Resource ID.
    - name::String : Resource name.
    - type::String : Resource type.
    - location::String : Resource location.
    - tags::Dict{String, String} : Resource tags.
"""
Base.@kwdef mutable struct ExpressRouteCircuit <: OpenAPI.APIModel
    sku = nothing # spec type: Union{ Nothing, ExpressRouteCircuitSku }
    properties = nothing # spec type: Union{ Nothing, ExpressRouteCircuitPropertiesFormat }
    etag::Union{Nothing, String} = nothing
    id::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing
    location::Union{Nothing, String} = nothing
    tags::Union{Nothing, Dict{String, String}} = nothing

    function ExpressRouteCircuit(sku, properties, etag, id, name, type, location, tags, )
        o = new(sku, properties, etag, id, name, type, location, tags, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type ExpressRouteCircuit

const _property_types_ExpressRouteCircuit = Dict{Symbol,String}(Symbol("sku")=>"ExpressRouteCircuitSku", Symbol("properties")=>"ExpressRouteCircuitPropertiesFormat", Symbol("etag")=>"String", Symbol("id")=>"String", Symbol("name")=>"String", Symbol("type")=>"String", Symbol("location")=>"String", Symbol("tags")=>"Dict{String, String}", )
OpenAPI.property_type(::Type{ ExpressRouteCircuit }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ExpressRouteCircuit[name]))}

function OpenAPI.check_required(o::ExpressRouteCircuit)
    true
end

function OpenAPI.validate_properties(o::ExpressRouteCircuit)
    OpenAPI.validate_property(ExpressRouteCircuit, Symbol("sku"), o.sku)
    OpenAPI.validate_property(ExpressRouteCircuit, Symbol("properties"), o.properties)
    OpenAPI.validate_property(ExpressRouteCircuit, Symbol("etag"), o.etag)
    OpenAPI.validate_property(ExpressRouteCircuit, Symbol("id"), o.id)
    OpenAPI.validate_property(ExpressRouteCircuit, Symbol("name"), o.name)
    OpenAPI.validate_property(ExpressRouteCircuit, Symbol("type"), o.type)
    OpenAPI.validate_property(ExpressRouteCircuit, Symbol("location"), o.location)
    OpenAPI.validate_property(ExpressRouteCircuit, Symbol("tags"), o.tags)
end

function OpenAPI.validate_property(::Type{ ExpressRouteCircuit }, name::Symbol, val)








end
