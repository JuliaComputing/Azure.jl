# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ExpressRouteCircuitConnectionListResult
Response for ListConnections API service call retrieves all global reach connections that belongs to a Private Peering for an ExpressRouteCircuit.

    ExpressRouteCircuitConnectionListResult(;
        value=nothing,
        nextLink=nothing,
    )

    - value::Vector{ExpressRouteCircuitConnection} : The global reach connection associated with Private Peering in an ExpressRoute Circuit.
    - nextLink::String : The URL to get the next set of results.
"""
Base.@kwdef mutable struct ExpressRouteCircuitConnectionListResult <: OpenAPI.APIModel
    value::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{ExpressRouteCircuitConnection} }
    nextLink::Union{Nothing, String} = nothing

    function ExpressRouteCircuitConnectionListResult(value, nextLink, )
        OpenAPI.validate_property(ExpressRouteCircuitConnectionListResult, Symbol("value"), value)
        OpenAPI.validate_property(ExpressRouteCircuitConnectionListResult, Symbol("nextLink"), nextLink)
        return new(value, nextLink, )
    end
end # type ExpressRouteCircuitConnectionListResult

const _property_types_ExpressRouteCircuitConnectionListResult = Dict{Symbol,String}(Symbol("value")=>"Vector{ExpressRouteCircuitConnection}", Symbol("nextLink")=>"String", )
OpenAPI.property_type(::Type{ ExpressRouteCircuitConnectionListResult }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ExpressRouteCircuitConnectionListResult[name]))}

function check_required(o::ExpressRouteCircuitConnectionListResult)
    true
end

function OpenAPI.validate_property(::Type{ ExpressRouteCircuitConnectionListResult }, name::Symbol, val)
end
