# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ExpressRouteServiceProviderPropertiesFormat
Properties of ExpressRouteServiceProvider.

    ExpressRouteServiceProviderPropertiesFormat(;
        peeringLocations=nothing,
        bandwidthsOffered=nothing,
        provisioningState=nothing,
    )

    - peeringLocations::Vector{String} : A list of peering locations.
    - bandwidthsOffered::Vector{ExpressRouteServiceProviderBandwidthsOffered} : A list of bandwidths offered.
    - provisioningState::ProvisioningState
"""
Base.@kwdef mutable struct ExpressRouteServiceProviderPropertiesFormat <: OpenAPI.APIModel
    peeringLocations::Union{Nothing, Vector{String}} = nothing
    bandwidthsOffered::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{ExpressRouteServiceProviderBandwidthsOffered} }
    provisioningState = nothing # spec type: Union{ Nothing, ProvisioningState }

    function ExpressRouteServiceProviderPropertiesFormat(peeringLocations, bandwidthsOffered, provisioningState, )
        o = new(peeringLocations, bandwidthsOffered, provisioningState, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type ExpressRouteServiceProviderPropertiesFormat

const _property_types_ExpressRouteServiceProviderPropertiesFormat = Dict{Symbol,String}(Symbol("peeringLocations")=>"Vector{String}", Symbol("bandwidthsOffered")=>"Vector{ExpressRouteServiceProviderBandwidthsOffered}", Symbol("provisioningState")=>"ProvisioningState", )
OpenAPI.property_type(::Type{ ExpressRouteServiceProviderPropertiesFormat }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ExpressRouteServiceProviderPropertiesFormat[name]))}

function OpenAPI.check_required(o::ExpressRouteServiceProviderPropertiesFormat)
    true
end

function OpenAPI.validate_properties(o::ExpressRouteServiceProviderPropertiesFormat)
    OpenAPI.validate_property(ExpressRouteServiceProviderPropertiesFormat, Symbol("peeringLocations"), o.peeringLocations)
    OpenAPI.validate_property(ExpressRouteServiceProviderPropertiesFormat, Symbol("bandwidthsOffered"), o.bandwidthsOffered)
    OpenAPI.validate_property(ExpressRouteServiceProviderPropertiesFormat, Symbol("provisioningState"), o.provisioningState)
end

function OpenAPI.validate_property(::Type{ ExpressRouteServiceProviderPropertiesFormat }, name::Symbol, val)



end
