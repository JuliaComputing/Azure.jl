# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Ipv6CircuitConnectionConfig
IPv6 Circuit Connection properties for global reach.

    Ipv6CircuitConnectionConfig(;
        addressPrefix=nothing,
        circuitConnectionStatus=nothing,
    )

    - addressPrefix::String : /125 IP address space to carve out customer addresses for global reach.
    - circuitConnectionStatus::CircuitConnectionStatus
"""
Base.@kwdef mutable struct Ipv6CircuitConnectionConfig <: OpenAPI.APIModel
    addressPrefix::Union{Nothing, String} = nothing
    circuitConnectionStatus = nothing # spec type: Union{ Nothing, CircuitConnectionStatus }

    function Ipv6CircuitConnectionConfig(addressPrefix, circuitConnectionStatus, )
        OpenAPI.validate_property(Ipv6CircuitConnectionConfig, Symbol("addressPrefix"), addressPrefix)
        OpenAPI.validate_property(Ipv6CircuitConnectionConfig, Symbol("circuitConnectionStatus"), circuitConnectionStatus)
        return new(addressPrefix, circuitConnectionStatus, )
    end
end # type Ipv6CircuitConnectionConfig

const _property_types_Ipv6CircuitConnectionConfig = Dict{Symbol,String}(Symbol("addressPrefix")=>"String", Symbol("circuitConnectionStatus")=>"CircuitConnectionStatus", )
OpenAPI.property_type(::Type{ Ipv6CircuitConnectionConfig }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Ipv6CircuitConnectionConfig[name]))}

function check_required(o::Ipv6CircuitConnectionConfig)
    true
end

function OpenAPI.validate_property(::Type{ Ipv6CircuitConnectionConfig }, name::Symbol, val)
end
