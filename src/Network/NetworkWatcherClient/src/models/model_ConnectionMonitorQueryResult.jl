# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ConnectionMonitorQueryResult
List of connection states snapshots.

    ConnectionMonitorQueryResult(;
        sourceStatus=nothing,
        states=nothing,
    )

    - sourceStatus::String : Status of connection monitor source.
    - states::Vector{ConnectionStateSnapshot} : Information about connection states.
"""
Base.@kwdef mutable struct ConnectionMonitorQueryResult <: OpenAPI.APIModel
    sourceStatus::Union{Nothing, String} = nothing
    states::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{ConnectionStateSnapshot} }

    function ConnectionMonitorQueryResult(sourceStatus, states, )
        OpenAPI.validate_property(ConnectionMonitorQueryResult, Symbol("sourceStatus"), sourceStatus)
        OpenAPI.validate_property(ConnectionMonitorQueryResult, Symbol("states"), states)
        return new(sourceStatus, states, )
    end
end # type ConnectionMonitorQueryResult

const _property_types_ConnectionMonitorQueryResult = Dict{Symbol,String}(Symbol("sourceStatus")=>"String", Symbol("states")=>"Vector{ConnectionStateSnapshot}", )
OpenAPI.property_type(::Type{ ConnectionMonitorQueryResult }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ConnectionMonitorQueryResult[name]))}

function check_required(o::ConnectionMonitorQueryResult)
    true
end

function OpenAPI.validate_property(::Type{ ConnectionMonitorQueryResult }, name::Symbol, val)
    if name === Symbol("sourceStatus")
        OpenAPI.validate_param(name, "ConnectionMonitorQueryResult", :enum, val, ["Unknown", "Active", "Inactive"])
    end
end
