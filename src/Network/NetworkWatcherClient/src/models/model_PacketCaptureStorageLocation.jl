# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""PacketCaptureStorageLocation
The storage location for a packet capture session.

    PacketCaptureStorageLocation(;
        storageId=nothing,
        storagePath=nothing,
        filePath=nothing,
    )

    - storageId::String : The ID of the storage account to save the packet capture session. Required if no local file path is provided.
    - storagePath::String : The URI of the storage path to save the packet capture. Must be a well-formed URI describing the location to save the packet capture.
    - filePath::String : A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For linux virtual machine it must start with /var/captures. Required if no storage ID is provided, otherwise optional.
"""
Base.@kwdef mutable struct PacketCaptureStorageLocation <: OpenAPI.APIModel
    storageId::Union{Nothing, String} = nothing
    storagePath::Union{Nothing, String} = nothing
    filePath::Union{Nothing, String} = nothing

    function PacketCaptureStorageLocation(storageId, storagePath, filePath, )
        OpenAPI.validate_property(PacketCaptureStorageLocation, Symbol("storageId"), storageId)
        OpenAPI.validate_property(PacketCaptureStorageLocation, Symbol("storagePath"), storagePath)
        OpenAPI.validate_property(PacketCaptureStorageLocation, Symbol("filePath"), filePath)
        return new(storageId, storagePath, filePath, )
    end
end # type PacketCaptureStorageLocation

const _property_types_PacketCaptureStorageLocation = Dict{Symbol,String}(Symbol("storageId")=>"String", Symbol("storagePath")=>"String", Symbol("filePath")=>"String", )
OpenAPI.property_type(::Type{ PacketCaptureStorageLocation }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_PacketCaptureStorageLocation[name]))}

function check_required(o::PacketCaptureStorageLocation)
    true
end

function OpenAPI.validate_property(::Type{ PacketCaptureStorageLocation }, name::Symbol, val)
end
