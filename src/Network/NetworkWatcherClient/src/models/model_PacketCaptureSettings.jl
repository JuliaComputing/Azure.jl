# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""PacketCaptureSettings
The storage location for a packet capture session.

    PacketCaptureSettings(;
        fileCount=10,
        fileSizeInBytes=104857600,
        sessionTimeLimitInSeconds=86400,
    )

    - fileCount::Int64 : Number of file count. Default value of count is 10 and maximum number is 10000.
    - fileSizeInBytes::Int64 : Number of bytes captured per packet. Default value in bytes 104857600 (100MB) and maximum in bytes 4294967295 (4GB).
    - sessionTimeLimitInSeconds::Int64 : Maximum duration of the capture session in seconds is 604800s (7 days) for a file. Default value in second 86400s (1 day).
"""
Base.@kwdef mutable struct PacketCaptureSettings <: OpenAPI.APIModel
    fileCount::Union{Nothing, Int64} = 10
    fileSizeInBytes::Union{Nothing, Int64} = 104857600
    sessionTimeLimitInSeconds::Union{Nothing, Int64} = 86400

    function PacketCaptureSettings(fileCount, fileSizeInBytes, sessionTimeLimitInSeconds, )
        o = new(fileCount, fileSizeInBytes, sessionTimeLimitInSeconds, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type PacketCaptureSettings

const _property_types_PacketCaptureSettings = Dict{Symbol,String}(Symbol("fileCount")=>"Int64", Symbol("fileSizeInBytes")=>"Int64", Symbol("sessionTimeLimitInSeconds")=>"Int64", )
OpenAPI.property_type(::Type{ PacketCaptureSettings }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_PacketCaptureSettings[name]))}

function OpenAPI.check_required(o::PacketCaptureSettings)
    true
end

function OpenAPI.validate_properties(o::PacketCaptureSettings)
    OpenAPI.validate_property(PacketCaptureSettings, Symbol("fileCount"), o.fileCount)
    OpenAPI.validate_property(PacketCaptureSettings, Symbol("fileSizeInBytes"), o.fileSizeInBytes)
    OpenAPI.validate_property(PacketCaptureSettings, Symbol("sessionTimeLimitInSeconds"), o.sessionTimeLimitInSeconds)
end

function OpenAPI.validate_property(::Type{ PacketCaptureSettings }, name::Symbol, val)

    if name === Symbol("fileCount")
        OpenAPI.validate_param(name, "PacketCaptureSettings", :format, val, "int32")
    end
    if name === Symbol("fileCount")
        OpenAPI.validate_param(name, "PacketCaptureSettings", :maximum, val, 10000, false)
        OpenAPI.validate_param(name, "PacketCaptureSettings", :minimum, val, 0, false)
    end

    if name === Symbol("fileSizeInBytes")
        OpenAPI.validate_param(name, "PacketCaptureSettings", :format, val, "int64")
    end
    if name === Symbol("fileSizeInBytes")
        OpenAPI.validate_param(name, "PacketCaptureSettings", :maximum, val, 4294967295, false)
        OpenAPI.validate_param(name, "PacketCaptureSettings", :minimum, val, 0, false)
    end

    if name === Symbol("sessionTimeLimitInSeconds")
        OpenAPI.validate_param(name, "PacketCaptureSettings", :format, val, "int32")
    end
    if name === Symbol("sessionTimeLimitInSeconds")
        OpenAPI.validate_param(name, "PacketCaptureSettings", :maximum, val, 604800, false)
        OpenAPI.validate_param(name, "PacketCaptureSettings", :minimum, val, 0, false)
    end
end
