# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""SecurityRuleAssociations
All security rules associated with the network interface.

    SecurityRuleAssociations(;
        networkInterfaceAssociation=nothing,
        subnetAssociation=nothing,
        defaultSecurityRules=nothing,
        effectiveSecurityRules=nothing,
    )

    - networkInterfaceAssociation::NetworkInterfaceAssociation
    - subnetAssociation::SubnetAssociation
    - defaultSecurityRules::Vector{SecurityRule} : Collection of default security rules of the network security group.
    - effectiveSecurityRules::Vector{EffectiveNetworkSecurityRule} : Collection of effective security rules.
"""
Base.@kwdef mutable struct SecurityRuleAssociations <: OpenAPI.APIModel
    networkInterfaceAssociation = nothing # spec type: Union{ Nothing, NetworkInterfaceAssociation }
    subnetAssociation = nothing # spec type: Union{ Nothing, SubnetAssociation }
    defaultSecurityRules::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{SecurityRule} }
    effectiveSecurityRules::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{EffectiveNetworkSecurityRule} }

    function SecurityRuleAssociations(networkInterfaceAssociation, subnetAssociation, defaultSecurityRules, effectiveSecurityRules, )
        o = new(networkInterfaceAssociation, subnetAssociation, defaultSecurityRules, effectiveSecurityRules, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type SecurityRuleAssociations

const _property_types_SecurityRuleAssociations = Dict{Symbol,String}(Symbol("networkInterfaceAssociation")=>"NetworkInterfaceAssociation", Symbol("subnetAssociation")=>"SubnetAssociation", Symbol("defaultSecurityRules")=>"Vector{SecurityRule}", Symbol("effectiveSecurityRules")=>"Vector{EffectiveNetworkSecurityRule}", )
OpenAPI.property_type(::Type{ SecurityRuleAssociations }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_SecurityRuleAssociations[name]))}

function OpenAPI.check_required(o::SecurityRuleAssociations)
    true
end

function OpenAPI.validate_properties(o::SecurityRuleAssociations)
    OpenAPI.validate_property(SecurityRuleAssociations, Symbol("networkInterfaceAssociation"), o.networkInterfaceAssociation)
    OpenAPI.validate_property(SecurityRuleAssociations, Symbol("subnetAssociation"), o.subnetAssociation)
    OpenAPI.validate_property(SecurityRuleAssociations, Symbol("defaultSecurityRules"), o.defaultSecurityRules)
    OpenAPI.validate_property(SecurityRuleAssociations, Symbol("effectiveSecurityRules"), o.effectiveSecurityRules)
end

function OpenAPI.validate_property(::Type{ SecurityRuleAssociations }, name::Symbol, val)




end
