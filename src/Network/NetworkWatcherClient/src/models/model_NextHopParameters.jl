# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""NextHopParameters
Parameters that define the source and destination endpoint.

    NextHopParameters(;
        targetResourceId=nothing,
        sourceIPAddress=nothing,
        destinationIPAddress=nothing,
        targetNicResourceId=nothing,
    )

    - targetResourceId::String : The resource identifier of the target resource against which the action is to be performed.
    - sourceIPAddress::String : The source IP address.
    - destinationIPAddress::String : The destination IP address.
    - targetNicResourceId::String : The NIC ID. (If VM has multiple NICs and IP forwarding is enabled on any of the nics, then this parameter must be specified. Otherwise optional).
"""
Base.@kwdef mutable struct NextHopParameters <: OpenAPI.APIModel
    targetResourceId::Union{Nothing, String} = nothing
    sourceIPAddress::Union{Nothing, String} = nothing
    destinationIPAddress::Union{Nothing, String} = nothing
    targetNicResourceId::Union{Nothing, String} = nothing

    function NextHopParameters(targetResourceId, sourceIPAddress, destinationIPAddress, targetNicResourceId, )
        OpenAPI.validate_property(NextHopParameters, Symbol("targetResourceId"), targetResourceId)
        OpenAPI.validate_property(NextHopParameters, Symbol("sourceIPAddress"), sourceIPAddress)
        OpenAPI.validate_property(NextHopParameters, Symbol("destinationIPAddress"), destinationIPAddress)
        OpenAPI.validate_property(NextHopParameters, Symbol("targetNicResourceId"), targetNicResourceId)
        return new(targetResourceId, sourceIPAddress, destinationIPAddress, targetNicResourceId, )
    end
end # type NextHopParameters

const _property_types_NextHopParameters = Dict{Symbol,String}(Symbol("targetResourceId")=>"String", Symbol("sourceIPAddress")=>"String", Symbol("destinationIPAddress")=>"String", Symbol("targetNicResourceId")=>"String", )
OpenAPI.property_type(::Type{ NextHopParameters }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_NextHopParameters[name]))}

function check_required(o::NextHopParameters)
    o.targetResourceId === nothing && (return false)
    o.sourceIPAddress === nothing && (return false)
    o.destinationIPAddress === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ NextHopParameters }, name::Symbol, val)
end
