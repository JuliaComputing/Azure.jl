# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ConnectionMonitorEndpoint
Describes the connection monitor endpoint.

    ConnectionMonitorEndpoint(;
        name=nothing,
        resourceId=nothing,
        address=nothing,
        filter=nothing,
    )

    - name::String : The name of the connection monitor endpoint.
    - resourceId::String : Resource ID of the connection monitor endpoint.
    - address::String : Address of the connection monitor endpoint (IP or domain name).
    - filter::ConnectionMonitorEndpointFilter
"""
Base.@kwdef mutable struct ConnectionMonitorEndpoint <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    resourceId::Union{Nothing, String} = nothing
    address::Union{Nothing, String} = nothing
    filter = nothing # spec type: Union{ Nothing, ConnectionMonitorEndpointFilter }

    function ConnectionMonitorEndpoint(name, resourceId, address, filter, )
        OpenAPI.validate_property(ConnectionMonitorEndpoint, Symbol("name"), name)
        OpenAPI.validate_property(ConnectionMonitorEndpoint, Symbol("resourceId"), resourceId)
        OpenAPI.validate_property(ConnectionMonitorEndpoint, Symbol("address"), address)
        OpenAPI.validate_property(ConnectionMonitorEndpoint, Symbol("filter"), filter)
        return new(name, resourceId, address, filter, )
    end
end # type ConnectionMonitorEndpoint

const _property_types_ConnectionMonitorEndpoint = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("resourceId")=>"String", Symbol("address")=>"String", Symbol("filter")=>"ConnectionMonitorEndpointFilter", )
OpenAPI.property_type(::Type{ ConnectionMonitorEndpoint }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ConnectionMonitorEndpoint[name]))}

function check_required(o::ConnectionMonitorEndpoint)
    o.name === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ ConnectionMonitorEndpoint }, name::Symbol, val)
end
