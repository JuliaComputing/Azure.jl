# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""NetworkInterfaceTapConfiguration_2
Tap configuration in a Network Interface.

    NetworkInterfaceTapConfiguration2(;
        properties=nothing,
        name=nothing,
        etag=nothing,
        type=nothing,
        id=nothing,
    )

    - properties::NetworkInterfaceTapConfigurationPropertiesFormat2
    - name::String : The name of the resource that is unique within a resource group. This name can be used to access the resource.
    - etag::String : A unique read-only string that changes whenever the resource is updated.
    - type::String : Sub Resource type.
    - id::String : Resource ID.
"""
Base.@kwdef mutable struct NetworkInterfaceTapConfiguration2 <: OpenAPI.APIModel
    properties = nothing # spec type: Union{ Nothing, NetworkInterfaceTapConfigurationPropertiesFormat2 }
    name::Union{Nothing, String} = nothing
    etag::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing
    id::Union{Nothing, String} = nothing

    function NetworkInterfaceTapConfiguration2(properties, name, etag, type, id, )
        o = new(properties, name, etag, type, id, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type NetworkInterfaceTapConfiguration2

const _property_types_NetworkInterfaceTapConfiguration2 = Dict{Symbol,String}(Symbol("properties")=>"NetworkInterfaceTapConfigurationPropertiesFormat2", Symbol("name")=>"String", Symbol("etag")=>"String", Symbol("type")=>"String", Symbol("id")=>"String", )
OpenAPI.property_type(::Type{ NetworkInterfaceTapConfiguration2 }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_NetworkInterfaceTapConfiguration2[name]))}

function OpenAPI.check_required(o::NetworkInterfaceTapConfiguration2)
    true
end

function OpenAPI.validate_properties(o::NetworkInterfaceTapConfiguration2)
    OpenAPI.validate_property(NetworkInterfaceTapConfiguration2, Symbol("properties"), o.properties)
    OpenAPI.validate_property(NetworkInterfaceTapConfiguration2, Symbol("name"), o.name)
    OpenAPI.validate_property(NetworkInterfaceTapConfiguration2, Symbol("etag"), o.etag)
    OpenAPI.validate_property(NetworkInterfaceTapConfiguration2, Symbol("type"), o.type)
    OpenAPI.validate_property(NetworkInterfaceTapConfiguration2, Symbol("id"), o.id)
end

function OpenAPI.validate_property(::Type{ NetworkInterfaceTapConfiguration2 }, name::Symbol, val)





end
