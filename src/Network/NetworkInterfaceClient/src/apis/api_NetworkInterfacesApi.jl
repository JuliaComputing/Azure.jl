# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct NetworkInterfacesApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `NetworkInterfacesApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ NetworkInterfacesApi }) = "https://management.azure.com"

const _returntypes_network_interface_i_p_configurations_get_NetworkInterfacesApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => NetworkInterfaceIPConfiguration,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_network_interface_i_p_configurations_get(_api::NetworkInterfacesApi, resource_group_name::String, network_interface_name::String, ip_configuration_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_network_interface_i_p_configurations_get_NetworkInterfacesApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/ipConfigurations/{ipConfigurationName}", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "networkInterfaceName", network_interface_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "ipConfigurationName", ip_configuration_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Gets the specified network interface ip configuration.

Params:
- resource_group_name::String (required)
- network_interface_name::String (required)
- ip_configuration_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: NetworkInterfaceIPConfiguration, OpenAPI.Clients.ApiResponse
"""
function network_interface_i_p_configurations_get(_api::NetworkInterfacesApi, resource_group_name::String, network_interface_name::String, ip_configuration_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_network_interface_i_p_configurations_get(_api, resource_group_name, network_interface_name, ip_configuration_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function network_interface_i_p_configurations_get(_api::NetworkInterfacesApi, response_stream::Channel, resource_group_name::String, network_interface_name::String, ip_configuration_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_network_interface_i_p_configurations_get(_api, resource_group_name, network_interface_name, ip_configuration_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_network_interface_i_p_configurations_list_NetworkInterfacesApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => NetworkInterfaceIPConfigurationListResult,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_network_interface_i_p_configurations_list(_api::NetworkInterfacesApi, resource_group_name::String, network_interface_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_network_interface_i_p_configurations_list_NetworkInterfacesApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/ipConfigurations", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "networkInterfaceName", network_interface_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Get all ip configurations in a network interface.

Params:
- resource_group_name::String (required)
- network_interface_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: NetworkInterfaceIPConfigurationListResult, OpenAPI.Clients.ApiResponse
"""
function network_interface_i_p_configurations_list(_api::NetworkInterfacesApi, resource_group_name::String, network_interface_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_network_interface_i_p_configurations_list(_api, resource_group_name, network_interface_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function network_interface_i_p_configurations_list(_api::NetworkInterfacesApi, response_stream::Channel, resource_group_name::String, network_interface_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_network_interface_i_p_configurations_list(_api, resource_group_name, network_interface_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_network_interface_load_balancers_list_NetworkInterfacesApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => NetworkInterfaceLoadBalancerListResult,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_network_interface_load_balancers_list(_api::NetworkInterfacesApi, resource_group_name::String, network_interface_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_network_interface_load_balancers_list_NetworkInterfacesApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/loadBalancers", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "networkInterfaceName", network_interface_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""List all load balancers in a network interface.

Params:
- resource_group_name::String (required)
- network_interface_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: NetworkInterfaceLoadBalancerListResult, OpenAPI.Clients.ApiResponse
"""
function network_interface_load_balancers_list(_api::NetworkInterfacesApi, resource_group_name::String, network_interface_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_network_interface_load_balancers_list(_api, resource_group_name, network_interface_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function network_interface_load_balancers_list(_api::NetworkInterfacesApi, response_stream::Channel, resource_group_name::String, network_interface_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_network_interface_load_balancers_list(_api, resource_group_name, network_interface_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_network_interface_tap_configurations_create_or_update_NetworkInterfacesApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => NetworkInterfaceTapConfiguration,
    Regex("^" * replace("201", "x"=>".") * "\$") => NetworkInterfaceTapConfiguration,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_network_interface_tap_configurations_create_or_update(_api::NetworkInterfacesApi, resource_group_name::String, network_interface_name::String, tap_configuration_name::String, api_version::String, subscription_id::String, tap_configuration_parameters::NetworkInterfaceTapConfiguration; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_network_interface_tap_configurations_create_or_update_NetworkInterfacesApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/tapConfigurations/{tapConfigurationName}", ["azure_auth", ], tap_configuration_parameters)
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "networkInterfaceName", network_interface_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "tapConfigurationName", tap_configuration_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Creates or updates a Tap configuration in the specified NetworkInterface.

Params:
- resource_group_name::String (required)
- network_interface_name::String (required)
- tap_configuration_name::String (required)
- api_version::String (required)
- subscription_id::String (required)
- tap_configuration_parameters::NetworkInterfaceTapConfiguration (required)

Return: NetworkInterfaceTapConfiguration, OpenAPI.Clients.ApiResponse
"""
function network_interface_tap_configurations_create_or_update(_api::NetworkInterfacesApi, resource_group_name::String, network_interface_name::String, tap_configuration_name::String, api_version::String, subscription_id::String, tap_configuration_parameters::NetworkInterfaceTapConfiguration; _mediaType=nothing)
    _ctx = _oacinternal_network_interface_tap_configurations_create_or_update(_api, resource_group_name, network_interface_name, tap_configuration_name, api_version, subscription_id, tap_configuration_parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function network_interface_tap_configurations_create_or_update(_api::NetworkInterfacesApi, response_stream::Channel, resource_group_name::String, network_interface_name::String, tap_configuration_name::String, api_version::String, subscription_id::String, tap_configuration_parameters::NetworkInterfaceTapConfiguration; _mediaType=nothing)
    _ctx = _oacinternal_network_interface_tap_configurations_create_or_update(_api, resource_group_name, network_interface_name, tap_configuration_name, api_version, subscription_id, tap_configuration_parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_network_interface_tap_configurations_delete_NetworkInterfacesApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("202", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_network_interface_tap_configurations_delete(_api::NetworkInterfacesApi, resource_group_name::String, network_interface_name::String, tap_configuration_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_network_interface_tap_configurations_delete_NetworkInterfacesApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/tapConfigurations/{tapConfigurationName}", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "networkInterfaceName", network_interface_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "tapConfigurationName", tap_configuration_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Deletes the specified tap configuration from the NetworkInterface.

Params:
- resource_group_name::String (required)
- network_interface_name::String (required)
- tap_configuration_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function network_interface_tap_configurations_delete(_api::NetworkInterfacesApi, resource_group_name::String, network_interface_name::String, tap_configuration_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_network_interface_tap_configurations_delete(_api, resource_group_name, network_interface_name, tap_configuration_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function network_interface_tap_configurations_delete(_api::NetworkInterfacesApi, response_stream::Channel, resource_group_name::String, network_interface_name::String, tap_configuration_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_network_interface_tap_configurations_delete(_api, resource_group_name, network_interface_name, tap_configuration_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_network_interface_tap_configurations_get_NetworkInterfacesApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => NetworkInterfaceTapConfiguration,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_network_interface_tap_configurations_get(_api::NetworkInterfacesApi, resource_group_name::String, network_interface_name::String, tap_configuration_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_network_interface_tap_configurations_get_NetworkInterfacesApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/tapConfigurations/{tapConfigurationName}", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "networkInterfaceName", network_interface_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "tapConfigurationName", tap_configuration_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Get the specified tap configuration on a network interface.

Params:
- resource_group_name::String (required)
- network_interface_name::String (required)
- tap_configuration_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: NetworkInterfaceTapConfiguration, OpenAPI.Clients.ApiResponse
"""
function network_interface_tap_configurations_get(_api::NetworkInterfacesApi, resource_group_name::String, network_interface_name::String, tap_configuration_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_network_interface_tap_configurations_get(_api, resource_group_name, network_interface_name, tap_configuration_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function network_interface_tap_configurations_get(_api::NetworkInterfacesApi, response_stream::Channel, resource_group_name::String, network_interface_name::String, tap_configuration_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_network_interface_tap_configurations_get(_api, resource_group_name, network_interface_name, tap_configuration_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_network_interface_tap_configurations_list_NetworkInterfacesApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => NetworkInterfaceTapConfigurationListResult,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_network_interface_tap_configurations_list(_api::NetworkInterfacesApi, resource_group_name::String, network_interface_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_network_interface_tap_configurations_list_NetworkInterfacesApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/tapConfigurations", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "networkInterfaceName", network_interface_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Get all Tap configurations in a network interface.

Params:
- resource_group_name::String (required)
- network_interface_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: NetworkInterfaceTapConfigurationListResult, OpenAPI.Clients.ApiResponse
"""
function network_interface_tap_configurations_list(_api::NetworkInterfacesApi, resource_group_name::String, network_interface_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_network_interface_tap_configurations_list(_api, resource_group_name, network_interface_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function network_interface_tap_configurations_list(_api::NetworkInterfacesApi, response_stream::Channel, resource_group_name::String, network_interface_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_network_interface_tap_configurations_list(_api, resource_group_name, network_interface_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_network_interfaces_create_or_update_NetworkInterfacesApi = Dict{Regex,Type}(
    Regex("^" * replace("201", "x"=>".") * "\$") => NetworkInterface,
    Regex("^" * replace("200", "x"=>".") * "\$") => NetworkInterface,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_network_interfaces_create_or_update(_api::NetworkInterfacesApi, resource_group_name::String, network_interface_name::String, api_version::String, subscription_id::String, parameters::NetworkInterface; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_network_interfaces_create_or_update_NetworkInterfacesApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}", ["azure_auth", ], parameters)
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "networkInterfaceName", network_interface_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Creates or updates a network interface.

Params:
- resource_group_name::String (required)
- network_interface_name::String (required)
- api_version::String (required)
- subscription_id::String (required)
- parameters::NetworkInterface (required)

Return: NetworkInterface, OpenAPI.Clients.ApiResponse
"""
function network_interfaces_create_or_update(_api::NetworkInterfacesApi, resource_group_name::String, network_interface_name::String, api_version::String, subscription_id::String, parameters::NetworkInterface; _mediaType=nothing)
    _ctx = _oacinternal_network_interfaces_create_or_update(_api, resource_group_name, network_interface_name, api_version, subscription_id, parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function network_interfaces_create_or_update(_api::NetworkInterfacesApi, response_stream::Channel, resource_group_name::String, network_interface_name::String, api_version::String, subscription_id::String, parameters::NetworkInterface; _mediaType=nothing)
    _ctx = _oacinternal_network_interfaces_create_or_update(_api, resource_group_name, network_interface_name, api_version, subscription_id, parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_network_interfaces_delete_NetworkInterfacesApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("202", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_network_interfaces_delete(_api::NetworkInterfacesApi, resource_group_name::String, network_interface_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_network_interfaces_delete_NetworkInterfacesApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "networkInterfaceName", network_interface_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Deletes the specified network interface.

Params:
- resource_group_name::String (required)
- network_interface_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function network_interfaces_delete(_api::NetworkInterfacesApi, resource_group_name::String, network_interface_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_network_interfaces_delete(_api, resource_group_name, network_interface_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function network_interfaces_delete(_api::NetworkInterfacesApi, response_stream::Channel, resource_group_name::String, network_interface_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_network_interfaces_delete(_api, resource_group_name, network_interface_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_network_interfaces_get_NetworkInterfacesApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => NetworkInterface,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_network_interfaces_get(_api::NetworkInterfacesApi, resource_group_name::String, network_interface_name::String, api_version::String, subscription_id::String; expand=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_network_interfaces_get_NetworkInterfacesApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "networkInterfaceName", network_interface_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "\$expand", expand; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Gets information about the specified network interface.

Params:
- resource_group_name::String (required)
- network_interface_name::String (required)
- api_version::String (required)
- subscription_id::String (required)
- expand::String

Return: NetworkInterface, OpenAPI.Clients.ApiResponse
"""
function network_interfaces_get(_api::NetworkInterfacesApi, resource_group_name::String, network_interface_name::String, api_version::String, subscription_id::String; expand=nothing, _mediaType=nothing)
    _ctx = _oacinternal_network_interfaces_get(_api, resource_group_name, network_interface_name, api_version, subscription_id; expand=expand, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function network_interfaces_get(_api::NetworkInterfacesApi, response_stream::Channel, resource_group_name::String, network_interface_name::String, api_version::String, subscription_id::String; expand=nothing, _mediaType=nothing)
    _ctx = _oacinternal_network_interfaces_get(_api, resource_group_name, network_interface_name, api_version, subscription_id; expand=expand, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_network_interfaces_get_effective_route_table_NetworkInterfacesApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => EffectiveRouteListResult,
    Regex("^" * replace("202", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_network_interfaces_get_effective_route_table(_api::NetworkInterfacesApi, resource_group_name::String, network_interface_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_network_interfaces_get_effective_route_table_NetworkInterfacesApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/effectiveRouteTable", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "networkInterfaceName", network_interface_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Gets all route tables applied to a network interface.

Params:
- resource_group_name::String (required)
- network_interface_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: EffectiveRouteListResult, OpenAPI.Clients.ApiResponse
"""
function network_interfaces_get_effective_route_table(_api::NetworkInterfacesApi, resource_group_name::String, network_interface_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_network_interfaces_get_effective_route_table(_api, resource_group_name, network_interface_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function network_interfaces_get_effective_route_table(_api::NetworkInterfacesApi, response_stream::Channel, resource_group_name::String, network_interface_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_network_interfaces_get_effective_route_table(_api, resource_group_name, network_interface_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_network_interfaces_list_NetworkInterfacesApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => NetworkInterfaceListResult,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_network_interfaces_list(_api::NetworkInterfacesApi, resource_group_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_network_interfaces_list_NetworkInterfacesApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Gets all network interfaces in a resource group.

Params:
- resource_group_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: NetworkInterfaceListResult, OpenAPI.Clients.ApiResponse
"""
function network_interfaces_list(_api::NetworkInterfacesApi, resource_group_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_network_interfaces_list(_api, resource_group_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function network_interfaces_list(_api::NetworkInterfacesApi, response_stream::Channel, resource_group_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_network_interfaces_list(_api, resource_group_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_network_interfaces_list_all_NetworkInterfacesApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => NetworkInterfaceListResult,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_network_interfaces_list_all(_api::NetworkInterfacesApi, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_network_interfaces_list_all_NetworkInterfacesApi, "/subscriptions/{subscriptionId}/providers/Microsoft.Network/networkInterfaces", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Gets all network interfaces in a subscription.

Params:
- api_version::String (required)
- subscription_id::String (required)

Return: NetworkInterfaceListResult, OpenAPI.Clients.ApiResponse
"""
function network_interfaces_list_all(_api::NetworkInterfacesApi, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_network_interfaces_list_all(_api, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function network_interfaces_list_all(_api::NetworkInterfacesApi, response_stream::Channel, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_network_interfaces_list_all(_api, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_network_interfaces_list_effective_network_security_groups_NetworkInterfacesApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => EffectiveNetworkSecurityGroupListResult,
    Regex("^" * replace("202", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_network_interfaces_list_effective_network_security_groups(_api::NetworkInterfacesApi, resource_group_name::String, network_interface_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_network_interfaces_list_effective_network_security_groups_NetworkInterfacesApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}/effectiveNetworkSecurityGroups", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "networkInterfaceName", network_interface_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Gets all network security groups applied to a network interface.

Params:
- resource_group_name::String (required)
- network_interface_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: EffectiveNetworkSecurityGroupListResult, OpenAPI.Clients.ApiResponse
"""
function network_interfaces_list_effective_network_security_groups(_api::NetworkInterfacesApi, resource_group_name::String, network_interface_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_network_interfaces_list_effective_network_security_groups(_api, resource_group_name, network_interface_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function network_interfaces_list_effective_network_security_groups(_api::NetworkInterfacesApi, response_stream::Channel, resource_group_name::String, network_interface_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_network_interfaces_list_effective_network_security_groups(_api, resource_group_name, network_interface_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_network_interfaces_update_tags_NetworkInterfacesApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => NetworkInterface,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_network_interfaces_update_tags(_api::NetworkInterfacesApi, resource_group_name::String, network_interface_name::String, api_version::String, subscription_id::String, parameters::TagsObject; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PATCH", _returntypes_network_interfaces_update_tags_NetworkInterfacesApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}", ["azure_auth", ], parameters)
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "networkInterfaceName", network_interface_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Updates a network interface tags.

Params:
- resource_group_name::String (required)
- network_interface_name::String (required)
- api_version::String (required)
- subscription_id::String (required)
- parameters::TagsObject (required)

Return: NetworkInterface, OpenAPI.Clients.ApiResponse
"""
function network_interfaces_update_tags(_api::NetworkInterfacesApi, resource_group_name::String, network_interface_name::String, api_version::String, subscription_id::String, parameters::TagsObject; _mediaType=nothing)
    _ctx = _oacinternal_network_interfaces_update_tags(_api, resource_group_name, network_interface_name, api_version, subscription_id, parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function network_interfaces_update_tags(_api::NetworkInterfacesApi, response_stream::Channel, resource_group_name::String, network_interface_name::String, api_version::String, subscription_id::String, parameters::TagsObject; _mediaType=nothing)
    _ctx = _oacinternal_network_interfaces_update_tags(_api, resource_group_name, network_interface_name, api_version, subscription_id, parameters; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export network_interface_i_p_configurations_get
export network_interface_i_p_configurations_list
export network_interface_load_balancers_list
export network_interface_tap_configurations_create_or_update
export network_interface_tap_configurations_delete
export network_interface_tap_configurations_get
export network_interface_tap_configurations_list
export network_interfaces_create_or_update
export network_interfaces_delete
export network_interfaces_get
export network_interfaces_get_effective_route_table
export network_interfaces_list
export network_interfaces_list_all
export network_interfaces_list_effective_network_security_groups
export network_interfaces_update_tags
