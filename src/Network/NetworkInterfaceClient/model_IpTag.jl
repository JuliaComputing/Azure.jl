# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct IpTag <: SwaggerModel
    ipTagType::Any # spec type: Union{ Nothing, String } # spec name: ipTagType
    tag::Any # spec type: Union{ Nothing, String } # spec name: tag

    function IpTag(;ipTagType=nothing, tag=nothing)
        o = new()
        validate_property(IpTag, Symbol("ipTagType"), ipTagType)
        setfield!(o, Symbol("ipTagType"), ipTagType)
        validate_property(IpTag, Symbol("tag"), tag)
        setfield!(o, Symbol("tag"), tag)
        o
    end
end # type IpTag

const _property_map_IpTag = Dict{Symbol,Symbol}(Symbol("ipTagType")=>Symbol("ipTagType"), Symbol("tag")=>Symbol("tag"))
const _property_types_IpTag = Dict{Symbol,String}(Symbol("ipTagType")=>"String", Symbol("tag")=>"String")
Base.propertynames(::Type{ IpTag }) = collect(keys(_property_map_IpTag))
Swagger.property_type(::Type{ IpTag }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IpTag[name]))}
Swagger.field_name(::Type{ IpTag }, property_name::Symbol) =  _property_map_IpTag[property_name]

function check_required(o::IpTag)
    true
end

function validate_property(::Type{ IpTag }, name::Symbol, val)
end
