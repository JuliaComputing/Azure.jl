# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct NetworkInterfaceTapConfigurationPropertiesFormat <: SwaggerModel
    virtualNetworkTap::Any # spec type: Union{ Nothing, VirtualNetworkTap } # spec name: virtualNetworkTap
    provisioningState::Any # spec type: Union{ Nothing, ProvisioningState } # spec name: provisioningState

    function NetworkInterfaceTapConfigurationPropertiesFormat(;virtualNetworkTap=nothing, provisioningState=nothing)
        o = new()
        validate_property(NetworkInterfaceTapConfigurationPropertiesFormat, Symbol("virtualNetworkTap"), virtualNetworkTap)
        setfield!(o, Symbol("virtualNetworkTap"), virtualNetworkTap)
        validate_property(NetworkInterfaceTapConfigurationPropertiesFormat, Symbol("provisioningState"), provisioningState)
        setfield!(o, Symbol("provisioningState"), provisioningState)
        o
    end
end # type NetworkInterfaceTapConfigurationPropertiesFormat

const _property_map_NetworkInterfaceTapConfigurationPropertiesFormat = Dict{Symbol,Symbol}(Symbol("virtualNetworkTap")=>Symbol("virtualNetworkTap"), Symbol("provisioningState")=>Symbol("provisioningState"))
const _property_types_NetworkInterfaceTapConfigurationPropertiesFormat = Dict{Symbol,String}(Symbol("virtualNetworkTap")=>"VirtualNetworkTap", Symbol("provisioningState")=>"ProvisioningState")
Base.propertynames(::Type{ NetworkInterfaceTapConfigurationPropertiesFormat }) = collect(keys(_property_map_NetworkInterfaceTapConfigurationPropertiesFormat))
Swagger.property_type(::Type{ NetworkInterfaceTapConfigurationPropertiesFormat }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_NetworkInterfaceTapConfigurationPropertiesFormat[name]))}
Swagger.field_name(::Type{ NetworkInterfaceTapConfigurationPropertiesFormat }, property_name::Symbol) =  _property_map_NetworkInterfaceTapConfigurationPropertiesFormat[property_name]

function check_required(o::NetworkInterfaceTapConfigurationPropertiesFormat)
    true
end

function validate_property(::Type{ NetworkInterfaceTapConfigurationPropertiesFormat }, name::Symbol, val)
end
