# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct CustomDnsConfigPropertiesFormat <: SwaggerModel
    fqdn::Any # spec type: Union{ Nothing, String } # spec name: fqdn
    ipAddresses::Any # spec type: Union{ Nothing, Vector{String} } # spec name: ipAddresses

    function CustomDnsConfigPropertiesFormat(;fqdn=nothing, ipAddresses=nothing)
        o = new()
        validate_property(CustomDnsConfigPropertiesFormat, Symbol("fqdn"), fqdn)
        setfield!(o, Symbol("fqdn"), fqdn)
        validate_property(CustomDnsConfigPropertiesFormat, Symbol("ipAddresses"), ipAddresses)
        setfield!(o, Symbol("ipAddresses"), ipAddresses)
        o
    end
end # type CustomDnsConfigPropertiesFormat

const _property_map_CustomDnsConfigPropertiesFormat = Dict{Symbol,Symbol}(Symbol("fqdn")=>Symbol("fqdn"), Symbol("ipAddresses")=>Symbol("ipAddresses"))
const _property_types_CustomDnsConfigPropertiesFormat = Dict{Symbol,String}(Symbol("fqdn")=>"String", Symbol("ipAddresses")=>"Vector{String}")
Base.propertynames(::Type{ CustomDnsConfigPropertiesFormat }) = collect(keys(_property_map_CustomDnsConfigPropertiesFormat))
Swagger.property_type(::Type{ CustomDnsConfigPropertiesFormat }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CustomDnsConfigPropertiesFormat[name]))}
Swagger.field_name(::Type{ CustomDnsConfigPropertiesFormat }, property_name::Symbol) =  _property_map_CustomDnsConfigPropertiesFormat[property_name]

function check_required(o::CustomDnsConfigPropertiesFormat)
    true
end

function validate_property(::Type{ CustomDnsConfigPropertiesFormat }, name::Symbol, val)
end
