# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""FrontendIPConfiguration
Frontend IP address of the load balancer.

    FrontendIPConfiguration(;
        properties=nothing,
        name=nothing,
        etag=nothing,
        type=nothing,
        zones=nothing,
        id=nothing,
    )

    - properties::FrontendIPConfigurationPropertiesFormat
    - name::String : The name of the resource that is unique within the set of frontend IP configurations used by the load balancer. This name can be used to access the resource.
    - etag::String : A unique read-only string that changes whenever the resource is updated.
    - type::String : Type of the resource.
    - zones::Vector{String} : A list of availability zones denoting the IP allocated for the resource needs to come from.
    - id::String : Resource ID.
"""
Base.@kwdef mutable struct FrontendIPConfiguration <: OpenAPI.APIModel
    properties = nothing # spec type: Union{ Nothing, FrontendIPConfigurationPropertiesFormat }
    name::Union{Nothing, String} = nothing
    etag::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing
    zones::Union{Nothing, Vector{String}} = nothing
    id::Union{Nothing, String} = nothing

    function FrontendIPConfiguration(properties, name, etag, type, zones, id, )
        o = new(properties, name, etag, type, zones, id, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type FrontendIPConfiguration

const _property_types_FrontendIPConfiguration = Dict{Symbol,String}(Symbol("properties")=>"FrontendIPConfigurationPropertiesFormat", Symbol("name")=>"String", Symbol("etag")=>"String", Symbol("type")=>"String", Symbol("zones")=>"Vector{String}", Symbol("id")=>"String", )
OpenAPI.property_type(::Type{ FrontendIPConfiguration }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_FrontendIPConfiguration[name]))}

function OpenAPI.check_required(o::FrontendIPConfiguration)
    true
end

function OpenAPI.validate_properties(o::FrontendIPConfiguration)
    OpenAPI.validate_property(FrontendIPConfiguration, Symbol("properties"), o.properties)
    OpenAPI.validate_property(FrontendIPConfiguration, Symbol("name"), o.name)
    OpenAPI.validate_property(FrontendIPConfiguration, Symbol("etag"), o.etag)
    OpenAPI.validate_property(FrontendIPConfiguration, Symbol("type"), o.type)
    OpenAPI.validate_property(FrontendIPConfiguration, Symbol("zones"), o.zones)
    OpenAPI.validate_property(FrontendIPConfiguration, Symbol("id"), o.id)
end

function OpenAPI.validate_property(::Type{ FrontendIPConfiguration }, name::Symbol, val)






end
