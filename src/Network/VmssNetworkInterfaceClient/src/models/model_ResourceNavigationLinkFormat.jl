# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ResourceNavigationLinkFormat
Properties of ResourceNavigationLink.

    ResourceNavigationLinkFormat(;
        linkedResourceType=nothing,
        link=nothing,
        provisioningState=nothing,
    )

    - linkedResourceType::String : Resource type of the linked resource.
    - link::String : Link to the external resource.
    - provisioningState::ProvisioningState
"""
Base.@kwdef mutable struct ResourceNavigationLinkFormat <: OpenAPI.APIModel
    linkedResourceType::Union{Nothing, String} = nothing
    link::Union{Nothing, String} = nothing
    provisioningState = nothing # spec type: Union{ Nothing, ProvisioningState }

    function ResourceNavigationLinkFormat(linkedResourceType, link, provisioningState, )
        o = new(linkedResourceType, link, provisioningState, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type ResourceNavigationLinkFormat

const _property_types_ResourceNavigationLinkFormat = Dict{Symbol,String}(Symbol("linkedResourceType")=>"String", Symbol("link")=>"String", Symbol("provisioningState")=>"ProvisioningState", )
OpenAPI.property_type(::Type{ ResourceNavigationLinkFormat }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ResourceNavigationLinkFormat[name]))}

function OpenAPI.check_required(o::ResourceNavigationLinkFormat)
    true
end

function OpenAPI.validate_properties(o::ResourceNavigationLinkFormat)
    OpenAPI.validate_property(ResourceNavigationLinkFormat, Symbol("linkedResourceType"), o.linkedResourceType)
    OpenAPI.validate_property(ResourceNavigationLinkFormat, Symbol("link"), o.link)
    OpenAPI.validate_property(ResourceNavigationLinkFormat, Symbol("provisioningState"), o.provisioningState)
end

function OpenAPI.validate_property(::Type{ ResourceNavigationLinkFormat }, name::Symbol, val)



end
