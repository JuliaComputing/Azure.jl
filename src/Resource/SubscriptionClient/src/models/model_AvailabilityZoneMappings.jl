# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""AvailabilityZoneMappings
Availability zone mappings for the region

    AvailabilityZoneMappings(;
        logicalZone=nothing,
        physicalZone=nothing,
    )

    - logicalZone::String : The logical zone id for the availability zone
    - physicalZone::String : The fully qualified physical zone id of availability zone to which logical zone id is mapped to
"""
Base.@kwdef mutable struct AvailabilityZoneMappings <: OpenAPI.APIModel
    logicalZone::Union{Nothing, String} = nothing
    physicalZone::Union{Nothing, String} = nothing

    function AvailabilityZoneMappings(logicalZone, physicalZone, )
        o = new(logicalZone, physicalZone, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type AvailabilityZoneMappings

const _property_types_AvailabilityZoneMappings = Dict{Symbol,String}(Symbol("logicalZone")=>"String", Symbol("physicalZone")=>"String", )
OpenAPI.property_type(::Type{ AvailabilityZoneMappings }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_AvailabilityZoneMappings[name]))}

function OpenAPI.check_required(o::AvailabilityZoneMappings)
    true
end

function OpenAPI.validate_properties(o::AvailabilityZoneMappings)
    OpenAPI.validate_property(AvailabilityZoneMappings, Symbol("logicalZone"), o.logicalZone)
    OpenAPI.validate_property(AvailabilityZoneMappings, Symbol("physicalZone"), o.physicalZone)
end

function OpenAPI.validate_property(::Type{ AvailabilityZoneMappings }, name::Symbol, val)


end
