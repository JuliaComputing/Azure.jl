# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""CheckZonePeersResult
Result of the Check zone peers operation.

    CheckZonePeersResult(;
        subscriptionId=nothing,
        location=nothing,
        availabilityZonePeers=nothing,
    )

    - subscriptionId::String : The subscription ID.
    - location::String : the location of the subscription.
    - availabilityZonePeers::Vector{AvailabilityZonePeers} : The Availability Zones shared by the subscriptions.
"""
Base.@kwdef mutable struct CheckZonePeersResult <: OpenAPI.APIModel
    subscriptionId::Union{Nothing, String} = nothing
    location::Union{Nothing, String} = nothing
    availabilityZonePeers::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{AvailabilityZonePeers} }

    function CheckZonePeersResult(subscriptionId, location, availabilityZonePeers, )
        o = new(subscriptionId, location, availabilityZonePeers, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type CheckZonePeersResult

const _property_types_CheckZonePeersResult = Dict{Symbol,String}(Symbol("subscriptionId")=>"String", Symbol("location")=>"String", Symbol("availabilityZonePeers")=>"Vector{AvailabilityZonePeers}", )
OpenAPI.property_type(::Type{ CheckZonePeersResult }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CheckZonePeersResult[name]))}

function OpenAPI.check_required(o::CheckZonePeersResult)
    true
end

function OpenAPI.validate_properties(o::CheckZonePeersResult)
    OpenAPI.validate_property(CheckZonePeersResult, Symbol("subscriptionId"), o.subscriptionId)
    OpenAPI.validate_property(CheckZonePeersResult, Symbol("location"), o.location)
    OpenAPI.validate_property(CheckZonePeersResult, Symbol("availabilityZonePeers"), o.availabilityZonePeers)
end

function OpenAPI.validate_property(::Type{ CheckZonePeersResult }, name::Symbol, val)



end
