# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Location
Location information.

    Location(;
        id=nothing,
        subscriptionId=nothing,
        name=nothing,
        displayName=nothing,
        regionalDisplayName=nothing,
        metadata=nothing,
    )

    - id::String : The fully qualified ID of the location. For example, /subscriptions/00000000-0000-0000-0000-000000000000/locations/westus.
    - subscriptionId::String : The subscription ID.
    - name::String : The location name.
    - displayName::String : The display name of the location.
    - regionalDisplayName::String : The display name of the location and its region.
    - metadata::LocationMetadata
"""
Base.@kwdef mutable struct Location <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    subscriptionId::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    displayName::Union{Nothing, String} = nothing
    regionalDisplayName::Union{Nothing, String} = nothing
    metadata = nothing # spec type: Union{ Nothing, LocationMetadata }

    function Location(id, subscriptionId, name, displayName, regionalDisplayName, metadata, )
        OpenAPI.validate_property(Location, Symbol("id"), id)
        OpenAPI.validate_property(Location, Symbol("subscriptionId"), subscriptionId)
        OpenAPI.validate_property(Location, Symbol("name"), name)
        OpenAPI.validate_property(Location, Symbol("displayName"), displayName)
        OpenAPI.validate_property(Location, Symbol("regionalDisplayName"), regionalDisplayName)
        OpenAPI.validate_property(Location, Symbol("metadata"), metadata)
        return new(id, subscriptionId, name, displayName, regionalDisplayName, metadata, )
    end
end # type Location

const _property_types_Location = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("subscriptionId")=>"String", Symbol("name")=>"String", Symbol("displayName")=>"String", Symbol("regionalDisplayName")=>"String", Symbol("metadata")=>"LocationMetadata", )
OpenAPI.property_type(::Type{ Location }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Location[name]))}

function check_required(o::Location)
    true
end

function OpenAPI.validate_property(::Type{ Location }, name::Symbol, val)
end
