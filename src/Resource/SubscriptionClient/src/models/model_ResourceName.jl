# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ResourceName
Name and Type of the Resource

    ResourceName(;
        name=nothing,
        type=nothing,
    )

    - name::String : Name of the resource
    - type::String : The type of the resource
"""
Base.@kwdef mutable struct ResourceName <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing

    function ResourceName(name, type, )
        o = new(name, type, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type ResourceName

const _property_types_ResourceName = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("type")=>"String", )
OpenAPI.property_type(::Type{ ResourceName }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ResourceName[name]))}

function OpenAPI.check_required(o::ResourceName)
    o.name === nothing && (return false)
    o.type === nothing && (return false)
    true
end

function OpenAPI.validate_properties(o::ResourceName)
    OpenAPI.validate_property(ResourceName, Symbol("name"), o.name)
    OpenAPI.validate_property(ResourceName, Symbol("type"), o.type)
end

function OpenAPI.validate_property(::Type{ ResourceName }, name::Symbol, val)


end
