# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""OperationListResult_2
A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.

    OperationListResult2(;
        value=nothing,
        nextLink=nothing,
    )

    - value::Vector{Operation2} : List of operations supported by the resource provider
    - nextLink::String : URL to get the next set of operation list results (if there are any).
"""
Base.@kwdef mutable struct OperationListResult2 <: OpenAPI.APIModel
    value::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{Operation2} }
    nextLink::Union{Nothing, String} = nothing

    function OperationListResult2(value, nextLink, )
        o = new(value, nextLink, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type OperationListResult2

const _property_types_OperationListResult2 = Dict{Symbol,String}(Symbol("value")=>"Vector{Operation2}", Symbol("nextLink")=>"String", )
OpenAPI.property_type(::Type{ OperationListResult2 }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_OperationListResult2[name]))}

function OpenAPI.check_required(o::OperationListResult2)
    true
end

function OpenAPI.validate_properties(o::OperationListResult2)
    OpenAPI.validate_property(OperationListResult2, Symbol("value"), o.value)
    OpenAPI.validate_property(OperationListResult2, Symbol("nextLink"), o.nextLink)
end

function OpenAPI.validate_property(::Type{ OperationListResult2 }, name::Symbol, val)


    if name === Symbol("nextLink")
        OpenAPI.validate_param(name, "OperationListResult2", :format, val, "uri")
    end
end
