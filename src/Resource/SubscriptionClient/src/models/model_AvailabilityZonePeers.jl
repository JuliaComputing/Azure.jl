# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""AvailabilityZonePeers
List of availability zones shared by the subscriptions.

    AvailabilityZonePeers(;
        availabilityZone=nothing,
        peers=nothing,
    )

    - availabilityZone::String : The availabilityZone.
    - peers::Vector{Peers} : Details of shared availability zone.
"""
Base.@kwdef mutable struct AvailabilityZonePeers <: OpenAPI.APIModel
    availabilityZone::Union{Nothing, String} = nothing
    peers::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{Peers} }

    function AvailabilityZonePeers(availabilityZone, peers, )
        o = new(availabilityZone, peers, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type AvailabilityZonePeers

const _property_types_AvailabilityZonePeers = Dict{Symbol,String}(Symbol("availabilityZone")=>"String", Symbol("peers")=>"Vector{Peers}", )
OpenAPI.property_type(::Type{ AvailabilityZonePeers }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_AvailabilityZonePeers[name]))}

function OpenAPI.check_required(o::AvailabilityZonePeers)
    true
end

function OpenAPI.validate_properties(o::AvailabilityZonePeers)
    OpenAPI.validate_property(AvailabilityZonePeers, Symbol("availabilityZone"), o.availabilityZone)
    OpenAPI.validate_property(AvailabilityZonePeers, Symbol("peers"), o.peers)
end

function OpenAPI.validate_property(::Type{ AvailabilityZonePeers }, name::Symbol, val)


end
