# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct DeploymentOperationsApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `DeploymentOperationsApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ DeploymentOperationsApi }) = "https://management.azure.com"

const _returntypes_deployment_operations_get_DeploymentOperationsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => DeploymentOperation,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_deployment_operations_get(_api::DeploymentOperationsApi, resource_group_name::String, deployment_name::String, operation_id::String, api_version::String, subscription_id::String; _mediaType=nothing)
    OpenAPI.validate_param("resource_group_name", "deployment_operations_get", :maxLength, resource_group_name, 90)
    OpenAPI.validate_param("resource_group_name", "deployment_operations_get", :minLength, resource_group_name, 1)

    OpenAPI.validate_param("deployment_name", "deployment_operations_get", :maxLength, deployment_name, 64)
    OpenAPI.validate_param("deployment_name", "deployment_operations_get", :minLength, deployment_name, 1)

    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_deployment_operations_get_DeploymentOperationsApi, "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations/{operationId}", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "deploymentName", deployment_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "operationId", operation_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Gets a deployments operation.

Params:
- resource_group_name::String (required)
- deployment_name::String (required)
- operation_id::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: DeploymentOperation, OpenAPI.Clients.ApiResponse
"""
function deployment_operations_get(_api::DeploymentOperationsApi, resource_group_name::String, deployment_name::String, operation_id::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_deployment_operations_get(_api, resource_group_name, deployment_name, operation_id, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function deployment_operations_get(_api::DeploymentOperationsApi, response_stream::Channel, resource_group_name::String, deployment_name::String, operation_id::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_deployment_operations_get(_api, resource_group_name, deployment_name, operation_id, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_deployment_operations_get_at_management_group_scope_DeploymentOperationsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => DeploymentOperation,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_deployment_operations_get_at_management_group_scope(_api::DeploymentOperationsApi, group_id::String, deployment_name::String, operation_id::String, api_version::String; _mediaType=nothing)
    OpenAPI.validate_param("group_id", "deployment_operations_get_at_management_group_scope", :maxLength, group_id, 90)
    OpenAPI.validate_param("group_id", "deployment_operations_get_at_management_group_scope", :minLength, group_id, 1)

    OpenAPI.validate_param("deployment_name", "deployment_operations_get_at_management_group_scope", :maxLength, deployment_name, 64)
    OpenAPI.validate_param("deployment_name", "deployment_operations_get_at_management_group_scope", :minLength, deployment_name, 1)

    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_deployment_operations_get_at_management_group_scope_DeploymentOperationsApi, "/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "groupId", group_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "deploymentName", deployment_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "operationId", operation_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Gets a deployments operation.

Params:
- group_id::String (required)
- deployment_name::String (required)
- operation_id::String (required)
- api_version::String (required)

Return: DeploymentOperation, OpenAPI.Clients.ApiResponse
"""
function deployment_operations_get_at_management_group_scope(_api::DeploymentOperationsApi, group_id::String, deployment_name::String, operation_id::String, api_version::String; _mediaType=nothing)
    _ctx = _oacinternal_deployment_operations_get_at_management_group_scope(_api, group_id, deployment_name, operation_id, api_version; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function deployment_operations_get_at_management_group_scope(_api::DeploymentOperationsApi, response_stream::Channel, group_id::String, deployment_name::String, operation_id::String, api_version::String; _mediaType=nothing)
    _ctx = _oacinternal_deployment_operations_get_at_management_group_scope(_api, group_id, deployment_name, operation_id, api_version; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_deployment_operations_get_at_scope_DeploymentOperationsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => DeploymentOperation,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_deployment_operations_get_at_scope(_api::DeploymentOperationsApi, scope::String, deployment_name::String, operation_id::String, api_version::String; _mediaType=nothing)
    OpenAPI.validate_param("deployment_name", "deployment_operations_get_at_scope", :maxLength, deployment_name, 64)
    OpenAPI.validate_param("deployment_name", "deployment_operations_get_at_scope", :minLength, deployment_name, 1)

    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_deployment_operations_get_at_scope_DeploymentOperationsApi, "/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "scope", scope)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "deploymentName", deployment_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "operationId", operation_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Gets a deployments operation.

Params:
- scope::String (required)
- deployment_name::String (required)
- operation_id::String (required)
- api_version::String (required)

Return: DeploymentOperation, OpenAPI.Clients.ApiResponse
"""
function deployment_operations_get_at_scope(_api::DeploymentOperationsApi, scope::String, deployment_name::String, operation_id::String, api_version::String; _mediaType=nothing)
    _ctx = _oacinternal_deployment_operations_get_at_scope(_api, scope, deployment_name, operation_id, api_version; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function deployment_operations_get_at_scope(_api::DeploymentOperationsApi, response_stream::Channel, scope::String, deployment_name::String, operation_id::String, api_version::String; _mediaType=nothing)
    _ctx = _oacinternal_deployment_operations_get_at_scope(_api, scope, deployment_name, operation_id, api_version; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_deployment_operations_get_at_subscription_scope_DeploymentOperationsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => DeploymentOperation,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_deployment_operations_get_at_subscription_scope(_api::DeploymentOperationsApi, deployment_name::String, operation_id::String, api_version::String, subscription_id::String; _mediaType=nothing)
    OpenAPI.validate_param("deployment_name", "deployment_operations_get_at_subscription_scope", :maxLength, deployment_name, 64)
    OpenAPI.validate_param("deployment_name", "deployment_operations_get_at_subscription_scope", :minLength, deployment_name, 1)

    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_deployment_operations_get_at_subscription_scope_DeploymentOperationsApi, "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "deploymentName", deployment_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "operationId", operation_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Gets a deployments operation.

Params:
- deployment_name::String (required)
- operation_id::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: DeploymentOperation, OpenAPI.Clients.ApiResponse
"""
function deployment_operations_get_at_subscription_scope(_api::DeploymentOperationsApi, deployment_name::String, operation_id::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_deployment_operations_get_at_subscription_scope(_api, deployment_name, operation_id, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function deployment_operations_get_at_subscription_scope(_api::DeploymentOperationsApi, response_stream::Channel, deployment_name::String, operation_id::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_deployment_operations_get_at_subscription_scope(_api, deployment_name, operation_id, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_deployment_operations_get_at_tenant_scope_DeploymentOperationsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => DeploymentOperation,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_deployment_operations_get_at_tenant_scope(_api::DeploymentOperationsApi, deployment_name::String, operation_id::String, api_version::String; _mediaType=nothing)
    OpenAPI.validate_param("deployment_name", "deployment_operations_get_at_tenant_scope", :maxLength, deployment_name, 64)
    OpenAPI.validate_param("deployment_name", "deployment_operations_get_at_tenant_scope", :minLength, deployment_name, 1)

    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_deployment_operations_get_at_tenant_scope_DeploymentOperationsApi, "/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "deploymentName", deployment_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "operationId", operation_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Gets a deployments operation.

Params:
- deployment_name::String (required)
- operation_id::String (required)
- api_version::String (required)

Return: DeploymentOperation, OpenAPI.Clients.ApiResponse
"""
function deployment_operations_get_at_tenant_scope(_api::DeploymentOperationsApi, deployment_name::String, operation_id::String, api_version::String; _mediaType=nothing)
    _ctx = _oacinternal_deployment_operations_get_at_tenant_scope(_api, deployment_name, operation_id, api_version; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function deployment_operations_get_at_tenant_scope(_api::DeploymentOperationsApi, response_stream::Channel, deployment_name::String, operation_id::String, api_version::String; _mediaType=nothing)
    _ctx = _oacinternal_deployment_operations_get_at_tenant_scope(_api, deployment_name, operation_id, api_version; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_deployment_operations_list_DeploymentOperationsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => DeploymentOperationsListResult,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_deployment_operations_list(_api::DeploymentOperationsApi, resource_group_name::String, deployment_name::String, api_version::String, subscription_id::String; top=nothing, _mediaType=nothing)
    OpenAPI.validate_param("resource_group_name", "deployment_operations_list", :maxLength, resource_group_name, 90)
    OpenAPI.validate_param("resource_group_name", "deployment_operations_list", :minLength, resource_group_name, 1)

    OpenAPI.validate_param("deployment_name", "deployment_operations_list", :maxLength, deployment_name, 64)
    OpenAPI.validate_param("deployment_name", "deployment_operations_list", :minLength, deployment_name, 1)

    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_deployment_operations_list_DeploymentOperationsApi, "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "deploymentName", deployment_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "\$top", top)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Gets all deployments operations for a deployment.

Params:
- resource_group_name::String (required)
- deployment_name::String (required)
- api_version::String (required)
- subscription_id::String (required)
- top::Int64

Return: DeploymentOperationsListResult, OpenAPI.Clients.ApiResponse
"""
function deployment_operations_list(_api::DeploymentOperationsApi, resource_group_name::String, deployment_name::String, api_version::String, subscription_id::String; top=nothing, _mediaType=nothing)
    _ctx = _oacinternal_deployment_operations_list(_api, resource_group_name, deployment_name, api_version, subscription_id; top=top, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function deployment_operations_list(_api::DeploymentOperationsApi, response_stream::Channel, resource_group_name::String, deployment_name::String, api_version::String, subscription_id::String; top=nothing, _mediaType=nothing)
    _ctx = _oacinternal_deployment_operations_list(_api, resource_group_name, deployment_name, api_version, subscription_id; top=top, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_deployment_operations_list_at_management_group_scope_DeploymentOperationsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => DeploymentOperationsListResult,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_deployment_operations_list_at_management_group_scope(_api::DeploymentOperationsApi, group_id::String, deployment_name::String, api_version::String; top=nothing, _mediaType=nothing)
    OpenAPI.validate_param("group_id", "deployment_operations_list_at_management_group_scope", :maxLength, group_id, 90)
    OpenAPI.validate_param("group_id", "deployment_operations_list_at_management_group_scope", :minLength, group_id, 1)

    OpenAPI.validate_param("deployment_name", "deployment_operations_list_at_management_group_scope", :maxLength, deployment_name, 64)
    OpenAPI.validate_param("deployment_name", "deployment_operations_list_at_management_group_scope", :minLength, deployment_name, 1)

    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_deployment_operations_list_at_management_group_scope_DeploymentOperationsApi, "/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "groupId", group_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "deploymentName", deployment_name)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "\$top", top)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Gets all deployments operations for a deployment.

Params:
- group_id::String (required)
- deployment_name::String (required)
- api_version::String (required)
- top::Int64

Return: DeploymentOperationsListResult, OpenAPI.Clients.ApiResponse
"""
function deployment_operations_list_at_management_group_scope(_api::DeploymentOperationsApi, group_id::String, deployment_name::String, api_version::String; top=nothing, _mediaType=nothing)
    _ctx = _oacinternal_deployment_operations_list_at_management_group_scope(_api, group_id, deployment_name, api_version; top=top, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function deployment_operations_list_at_management_group_scope(_api::DeploymentOperationsApi, response_stream::Channel, group_id::String, deployment_name::String, api_version::String; top=nothing, _mediaType=nothing)
    _ctx = _oacinternal_deployment_operations_list_at_management_group_scope(_api, group_id, deployment_name, api_version; top=top, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_deployment_operations_list_at_scope_DeploymentOperationsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => DeploymentOperationsListResult,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_deployment_operations_list_at_scope(_api::DeploymentOperationsApi, scope::String, deployment_name::String, api_version::String; top=nothing, _mediaType=nothing)
    OpenAPI.validate_param("deployment_name", "deployment_operations_list_at_scope", :maxLength, deployment_name, 64)
    OpenAPI.validate_param("deployment_name", "deployment_operations_list_at_scope", :minLength, deployment_name, 1)

    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_deployment_operations_list_at_scope_DeploymentOperationsApi, "/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/operations", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "scope", scope)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "deploymentName", deployment_name)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "\$top", top)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Gets all deployments operations for a deployment.

Params:
- scope::String (required)
- deployment_name::String (required)
- api_version::String (required)
- top::Int64

Return: DeploymentOperationsListResult, OpenAPI.Clients.ApiResponse
"""
function deployment_operations_list_at_scope(_api::DeploymentOperationsApi, scope::String, deployment_name::String, api_version::String; top=nothing, _mediaType=nothing)
    _ctx = _oacinternal_deployment_operations_list_at_scope(_api, scope, deployment_name, api_version; top=top, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function deployment_operations_list_at_scope(_api::DeploymentOperationsApi, response_stream::Channel, scope::String, deployment_name::String, api_version::String; top=nothing, _mediaType=nothing)
    _ctx = _oacinternal_deployment_operations_list_at_scope(_api, scope, deployment_name, api_version; top=top, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_deployment_operations_list_at_subscription_scope_DeploymentOperationsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => DeploymentOperationsListResult,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_deployment_operations_list_at_subscription_scope(_api::DeploymentOperationsApi, deployment_name::String, api_version::String, subscription_id::String; top=nothing, _mediaType=nothing)
    OpenAPI.validate_param("deployment_name", "deployment_operations_list_at_subscription_scope", :maxLength, deployment_name, 64)
    OpenAPI.validate_param("deployment_name", "deployment_operations_list_at_subscription_scope", :minLength, deployment_name, 1)

    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_deployment_operations_list_at_subscription_scope_DeploymentOperationsApi, "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "deploymentName", deployment_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "\$top", top)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Gets all deployments operations for a deployment.

Params:
- deployment_name::String (required)
- api_version::String (required)
- subscription_id::String (required)
- top::Int64

Return: DeploymentOperationsListResult, OpenAPI.Clients.ApiResponse
"""
function deployment_operations_list_at_subscription_scope(_api::DeploymentOperationsApi, deployment_name::String, api_version::String, subscription_id::String; top=nothing, _mediaType=nothing)
    _ctx = _oacinternal_deployment_operations_list_at_subscription_scope(_api, deployment_name, api_version, subscription_id; top=top, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function deployment_operations_list_at_subscription_scope(_api::DeploymentOperationsApi, response_stream::Channel, deployment_name::String, api_version::String, subscription_id::String; top=nothing, _mediaType=nothing)
    _ctx = _oacinternal_deployment_operations_list_at_subscription_scope(_api, deployment_name, api_version, subscription_id; top=top, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_deployment_operations_list_at_tenant_scope_DeploymentOperationsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => DeploymentOperationsListResult,
    Regex("^" * replace("0", "x"=>".") * "\$") => CloudError,
)

function _oacinternal_deployment_operations_list_at_tenant_scope(_api::DeploymentOperationsApi, deployment_name::String, api_version::String; top=nothing, _mediaType=nothing)
    OpenAPI.validate_param("deployment_name", "deployment_operations_list_at_tenant_scope", :maxLength, deployment_name, 64)
    OpenAPI.validate_param("deployment_name", "deployment_operations_list_at_tenant_scope", :minLength, deployment_name, 1)

    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_deployment_operations_list_at_tenant_scope_DeploymentOperationsApi, "/providers/Microsoft.Resources/deployments/{deploymentName}/operations", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "deploymentName", deployment_name)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "\$top", top)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Gets all deployments operations for a deployment.

Params:
- deployment_name::String (required)
- api_version::String (required)
- top::Int64

Return: DeploymentOperationsListResult, OpenAPI.Clients.ApiResponse
"""
function deployment_operations_list_at_tenant_scope(_api::DeploymentOperationsApi, deployment_name::String, api_version::String; top=nothing, _mediaType=nothing)
    _ctx = _oacinternal_deployment_operations_list_at_tenant_scope(_api, deployment_name, api_version; top=top, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function deployment_operations_list_at_tenant_scope(_api::DeploymentOperationsApi, response_stream::Channel, deployment_name::String, api_version::String; top=nothing, _mediaType=nothing)
    _ctx = _oacinternal_deployment_operations_list_at_tenant_scope(_api, deployment_name, api_version; top=top, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export deployment_operations_get
export deployment_operations_get_at_management_group_scope
export deployment_operations_get_at_scope
export deployment_operations_get_at_subscription_scope
export deployment_operations_get_at_tenant_scope
export deployment_operations_list
export deployment_operations_list_at_management_group_scope
export deployment_operations_list_at_scope
export deployment_operations_list_at_subscription_scope
export deployment_operations_list_at_tenant_scope
