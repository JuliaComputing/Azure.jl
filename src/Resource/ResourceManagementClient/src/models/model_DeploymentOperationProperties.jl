# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""DeploymentOperationProperties
Deployment operation properties.

    DeploymentOperationProperties(;
        provisioningOperation=nothing,
        provisioningState=nothing,
        timestamp=nothing,
        duration=nothing,
        serviceRequestId=nothing,
        statusCode=nothing,
        statusMessage=nothing,
        targetResource=nothing,
        request=nothing,
        response=nothing,
    )

    - provisioningOperation::String : The name of the current provisioning operation.
    - provisioningState::String : The state of the provisioning.
    - timestamp::ZonedDateTime : The date and time of the operation.
    - duration::String : The duration of the operation.
    - serviceRequestId::String : Deployment operation service request id.
    - statusCode::String : Operation status code from the resource provider. This property may not be set if a response has not yet been received.
    - statusMessage::StatusMessage
    - targetResource::TargetResource
    - request::HttpMessage
    - response::HttpMessage
"""
Base.@kwdef mutable struct DeploymentOperationProperties <: OpenAPI.APIModel
    provisioningOperation::Union{Nothing, String} = nothing
    provisioningState::Union{Nothing, String} = nothing
    timestamp::Union{Nothing, ZonedDateTime} = nothing
    duration::Union{Nothing, String} = nothing
    serviceRequestId::Union{Nothing, String} = nothing
    statusCode::Union{Nothing, String} = nothing
    statusMessage = nothing # spec type: Union{ Nothing, StatusMessage }
    targetResource = nothing # spec type: Union{ Nothing, TargetResource }
    request = nothing # spec type: Union{ Nothing, HttpMessage }
    response = nothing # spec type: Union{ Nothing, HttpMessage }

    function DeploymentOperationProperties(provisioningOperation, provisioningState, timestamp, duration, serviceRequestId, statusCode, statusMessage, targetResource, request, response, )
        OpenAPI.validate_property(DeploymentOperationProperties, Symbol("provisioningOperation"), provisioningOperation)
        OpenAPI.validate_property(DeploymentOperationProperties, Symbol("provisioningState"), provisioningState)
        OpenAPI.validate_property(DeploymentOperationProperties, Symbol("timestamp"), timestamp)
        OpenAPI.validate_property(DeploymentOperationProperties, Symbol("duration"), duration)
        OpenAPI.validate_property(DeploymentOperationProperties, Symbol("serviceRequestId"), serviceRequestId)
        OpenAPI.validate_property(DeploymentOperationProperties, Symbol("statusCode"), statusCode)
        OpenAPI.validate_property(DeploymentOperationProperties, Symbol("statusMessage"), statusMessage)
        OpenAPI.validate_property(DeploymentOperationProperties, Symbol("targetResource"), targetResource)
        OpenAPI.validate_property(DeploymentOperationProperties, Symbol("request"), request)
        OpenAPI.validate_property(DeploymentOperationProperties, Symbol("response"), response)
        return new(provisioningOperation, provisioningState, timestamp, duration, serviceRequestId, statusCode, statusMessage, targetResource, request, response, )
    end
end # type DeploymentOperationProperties

const _property_types_DeploymentOperationProperties = Dict{Symbol,String}(Symbol("provisioningOperation")=>"String", Symbol("provisioningState")=>"String", Symbol("timestamp")=>"ZonedDateTime", Symbol("duration")=>"String", Symbol("serviceRequestId")=>"String", Symbol("statusCode")=>"String", Symbol("statusMessage")=>"StatusMessage", Symbol("targetResource")=>"TargetResource", Symbol("request")=>"HttpMessage", Symbol("response")=>"HttpMessage", )
OpenAPI.property_type(::Type{ DeploymentOperationProperties }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DeploymentOperationProperties[name]))}

function check_required(o::DeploymentOperationProperties)
    true
end

function OpenAPI.validate_property(::Type{ DeploymentOperationProperties }, name::Symbol, val)
    if name === Symbol("provisioningOperation")
        OpenAPI.validate_param(name, "DeploymentOperationProperties", :enum, val, ["NotSpecified", "Create", "Delete", "Waiting", "AzureAsyncOperationWaiting", "ResourceCacheWaiting", "Action", "Read", "EvaluateDeploymentOutput", "DeploymentCleanup"])
    end
    if name === Symbol("timestamp")
        OpenAPI.validate_param(name, "DeploymentOperationProperties", :format, val, "date-time")
    end
end
