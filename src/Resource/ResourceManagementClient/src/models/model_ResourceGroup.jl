# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ResourceGroup
Resource group information.

    ResourceGroup(;
        id=nothing,
        name=nothing,
        type=nothing,
        properties=nothing,
        location=nothing,
        managedBy=nothing,
        tags=nothing,
    )

    - id::String : The ID of the resource group.
    - name::String : The name of the resource group.
    - type::String : The type of the resource group.
    - properties::ResourceGroupProperties
    - location::String : The location of the resource group. It cannot be changed after the resource group has been created. It must be one of the supported Azure locations.
    - managedBy::String : The ID of the resource that manages this resource group.
    - tags::Dict{String, String} : The tags attached to the resource group.
"""
Base.@kwdef mutable struct ResourceGroup <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing
    properties = nothing # spec type: Union{ Nothing, ResourceGroupProperties }
    location::Union{Nothing, String} = nothing
    managedBy::Union{Nothing, String} = nothing
    tags::Union{Nothing, Dict{String, String}} = nothing

    function ResourceGroup(id, name, type, properties, location, managedBy, tags, )
        OpenAPI.validate_property(ResourceGroup, Symbol("id"), id)
        OpenAPI.validate_property(ResourceGroup, Symbol("name"), name)
        OpenAPI.validate_property(ResourceGroup, Symbol("type"), type)
        OpenAPI.validate_property(ResourceGroup, Symbol("properties"), properties)
        OpenAPI.validate_property(ResourceGroup, Symbol("location"), location)
        OpenAPI.validate_property(ResourceGroup, Symbol("managedBy"), managedBy)
        OpenAPI.validate_property(ResourceGroup, Symbol("tags"), tags)
        return new(id, name, type, properties, location, managedBy, tags, )
    end
end # type ResourceGroup

const _property_types_ResourceGroup = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("name")=>"String", Symbol("type")=>"String", Symbol("properties")=>"ResourceGroupProperties", Symbol("location")=>"String", Symbol("managedBy")=>"String", Symbol("tags")=>"Dict{String, String}", )
OpenAPI.property_type(::Type{ ResourceGroup }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ResourceGroup[name]))}

function check_required(o::ResourceGroup)
    o.location === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ ResourceGroup }, name::Symbol, val)
end
