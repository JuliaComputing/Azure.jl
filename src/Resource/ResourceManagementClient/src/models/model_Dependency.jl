# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Dependency
Deployment dependency information.

    Dependency(;
        dependsOn=nothing,
        id=nothing,
        resourceType=nothing,
        resourceName=nothing,
    )

    - dependsOn::Vector{BasicDependency} : The list of dependencies.
    - id::String : The ID of the dependency.
    - resourceType::String : The dependency resource type.
    - resourceName::String : The dependency resource name.
"""
Base.@kwdef mutable struct Dependency <: OpenAPI.APIModel
    dependsOn::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{BasicDependency} }
    id::Union{Nothing, String} = nothing
    resourceType::Union{Nothing, String} = nothing
    resourceName::Union{Nothing, String} = nothing

    function Dependency(dependsOn, id, resourceType, resourceName, )
        OpenAPI.validate_property(Dependency, Symbol("dependsOn"), dependsOn)
        OpenAPI.validate_property(Dependency, Symbol("id"), id)
        OpenAPI.validate_property(Dependency, Symbol("resourceType"), resourceType)
        OpenAPI.validate_property(Dependency, Symbol("resourceName"), resourceName)
        return new(dependsOn, id, resourceType, resourceName, )
    end
end # type Dependency

const _property_types_Dependency = Dict{Symbol,String}(Symbol("dependsOn")=>"Vector{BasicDependency}", Symbol("id")=>"String", Symbol("resourceType")=>"String", Symbol("resourceName")=>"String", )
OpenAPI.property_type(::Type{ Dependency }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Dependency[name]))}

function check_required(o::Dependency)
    true
end

function OpenAPI.validate_property(::Type{ Dependency }, name::Symbol, val)
end
