# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ExtendedLocation
Resource extended location.

    ExtendedLocation(;
        type=nothing,
        name=nothing,
    )

    - type::String : The extended location type.
    - name::String : The extended location name.
"""
Base.@kwdef mutable struct ExtendedLocation <: OpenAPI.APIModel
    type::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing

    function ExtendedLocation(type, name, )
        o = new(type, name, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type ExtendedLocation

const _property_types_ExtendedLocation = Dict{Symbol,String}(Symbol("type")=>"String", Symbol("name")=>"String", )
OpenAPI.property_type(::Type{ ExtendedLocation }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ExtendedLocation[name]))}

function OpenAPI.check_required(o::ExtendedLocation)
    true
end

function OpenAPI.validate_properties(o::ExtendedLocation)
    OpenAPI.validate_property(ExtendedLocation, Symbol("type"), o.type)
    OpenAPI.validate_property(ExtendedLocation, Symbol("name"), o.name)
end

function OpenAPI.validate_property(::Type{ ExtendedLocation }, name::Symbol, val)

    if name === Symbol("type")
        OpenAPI.validate_param(name, "ExtendedLocation", :enum, val, ["EdgeZone"])
    end


end
