# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""TemplateHashResult
Result of the request to calculate template hash. It contains a string of minified template and its hash.

    TemplateHashResult(;
        minifiedTemplate=nothing,
        templateHash=nothing,
    )

    - minifiedTemplate::String : The minified template string.
    - templateHash::String : The template hash.
"""
Base.@kwdef mutable struct TemplateHashResult <: OpenAPI.APIModel
    minifiedTemplate::Union{Nothing, String} = nothing
    templateHash::Union{Nothing, String} = nothing

    function TemplateHashResult(minifiedTemplate, templateHash, )
        OpenAPI.validate_property(TemplateHashResult, Symbol("minifiedTemplate"), minifiedTemplate)
        OpenAPI.validate_property(TemplateHashResult, Symbol("templateHash"), templateHash)
        return new(minifiedTemplate, templateHash, )
    end
end # type TemplateHashResult

const _property_types_TemplateHashResult = Dict{Symbol,String}(Symbol("minifiedTemplate")=>"String", Symbol("templateHash")=>"String", )
OpenAPI.property_type(::Type{ TemplateHashResult }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_TemplateHashResult[name]))}

function check_required(o::TemplateHashResult)
    true
end

function OpenAPI.validate_property(::Type{ TemplateHashResult }, name::Symbol, val)
end
