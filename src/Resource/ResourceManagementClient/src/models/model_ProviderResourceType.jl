# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ProviderResourceType
Resource type managed by the resource provider.

    ProviderResourceType(;
        resourceType=nothing,
        locations=nothing,
        aliases=nothing,
        apiVersions=nothing,
        capabilities=nothing,
        properties=nothing,
    )

    - resourceType::String : The resource type.
    - locations::Vector{String} : The collection of locations where this resource type can be created.
    - aliases::Vector{Alias} : The aliases that are supported by this resource type.
    - apiVersions::Vector{String} : The API version.
    - capabilities::String : The additional capabilities offered by this resource type.
    - properties::Dict{String, String} : The properties.
"""
Base.@kwdef mutable struct ProviderResourceType <: OpenAPI.APIModel
    resourceType::Union{Nothing, String} = nothing
    locations::Union{Nothing, Vector{String}} = nothing
    aliases::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{Alias} }
    apiVersions::Union{Nothing, Vector{String}} = nothing
    capabilities::Union{Nothing, String} = nothing
    properties::Union{Nothing, Dict{String, String}} = nothing

    function ProviderResourceType(resourceType, locations, aliases, apiVersions, capabilities, properties, )
        OpenAPI.validate_property(ProviderResourceType, Symbol("resourceType"), resourceType)
        OpenAPI.validate_property(ProviderResourceType, Symbol("locations"), locations)
        OpenAPI.validate_property(ProviderResourceType, Symbol("aliases"), aliases)
        OpenAPI.validate_property(ProviderResourceType, Symbol("apiVersions"), apiVersions)
        OpenAPI.validate_property(ProviderResourceType, Symbol("capabilities"), capabilities)
        OpenAPI.validate_property(ProviderResourceType, Symbol("properties"), properties)
        return new(resourceType, locations, aliases, apiVersions, capabilities, properties, )
    end
end # type ProviderResourceType

const _property_types_ProviderResourceType = Dict{Symbol,String}(Symbol("resourceType")=>"String", Symbol("locations")=>"Vector{String}", Symbol("aliases")=>"Vector{Alias}", Symbol("apiVersions")=>"Vector{String}", Symbol("capabilities")=>"String", Symbol("properties")=>"Dict{String, String}", )
OpenAPI.property_type(::Type{ ProviderResourceType }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ProviderResourceType[name]))}

function check_required(o::ProviderResourceType)
    true
end

function OpenAPI.validate_property(::Type{ ProviderResourceType }, name::Symbol, val)
end
