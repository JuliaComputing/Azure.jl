# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""TagValue
Tag information.

    TagValue(;
        id=nothing,
        tagValue=nothing,
        count=nothing,
    )

    - id::String : The tag value ID.
    - tagValue::String : The tag value.
    - count::TagCount
"""
Base.@kwdef mutable struct TagValue <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    tagValue::Union{Nothing, String} = nothing
    count = nothing # spec type: Union{ Nothing, TagCount }

    function TagValue(id, tagValue, count, )
        o = new(id, tagValue, count, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type TagValue

const _property_types_TagValue = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("tagValue")=>"String", Symbol("count")=>"TagCount", )
OpenAPI.property_type(::Type{ TagValue }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_TagValue[name]))}

function OpenAPI.check_required(o::TagValue)
    true
end

function OpenAPI.validate_properties(o::TagValue)
    OpenAPI.validate_property(TagValue, Symbol("id"), o.id)
    OpenAPI.validate_property(TagValue, Symbol("tagValue"), o.tagValue)
    OpenAPI.validate_property(TagValue, Symbol("count"), o.count)
end

function OpenAPI.validate_property(::Type{ TagValue }, name::Symbol, val)



end
