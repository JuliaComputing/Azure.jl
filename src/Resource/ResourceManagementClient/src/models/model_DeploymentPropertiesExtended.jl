# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""DeploymentPropertiesExtended
Deployment properties with additional details.

    DeploymentPropertiesExtended(;
        provisioningState=nothing,
        correlationId=nothing,
        timestamp=nothing,
        duration=nothing,
        outputs=nothing,
        providers=nothing,
        dependencies=nothing,
        templateLink=nothing,
        parameters=nothing,
        parametersLink=nothing,
        mode=nothing,
        debugSetting=nothing,
        onErrorDeployment=nothing,
        templateHash=nothing,
        outputResources=nothing,
        validatedResources=nothing,
        error=nothing,
    )

    - provisioningState::String : Denotes the state of provisioning.
    - correlationId::String : The correlation ID of the deployment.
    - timestamp::ZonedDateTime : The timestamp of the template deployment.
    - duration::String : The duration of the template deployment.
    - outputs::Any : Key/value pairs that represent deployment output.
    - providers::Vector{Provider} : The list of resource providers needed for the deployment.
    - dependencies::Vector{Dependency} : The list of deployment dependencies.
    - templateLink::TemplateLink
    - parameters::Any : Deployment parameters. 
    - parametersLink::ParametersLink
    - mode::String : The deployment mode. Possible values are Incremental and Complete.
    - debugSetting::DebugSetting
    - onErrorDeployment::OnErrorDeploymentExtended
    - templateHash::String : The hash produced for the template.
    - outputResources::Vector{ResourceReference} : Array of provisioned resources.
    - validatedResources::Vector{ResourceReference} : Array of validated resources.
    - error::ErrorResponse
"""
Base.@kwdef mutable struct DeploymentPropertiesExtended <: OpenAPI.APIModel
    provisioningState::Union{Nothing, String} = nothing
    correlationId::Union{Nothing, String} = nothing
    timestamp::Union{Nothing, ZonedDateTime} = nothing
    duration::Union{Nothing, String} = nothing
    outputs::Union{Nothing, Any} = nothing
    providers::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{Provider} }
    dependencies::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{Dependency} }
    templateLink = nothing # spec type: Union{ Nothing, TemplateLink }
    parameters::Union{Nothing, Any} = nothing
    parametersLink = nothing # spec type: Union{ Nothing, ParametersLink }
    mode::Union{Nothing, String} = nothing
    debugSetting = nothing # spec type: Union{ Nothing, DebugSetting }
    onErrorDeployment = nothing # spec type: Union{ Nothing, OnErrorDeploymentExtended }
    templateHash::Union{Nothing, String} = nothing
    outputResources::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{ResourceReference} }
    validatedResources::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{ResourceReference} }
    error = nothing # spec type: Union{ Nothing, ErrorResponse }

    function DeploymentPropertiesExtended(provisioningState, correlationId, timestamp, duration, outputs, providers, dependencies, templateLink, parameters, parametersLink, mode, debugSetting, onErrorDeployment, templateHash, outputResources, validatedResources, error, )
        OpenAPI.validate_property(DeploymentPropertiesExtended, Symbol("provisioningState"), provisioningState)
        OpenAPI.validate_property(DeploymentPropertiesExtended, Symbol("correlationId"), correlationId)
        OpenAPI.validate_property(DeploymentPropertiesExtended, Symbol("timestamp"), timestamp)
        OpenAPI.validate_property(DeploymentPropertiesExtended, Symbol("duration"), duration)
        OpenAPI.validate_property(DeploymentPropertiesExtended, Symbol("outputs"), outputs)
        OpenAPI.validate_property(DeploymentPropertiesExtended, Symbol("providers"), providers)
        OpenAPI.validate_property(DeploymentPropertiesExtended, Symbol("dependencies"), dependencies)
        OpenAPI.validate_property(DeploymentPropertiesExtended, Symbol("templateLink"), templateLink)
        OpenAPI.validate_property(DeploymentPropertiesExtended, Symbol("parameters"), parameters)
        OpenAPI.validate_property(DeploymentPropertiesExtended, Symbol("parametersLink"), parametersLink)
        OpenAPI.validate_property(DeploymentPropertiesExtended, Symbol("mode"), mode)
        OpenAPI.validate_property(DeploymentPropertiesExtended, Symbol("debugSetting"), debugSetting)
        OpenAPI.validate_property(DeploymentPropertiesExtended, Symbol("onErrorDeployment"), onErrorDeployment)
        OpenAPI.validate_property(DeploymentPropertiesExtended, Symbol("templateHash"), templateHash)
        OpenAPI.validate_property(DeploymentPropertiesExtended, Symbol("outputResources"), outputResources)
        OpenAPI.validate_property(DeploymentPropertiesExtended, Symbol("validatedResources"), validatedResources)
        OpenAPI.validate_property(DeploymentPropertiesExtended, Symbol("error"), error)
        return new(provisioningState, correlationId, timestamp, duration, outputs, providers, dependencies, templateLink, parameters, parametersLink, mode, debugSetting, onErrorDeployment, templateHash, outputResources, validatedResources, error, )
    end
end # type DeploymentPropertiesExtended

const _property_types_DeploymentPropertiesExtended = Dict{Symbol,String}(Symbol("provisioningState")=>"String", Symbol("correlationId")=>"String", Symbol("timestamp")=>"ZonedDateTime", Symbol("duration")=>"String", Symbol("outputs")=>"Any", Symbol("providers")=>"Vector{Provider}", Symbol("dependencies")=>"Vector{Dependency}", Symbol("templateLink")=>"TemplateLink", Symbol("parameters")=>"Any", Symbol("parametersLink")=>"ParametersLink", Symbol("mode")=>"String", Symbol("debugSetting")=>"DebugSetting", Symbol("onErrorDeployment")=>"OnErrorDeploymentExtended", Symbol("templateHash")=>"String", Symbol("outputResources")=>"Vector{ResourceReference}", Symbol("validatedResources")=>"Vector{ResourceReference}", Symbol("error")=>"ErrorResponse", )
OpenAPI.property_type(::Type{ DeploymentPropertiesExtended }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DeploymentPropertiesExtended[name]))}

function check_required(o::DeploymentPropertiesExtended)
    true
end

function OpenAPI.validate_property(::Type{ DeploymentPropertiesExtended }, name::Symbol, val)
    if name === Symbol("provisioningState")
        OpenAPI.validate_param(name, "DeploymentPropertiesExtended", :enum, val, ["NotSpecified", "Accepted", "Running", "Ready", "Creating", "Created", "Deleting", "Deleted", "Canceled", "Failed", "Succeeded", "Updating"])
    end
    if name === Symbol("timestamp")
        OpenAPI.validate_param(name, "DeploymentPropertiesExtended", :format, val, "date-time")
    end
    if name === Symbol("mode")
        OpenAPI.validate_param(name, "DeploymentPropertiesExtended", :enum, val, ["Incremental", "Complete"])
    end
end
