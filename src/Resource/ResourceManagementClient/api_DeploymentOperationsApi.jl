# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

struct DeploymentOperationsApi <: SwaggerApi
    client::Swagger.Client
end

"""

Gets a deployments operation.
Param: resourceGroupName::String (required)
Param: deploymentName::String (required)
Param: operationId::String (required)
Param: api_version::String (required)
Param: subscriptionId::String (required)
Return: DeploymentOperation
"""
function _swaggerinternal_deploymentOperationsGet(_api::DeploymentOperationsApi, resourceGroupName::String, deploymentName::String, operationId::String, api_version::String, subscriptionId::String; _mediaType=nothing)
    Swagger.validate_param("resourceGroupName", "deploymentOperationsGet", :maxLength, resourceGroupName, 90)
    Swagger.validate_param("resourceGroupName", "deploymentOperationsGet", :minLength, resourceGroupName, 1)

    Swagger.validate_param("deploymentName", "deploymentOperationsGet", :maxLength, deploymentName, 64)
    Swagger.validate_param("deploymentName", "deploymentOperationsGet", :minLength, deploymentName, 1)

    _ctx = Swagger.Ctx(_api.client, "GET", DeploymentOperation, "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations/{operationId}", ["azure_auth"])
    Swagger.set_param(_ctx.path, "resourceGroupName", resourceGroupName)  # type String
    Swagger.set_param(_ctx.path, "deploymentName", deploymentName)  # type String
    Swagger.set_param(_ctx.path, "operationId", operationId)  # type String
    Swagger.set_param(_ctx.path, "subscriptionId", subscriptionId)  # type String
    Swagger.set_param(_ctx.query, "api-version", api_version)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json"] : [_mediaType])
    return _ctx
end

function deploymentOperationsGet(_api::DeploymentOperationsApi, resourceGroupName::String, deploymentName::String, operationId::String, api_version::String, subscriptionId::String; _mediaType=nothing)
    _ctx = _swaggerinternal_deploymentOperationsGet(_api, resourceGroupName, deploymentName, operationId, api_version, subscriptionId; _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function deploymentOperationsGet(_api::DeploymentOperationsApi, response_stream::Channel, resourceGroupName::String, deploymentName::String, operationId::String, api_version::String, subscriptionId::String; _mediaType=nothing)
    _ctx = _swaggerinternal_deploymentOperationsGet(_api, resourceGroupName, deploymentName, operationId, api_version, subscriptionId; _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

"""

Gets a deployments operation.
Param: groupId::String (required)
Param: deploymentName::String (required)
Param: operationId::String (required)
Param: api_version::String (required)
Return: DeploymentOperation
"""
function _swaggerinternal_deploymentOperationsGetAtManagementGroupScope(_api::DeploymentOperationsApi, groupId::String, deploymentName::String, operationId::String, api_version::String; _mediaType=nothing)
    Swagger.validate_param("groupId", "deploymentOperationsGetAtManagementGroupScope", :maxLength, groupId, 90)
    Swagger.validate_param("groupId", "deploymentOperationsGetAtManagementGroupScope", :minLength, groupId, 1)

    Swagger.validate_param("deploymentName", "deploymentOperationsGetAtManagementGroupScope", :maxLength, deploymentName, 64)
    Swagger.validate_param("deploymentName", "deploymentOperationsGetAtManagementGroupScope", :minLength, deploymentName, 1)

    _ctx = Swagger.Ctx(_api.client, "GET", DeploymentOperation, "/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}", ["azure_auth"])
    Swagger.set_param(_ctx.path, "groupId", groupId)  # type String
    Swagger.set_param(_ctx.path, "deploymentName", deploymentName)  # type String
    Swagger.set_param(_ctx.path, "operationId", operationId)  # type String
    Swagger.set_param(_ctx.query, "api-version", api_version)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json"] : [_mediaType])
    return _ctx
end

function deploymentOperationsGetAtManagementGroupScope(_api::DeploymentOperationsApi, groupId::String, deploymentName::String, operationId::String, api_version::String; _mediaType=nothing)
    _ctx = _swaggerinternal_deploymentOperationsGetAtManagementGroupScope(_api, groupId, deploymentName, operationId, api_version; _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function deploymentOperationsGetAtManagementGroupScope(_api::DeploymentOperationsApi, response_stream::Channel, groupId::String, deploymentName::String, operationId::String, api_version::String; _mediaType=nothing)
    _ctx = _swaggerinternal_deploymentOperationsGetAtManagementGroupScope(_api, groupId, deploymentName, operationId, api_version; _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

"""

Gets a deployments operation.
Param: scope::String (required)
Param: deploymentName::String (required)
Param: operationId::String (required)
Param: api_version::String (required)
Return: DeploymentOperation
"""
function _swaggerinternal_deploymentOperationsGetAtScope(_api::DeploymentOperationsApi, scope::String, deploymentName::String, operationId::String, api_version::String; _mediaType=nothing)
    Swagger.validate_param("deploymentName", "deploymentOperationsGetAtScope", :maxLength, deploymentName, 64)
    Swagger.validate_param("deploymentName", "deploymentOperationsGetAtScope", :minLength, deploymentName, 1)

    _ctx = Swagger.Ctx(_api.client, "GET", DeploymentOperation, "/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}", ["azure_auth"])
    Swagger.set_param(_ctx.path, "scope", scope)  # type String
    Swagger.set_param(_ctx.path, "deploymentName", deploymentName)  # type String
    Swagger.set_param(_ctx.path, "operationId", operationId)  # type String
    Swagger.set_param(_ctx.query, "api-version", api_version)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json"] : [_mediaType])
    return _ctx
end

function deploymentOperationsGetAtScope(_api::DeploymentOperationsApi, scope::String, deploymentName::String, operationId::String, api_version::String; _mediaType=nothing)
    _ctx = _swaggerinternal_deploymentOperationsGetAtScope(_api, scope, deploymentName, operationId, api_version; _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function deploymentOperationsGetAtScope(_api::DeploymentOperationsApi, response_stream::Channel, scope::String, deploymentName::String, operationId::String, api_version::String; _mediaType=nothing)
    _ctx = _swaggerinternal_deploymentOperationsGetAtScope(_api, scope, deploymentName, operationId, api_version; _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

"""

Gets a deployments operation.
Param: deploymentName::String (required)
Param: operationId::String (required)
Param: api_version::String (required)
Param: subscriptionId::String (required)
Return: DeploymentOperation
"""
function _swaggerinternal_deploymentOperationsGetAtSubscriptionScope(_api::DeploymentOperationsApi, deploymentName::String, operationId::String, api_version::String, subscriptionId::String; _mediaType=nothing)
    Swagger.validate_param("deploymentName", "deploymentOperationsGetAtSubscriptionScope", :maxLength, deploymentName, 64)
    Swagger.validate_param("deploymentName", "deploymentOperationsGetAtSubscriptionScope", :minLength, deploymentName, 1)

    _ctx = Swagger.Ctx(_api.client, "GET", DeploymentOperation, "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}", ["azure_auth"])
    Swagger.set_param(_ctx.path, "deploymentName", deploymentName)  # type String
    Swagger.set_param(_ctx.path, "operationId", operationId)  # type String
    Swagger.set_param(_ctx.path, "subscriptionId", subscriptionId)  # type String
    Swagger.set_param(_ctx.query, "api-version", api_version)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json"] : [_mediaType])
    return _ctx
end

function deploymentOperationsGetAtSubscriptionScope(_api::DeploymentOperationsApi, deploymentName::String, operationId::String, api_version::String, subscriptionId::String; _mediaType=nothing)
    _ctx = _swaggerinternal_deploymentOperationsGetAtSubscriptionScope(_api, deploymentName, operationId, api_version, subscriptionId; _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function deploymentOperationsGetAtSubscriptionScope(_api::DeploymentOperationsApi, response_stream::Channel, deploymentName::String, operationId::String, api_version::String, subscriptionId::String; _mediaType=nothing)
    _ctx = _swaggerinternal_deploymentOperationsGetAtSubscriptionScope(_api, deploymentName, operationId, api_version, subscriptionId; _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

"""

Gets a deployments operation.
Param: deploymentName::String (required)
Param: operationId::String (required)
Param: api_version::String (required)
Return: DeploymentOperation
"""
function _swaggerinternal_deploymentOperationsGetAtTenantScope(_api::DeploymentOperationsApi, deploymentName::String, operationId::String, api_version::String; _mediaType=nothing)
    Swagger.validate_param("deploymentName", "deploymentOperationsGetAtTenantScope", :maxLength, deploymentName, 64)
    Swagger.validate_param("deploymentName", "deploymentOperationsGetAtTenantScope", :minLength, deploymentName, 1)

    _ctx = Swagger.Ctx(_api.client, "GET", DeploymentOperation, "/providers/Microsoft.Resources/deployments/{deploymentName}/operations/{operationId}", ["azure_auth"])
    Swagger.set_param(_ctx.path, "deploymentName", deploymentName)  # type String
    Swagger.set_param(_ctx.path, "operationId", operationId)  # type String
    Swagger.set_param(_ctx.query, "api-version", api_version)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json"] : [_mediaType])
    return _ctx
end

function deploymentOperationsGetAtTenantScope(_api::DeploymentOperationsApi, deploymentName::String, operationId::String, api_version::String; _mediaType=nothing)
    _ctx = _swaggerinternal_deploymentOperationsGetAtTenantScope(_api, deploymentName, operationId, api_version; _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function deploymentOperationsGetAtTenantScope(_api::DeploymentOperationsApi, response_stream::Channel, deploymentName::String, operationId::String, api_version::String; _mediaType=nothing)
    _ctx = _swaggerinternal_deploymentOperationsGetAtTenantScope(_api, deploymentName, operationId, api_version; _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

"""

Gets all deployments operations for a deployment.
Param: resourceGroupName::String (required)
Param: deploymentName::String (required)
Param: api_version::String (required)
Param: subscriptionId::String (required)
Param: top::Int32
Return: DeploymentOperationsListResult
"""
function _swaggerinternal_deploymentOperationsList(_api::DeploymentOperationsApi, resourceGroupName::String, deploymentName::String, api_version::String, subscriptionId::String; top=nothing, _mediaType=nothing)
    Swagger.validate_param("resourceGroupName", "deploymentOperationsList", :maxLength, resourceGroupName, 90)
    Swagger.validate_param("resourceGroupName", "deploymentOperationsList", :minLength, resourceGroupName, 1)

    Swagger.validate_param("deploymentName", "deploymentOperationsList", :maxLength, deploymentName, 64)
    Swagger.validate_param("deploymentName", "deploymentOperationsList", :minLength, deploymentName, 1)

    _ctx = Swagger.Ctx(_api.client, "GET", DeploymentOperationsListResult, "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/deployments/{deploymentName}/operations", ["azure_auth"])
    Swagger.set_param(_ctx.path, "resourceGroupName", resourceGroupName)  # type String
    Swagger.set_param(_ctx.path, "deploymentName", deploymentName)  # type String
    Swagger.set_param(_ctx.path, "subscriptionId", subscriptionId)  # type String
    Swagger.set_param(_ctx.query, "\$top", top)  # type Int32
    Swagger.set_param(_ctx.query, "api-version", api_version)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json"] : [_mediaType])
    return _ctx
end

function deploymentOperationsList(_api::DeploymentOperationsApi, resourceGroupName::String, deploymentName::String, api_version::String, subscriptionId::String; top=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deploymentOperationsList(_api, resourceGroupName, deploymentName, api_version, subscriptionId; top=top, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function deploymentOperationsList(_api::DeploymentOperationsApi, response_stream::Channel, resourceGroupName::String, deploymentName::String, api_version::String, subscriptionId::String; top=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deploymentOperationsList(_api, resourceGroupName, deploymentName, api_version, subscriptionId; top=top, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

"""

Gets all deployments operations for a deployment.
Param: groupId::String (required)
Param: deploymentName::String (required)
Param: api_version::String (required)
Param: top::Int32
Return: DeploymentOperationsListResult
"""
function _swaggerinternal_deploymentOperationsListAtManagementGroupScope(_api::DeploymentOperationsApi, groupId::String, deploymentName::String, api_version::String; top=nothing, _mediaType=nothing)
    Swagger.validate_param("groupId", "deploymentOperationsListAtManagementGroupScope", :maxLength, groupId, 90)
    Swagger.validate_param("groupId", "deploymentOperationsListAtManagementGroupScope", :minLength, groupId, 1)

    Swagger.validate_param("deploymentName", "deploymentOperationsListAtManagementGroupScope", :maxLength, deploymentName, 64)
    Swagger.validate_param("deploymentName", "deploymentOperationsListAtManagementGroupScope", :minLength, deploymentName, 1)

    _ctx = Swagger.Ctx(_api.client, "GET", DeploymentOperationsListResult, "/providers/Microsoft.Management/managementGroups/{groupId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations", ["azure_auth"])
    Swagger.set_param(_ctx.path, "groupId", groupId)  # type String
    Swagger.set_param(_ctx.path, "deploymentName", deploymentName)  # type String
    Swagger.set_param(_ctx.query, "\$top", top)  # type Int32
    Swagger.set_param(_ctx.query, "api-version", api_version)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json"] : [_mediaType])
    return _ctx
end

function deploymentOperationsListAtManagementGroupScope(_api::DeploymentOperationsApi, groupId::String, deploymentName::String, api_version::String; top=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deploymentOperationsListAtManagementGroupScope(_api, groupId, deploymentName, api_version; top=top, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function deploymentOperationsListAtManagementGroupScope(_api::DeploymentOperationsApi, response_stream::Channel, groupId::String, deploymentName::String, api_version::String; top=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deploymentOperationsListAtManagementGroupScope(_api, groupId, deploymentName, api_version; top=top, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

"""

Gets all deployments operations for a deployment.
Param: scope::String (required)
Param: deploymentName::String (required)
Param: api_version::String (required)
Param: top::Int32
Return: DeploymentOperationsListResult
"""
function _swaggerinternal_deploymentOperationsListAtScope(_api::DeploymentOperationsApi, scope::String, deploymentName::String, api_version::String; top=nothing, _mediaType=nothing)
    Swagger.validate_param("deploymentName", "deploymentOperationsListAtScope", :maxLength, deploymentName, 64)
    Swagger.validate_param("deploymentName", "deploymentOperationsListAtScope", :minLength, deploymentName, 1)

    _ctx = Swagger.Ctx(_api.client, "GET", DeploymentOperationsListResult, "/{scope}/providers/Microsoft.Resources/deployments/{deploymentName}/operations", ["azure_auth"])
    Swagger.set_param(_ctx.path, "scope", scope)  # type String
    Swagger.set_param(_ctx.path, "deploymentName", deploymentName)  # type String
    Swagger.set_param(_ctx.query, "\$top", top)  # type Int32
    Swagger.set_param(_ctx.query, "api-version", api_version)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json"] : [_mediaType])
    return _ctx
end

function deploymentOperationsListAtScope(_api::DeploymentOperationsApi, scope::String, deploymentName::String, api_version::String; top=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deploymentOperationsListAtScope(_api, scope, deploymentName, api_version; top=top, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function deploymentOperationsListAtScope(_api::DeploymentOperationsApi, response_stream::Channel, scope::String, deploymentName::String, api_version::String; top=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deploymentOperationsListAtScope(_api, scope, deploymentName, api_version; top=top, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

"""

Gets all deployments operations for a deployment.
Param: deploymentName::String (required)
Param: api_version::String (required)
Param: subscriptionId::String (required)
Param: top::Int32
Return: DeploymentOperationsListResult
"""
function _swaggerinternal_deploymentOperationsListAtSubscriptionScope(_api::DeploymentOperationsApi, deploymentName::String, api_version::String, subscriptionId::String; top=nothing, _mediaType=nothing)
    Swagger.validate_param("deploymentName", "deploymentOperationsListAtSubscriptionScope", :maxLength, deploymentName, 64)
    Swagger.validate_param("deploymentName", "deploymentOperationsListAtSubscriptionScope", :minLength, deploymentName, 1)

    _ctx = Swagger.Ctx(_api.client, "GET", DeploymentOperationsListResult, "/subscriptions/{subscriptionId}/providers/Microsoft.Resources/deployments/{deploymentName}/operations", ["azure_auth"])
    Swagger.set_param(_ctx.path, "deploymentName", deploymentName)  # type String
    Swagger.set_param(_ctx.path, "subscriptionId", subscriptionId)  # type String
    Swagger.set_param(_ctx.query, "\$top", top)  # type Int32
    Swagger.set_param(_ctx.query, "api-version", api_version)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json"] : [_mediaType])
    return _ctx
end

function deploymentOperationsListAtSubscriptionScope(_api::DeploymentOperationsApi, deploymentName::String, api_version::String, subscriptionId::String; top=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deploymentOperationsListAtSubscriptionScope(_api, deploymentName, api_version, subscriptionId; top=top, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function deploymentOperationsListAtSubscriptionScope(_api::DeploymentOperationsApi, response_stream::Channel, deploymentName::String, api_version::String, subscriptionId::String; top=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deploymentOperationsListAtSubscriptionScope(_api, deploymentName, api_version, subscriptionId; top=top, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

"""

Gets all deployments operations for a deployment.
Param: deploymentName::String (required)
Param: api_version::String (required)
Param: top::Int32
Return: DeploymentOperationsListResult
"""
function _swaggerinternal_deploymentOperationsListAtTenantScope(_api::DeploymentOperationsApi, deploymentName::String, api_version::String; top=nothing, _mediaType=nothing)
    Swagger.validate_param("deploymentName", "deploymentOperationsListAtTenantScope", :maxLength, deploymentName, 64)
    Swagger.validate_param("deploymentName", "deploymentOperationsListAtTenantScope", :minLength, deploymentName, 1)

    _ctx = Swagger.Ctx(_api.client, "GET", DeploymentOperationsListResult, "/providers/Microsoft.Resources/deployments/{deploymentName}/operations", ["azure_auth"])
    Swagger.set_param(_ctx.path, "deploymentName", deploymentName)  # type String
    Swagger.set_param(_ctx.query, "\$top", top)  # type Int32
    Swagger.set_param(_ctx.query, "api-version", api_version)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json"] : [_mediaType])
    return _ctx
end

function deploymentOperationsListAtTenantScope(_api::DeploymentOperationsApi, deploymentName::String, api_version::String; top=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deploymentOperationsListAtTenantScope(_api, deploymentName, api_version; top=top, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function deploymentOperationsListAtTenantScope(_api::DeploymentOperationsApi, response_stream::Channel, deploymentName::String, api_version::String; top=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deploymentOperationsListAtTenantScope(_api, deploymentName, api_version; top=top, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

export deploymentOperationsGet, deploymentOperationsGetAtManagementGroupScope, deploymentOperationsGetAtScope, deploymentOperationsGetAtSubscriptionScope, deploymentOperationsGetAtTenantScope, deploymentOperationsList, deploymentOperationsListAtManagementGroupScope, deploymentOperationsListAtScope, deploymentOperationsListAtSubscriptionScope, deploymentOperationsListAtTenantScope
