# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""PolicyAssignmentUpdate
The policy assignment for Patch request.

    PolicyAssignmentUpdate(;
        properties=nothing,
        location=nothing,
        identity=nothing,
    )

    - properties::PolicyAssignmentUpdateProperties
    - location::String : The location of the policy assignment. Only required when utilizing managed identity.
    - identity::Identity
"""
Base.@kwdef mutable struct PolicyAssignmentUpdate <: OpenAPI.APIModel
    properties = nothing # spec type: Union{ Nothing, PolicyAssignmentUpdateProperties }
    location::Union{Nothing, String} = nothing
    identity = nothing # spec type: Union{ Nothing, Identity }

    function PolicyAssignmentUpdate(properties, location, identity, )
        o = new(properties, location, identity, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type PolicyAssignmentUpdate

const _property_types_PolicyAssignmentUpdate = Dict{Symbol,String}(Symbol("properties")=>"PolicyAssignmentUpdateProperties", Symbol("location")=>"String", Symbol("identity")=>"Identity", )
OpenAPI.property_type(::Type{ PolicyAssignmentUpdate }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_PolicyAssignmentUpdate[name]))}

function OpenAPI.check_required(o::PolicyAssignmentUpdate)
    true
end

function OpenAPI.validate_properties(o::PolicyAssignmentUpdate)
    OpenAPI.validate_property(PolicyAssignmentUpdate, Symbol("properties"), o.properties)
    OpenAPI.validate_property(PolicyAssignmentUpdate, Symbol("location"), o.location)
    OpenAPI.validate_property(PolicyAssignmentUpdate, Symbol("identity"), o.identity)
end

function OpenAPI.validate_property(::Type{ PolicyAssignmentUpdate }, name::Symbol, val)



end
