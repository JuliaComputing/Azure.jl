# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ExternalEvaluationEnforcementSettings
The details of the source of external evaluation results required by the policy during enforcement evaluation.

    ExternalEvaluationEnforcementSettings(;
        missingTokenAction=nothing,
        resultLifespan=nothing,
        endpointSettings=nothing,
        roleDefinitionIds=nothing,
    )

    - missingTokenAction::String : What to do when evaluating an enforcement policy that requires an external evaluation and the token is missing. Possible values are Audit and Deny and language expressions are supported.
    - resultLifespan::String : The lifespan of the endpoint invocation result after which it&#39;s no longer valid. Value is expected to follow the ISO 8601 duration format and language expressions are supported.
    - endpointSettings::ExternalEvaluationEndpointSettings
    - roleDefinitionIds::Vector{String} : An array of the role definition Ids the assignment&#39;s MSI will need in order to invoke the endpoint.
"""
Base.@kwdef mutable struct ExternalEvaluationEnforcementSettings <: OpenAPI.APIModel
    missingTokenAction::Union{Nothing, String} = nothing
    resultLifespan::Union{Nothing, String} = nothing
    endpointSettings = nothing # spec type: Union{ Nothing, ExternalEvaluationEndpointSettings }
    roleDefinitionIds::Union{Nothing, Vector{String}} = nothing

    function ExternalEvaluationEnforcementSettings(missingTokenAction, resultLifespan, endpointSettings, roleDefinitionIds, )
        o = new(missingTokenAction, resultLifespan, endpointSettings, roleDefinitionIds, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type ExternalEvaluationEnforcementSettings

const _property_types_ExternalEvaluationEnforcementSettings = Dict{Symbol,String}(Symbol("missingTokenAction")=>"String", Symbol("resultLifespan")=>"String", Symbol("endpointSettings")=>"ExternalEvaluationEndpointSettings", Symbol("roleDefinitionIds")=>"Vector{String}", )
OpenAPI.property_type(::Type{ ExternalEvaluationEnforcementSettings }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ExternalEvaluationEnforcementSettings[name]))}

function OpenAPI.check_required(o::ExternalEvaluationEnforcementSettings)
    true
end

function OpenAPI.validate_properties(o::ExternalEvaluationEnforcementSettings)
    OpenAPI.validate_property(ExternalEvaluationEnforcementSettings, Symbol("missingTokenAction"), o.missingTokenAction)
    OpenAPI.validate_property(ExternalEvaluationEnforcementSettings, Symbol("resultLifespan"), o.resultLifespan)
    OpenAPI.validate_property(ExternalEvaluationEnforcementSettings, Symbol("endpointSettings"), o.endpointSettings)
    OpenAPI.validate_property(ExternalEvaluationEnforcementSettings, Symbol("roleDefinitionIds"), o.roleDefinitionIds)
end

function OpenAPI.validate_property(::Type{ ExternalEvaluationEnforcementSettings }, name::Symbol, val)




end
