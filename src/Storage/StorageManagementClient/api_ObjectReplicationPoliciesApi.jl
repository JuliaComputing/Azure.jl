# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

struct ObjectReplicationPoliciesApi <: SwaggerApi
    client::Swagger.Client
end

"""

Create or update the object replication policy of the storage account.
Param: resourceGroupName::String (required)
Param: accountName::String (required)
Param: api_version::String (required)
Param: subscriptionId::String (required)
Param: objectReplicationPolicyId::String (required)
Param: properties::ObjectReplicationPolicy (required)
Return: ObjectReplicationPolicy
"""
function _swaggerinternal_objectReplicationPoliciesCreateOrUpdate(_api::ObjectReplicationPoliciesApi, resourceGroupName::String, accountName::String, api_version::String, subscriptionId::String, objectReplicationPolicyId::String, properties; _mediaType=nothing)
    Swagger.validate_param("resourceGroupName", "objectReplicationPoliciesCreateOrUpdate", :maxLength, resourceGroupName, 90)
    Swagger.validate_param("resourceGroupName", "objectReplicationPoliciesCreateOrUpdate", :minLength, resourceGroupName, 1)

    Swagger.validate_param("accountName", "objectReplicationPoliciesCreateOrUpdate", :maxLength, accountName, 24)
    Swagger.validate_param("accountName", "objectReplicationPoliciesCreateOrUpdate", :minLength, accountName, 3)

    Swagger.validate_param("api_version", "objectReplicationPoliciesCreateOrUpdate", :minLength, api_version, 1)

    Swagger.validate_param("subscriptionId", "objectReplicationPoliciesCreateOrUpdate", :minLength, subscriptionId, 1)

    Swagger.validate_param("objectReplicationPolicyId", "objectReplicationPoliciesCreateOrUpdate", :minLength, objectReplicationPolicyId, 1)

    _ctx = Swagger.Ctx(_api.client, "PUT", ObjectReplicationPolicy, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies/{objectReplicationPolicyId}", ["azure_auth"], properties)
    Swagger.set_param(_ctx.path, "resourceGroupName", resourceGroupName)  # type String
    Swagger.set_param(_ctx.path, "accountName", accountName)  # type String
    Swagger.set_param(_ctx.path, "subscriptionId", subscriptionId)  # type String
    Swagger.set_param(_ctx.path, "objectReplicationPolicyId", objectReplicationPolicyId)  # type String
    Swagger.set_param(_ctx.query, "api-version", api_version)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json"] : [_mediaType])
    return _ctx
end

function objectReplicationPoliciesCreateOrUpdate(_api::ObjectReplicationPoliciesApi, resourceGroupName::String, accountName::String, api_version::String, subscriptionId::String, objectReplicationPolicyId::String, properties; _mediaType=nothing)
    _ctx = _swaggerinternal_objectReplicationPoliciesCreateOrUpdate(_api, resourceGroupName, accountName, api_version, subscriptionId, objectReplicationPolicyId, properties; _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function objectReplicationPoliciesCreateOrUpdate(_api::ObjectReplicationPoliciesApi, response_stream::Channel, resourceGroupName::String, accountName::String, api_version::String, subscriptionId::String, objectReplicationPolicyId::String, properties; _mediaType=nothing)
    _ctx = _swaggerinternal_objectReplicationPoliciesCreateOrUpdate(_api, resourceGroupName, accountName, api_version, subscriptionId, objectReplicationPolicyId, properties; _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

"""

Deletes the object replication policy associated with the specified storage account.
Param: resourceGroupName::String (required)
Param: accountName::String (required)
Param: api_version::String (required)
Param: subscriptionId::String (required)
Param: objectReplicationPolicyId::String (required)
Return: Nothing
"""
function _swaggerinternal_objectReplicationPoliciesDelete(_api::ObjectReplicationPoliciesApi, resourceGroupName::String, accountName::String, api_version::String, subscriptionId::String, objectReplicationPolicyId::String; _mediaType=nothing)
    Swagger.validate_param("resourceGroupName", "objectReplicationPoliciesDelete", :maxLength, resourceGroupName, 90)
    Swagger.validate_param("resourceGroupName", "objectReplicationPoliciesDelete", :minLength, resourceGroupName, 1)

    Swagger.validate_param("accountName", "objectReplicationPoliciesDelete", :maxLength, accountName, 24)
    Swagger.validate_param("accountName", "objectReplicationPoliciesDelete", :minLength, accountName, 3)

    Swagger.validate_param("api_version", "objectReplicationPoliciesDelete", :minLength, api_version, 1)

    Swagger.validate_param("subscriptionId", "objectReplicationPoliciesDelete", :minLength, subscriptionId, 1)

    Swagger.validate_param("objectReplicationPolicyId", "objectReplicationPoliciesDelete", :minLength, objectReplicationPolicyId, 1)

    _ctx = Swagger.Ctx(_api.client, "DELETE", Nothing, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies/{objectReplicationPolicyId}", ["azure_auth"])
    Swagger.set_param(_ctx.path, "resourceGroupName", resourceGroupName)  # type String
    Swagger.set_param(_ctx.path, "accountName", accountName)  # type String
    Swagger.set_param(_ctx.path, "subscriptionId", subscriptionId)  # type String
    Swagger.set_param(_ctx.path, "objectReplicationPolicyId", objectReplicationPolicyId)  # type String
    Swagger.set_param(_ctx.query, "api-version", api_version)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json"] : [_mediaType])
    return _ctx
end

function objectReplicationPoliciesDelete(_api::ObjectReplicationPoliciesApi, resourceGroupName::String, accountName::String, api_version::String, subscriptionId::String, objectReplicationPolicyId::String; _mediaType=nothing)
    _ctx = _swaggerinternal_objectReplicationPoliciesDelete(_api, resourceGroupName, accountName, api_version, subscriptionId, objectReplicationPolicyId; _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function objectReplicationPoliciesDelete(_api::ObjectReplicationPoliciesApi, response_stream::Channel, resourceGroupName::String, accountName::String, api_version::String, subscriptionId::String, objectReplicationPolicyId::String; _mediaType=nothing)
    _ctx = _swaggerinternal_objectReplicationPoliciesDelete(_api, resourceGroupName, accountName, api_version, subscriptionId, objectReplicationPolicyId; _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

"""

Get the object replication policy of the storage account by policy ID.
Param: resourceGroupName::String (required)
Param: accountName::String (required)
Param: api_version::String (required)
Param: subscriptionId::String (required)
Param: objectReplicationPolicyId::String (required)
Return: ObjectReplicationPolicy
"""
function _swaggerinternal_objectReplicationPoliciesGet(_api::ObjectReplicationPoliciesApi, resourceGroupName::String, accountName::String, api_version::String, subscriptionId::String, objectReplicationPolicyId::String; _mediaType=nothing)
    Swagger.validate_param("resourceGroupName", "objectReplicationPoliciesGet", :maxLength, resourceGroupName, 90)
    Swagger.validate_param("resourceGroupName", "objectReplicationPoliciesGet", :minLength, resourceGroupName, 1)

    Swagger.validate_param("accountName", "objectReplicationPoliciesGet", :maxLength, accountName, 24)
    Swagger.validate_param("accountName", "objectReplicationPoliciesGet", :minLength, accountName, 3)

    Swagger.validate_param("api_version", "objectReplicationPoliciesGet", :minLength, api_version, 1)

    Swagger.validate_param("subscriptionId", "objectReplicationPoliciesGet", :minLength, subscriptionId, 1)

    Swagger.validate_param("objectReplicationPolicyId", "objectReplicationPoliciesGet", :minLength, objectReplicationPolicyId, 1)

    _ctx = Swagger.Ctx(_api.client, "GET", ObjectReplicationPolicy, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies/{objectReplicationPolicyId}", ["azure_auth"])
    Swagger.set_param(_ctx.path, "resourceGroupName", resourceGroupName)  # type String
    Swagger.set_param(_ctx.path, "accountName", accountName)  # type String
    Swagger.set_param(_ctx.path, "subscriptionId", subscriptionId)  # type String
    Swagger.set_param(_ctx.path, "objectReplicationPolicyId", objectReplicationPolicyId)  # type String
    Swagger.set_param(_ctx.query, "api-version", api_version)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json"] : [_mediaType])
    return _ctx
end

function objectReplicationPoliciesGet(_api::ObjectReplicationPoliciesApi, resourceGroupName::String, accountName::String, api_version::String, subscriptionId::String, objectReplicationPolicyId::String; _mediaType=nothing)
    _ctx = _swaggerinternal_objectReplicationPoliciesGet(_api, resourceGroupName, accountName, api_version, subscriptionId, objectReplicationPolicyId; _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function objectReplicationPoliciesGet(_api::ObjectReplicationPoliciesApi, response_stream::Channel, resourceGroupName::String, accountName::String, api_version::String, subscriptionId::String, objectReplicationPolicyId::String; _mediaType=nothing)
    _ctx = _swaggerinternal_objectReplicationPoliciesGet(_api, resourceGroupName, accountName, api_version, subscriptionId, objectReplicationPolicyId; _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

"""

List the object replication policies associated with the storage account.
Param: resourceGroupName::String (required)
Param: accountName::String (required)
Param: api_version::String (required)
Param: subscriptionId::String (required)
Return: ObjectReplicationPolicies
"""
function _swaggerinternal_objectReplicationPoliciesList(_api::ObjectReplicationPoliciesApi, resourceGroupName::String, accountName::String, api_version::String, subscriptionId::String; _mediaType=nothing)
    Swagger.validate_param("resourceGroupName", "objectReplicationPoliciesList", :maxLength, resourceGroupName, 90)
    Swagger.validate_param("resourceGroupName", "objectReplicationPoliciesList", :minLength, resourceGroupName, 1)

    Swagger.validate_param("accountName", "objectReplicationPoliciesList", :maxLength, accountName, 24)
    Swagger.validate_param("accountName", "objectReplicationPoliciesList", :minLength, accountName, 3)

    Swagger.validate_param("api_version", "objectReplicationPoliciesList", :minLength, api_version, 1)

    Swagger.validate_param("subscriptionId", "objectReplicationPoliciesList", :minLength, subscriptionId, 1)

    _ctx = Swagger.Ctx(_api.client, "GET", ObjectReplicationPolicies, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/objectReplicationPolicies", ["azure_auth"])
    Swagger.set_param(_ctx.path, "resourceGroupName", resourceGroupName)  # type String
    Swagger.set_param(_ctx.path, "accountName", accountName)  # type String
    Swagger.set_param(_ctx.path, "subscriptionId", subscriptionId)  # type String
    Swagger.set_param(_ctx.query, "api-version", api_version)  # type String
    Swagger.set_header_accept(_ctx, ["application/json"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json"] : [_mediaType])
    return _ctx
end

function objectReplicationPoliciesList(_api::ObjectReplicationPoliciesApi, resourceGroupName::String, accountName::String, api_version::String, subscriptionId::String; _mediaType=nothing)
    _ctx = _swaggerinternal_objectReplicationPoliciesList(_api, resourceGroupName, accountName, api_version, subscriptionId; _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function objectReplicationPoliciesList(_api::ObjectReplicationPoliciesApi, response_stream::Channel, resourceGroupName::String, accountName::String, api_version::String, subscriptionId::String; _mediaType=nothing)
    _ctx = _swaggerinternal_objectReplicationPoliciesList(_api, resourceGroupName, accountName, api_version, subscriptionId; _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

export objectReplicationPoliciesCreateOrUpdate, objectReplicationPoliciesDelete, objectReplicationPoliciesGet, objectReplicationPoliciesList
