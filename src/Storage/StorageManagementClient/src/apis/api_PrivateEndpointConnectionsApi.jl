# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct PrivateEndpointConnectionsApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `PrivateEndpointConnectionsApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ PrivateEndpointConnectionsApi }) = "https://management.azure.com"

const _returntypes_private_endpoint_connections_delete_PrivateEndpointConnectionsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("0", "x"=>".") * "\$") => ErrorResponse,
)

function _oacinternal_private_endpoint_connections_delete(_api::PrivateEndpointConnectionsApi, resource_group_name::String, account_name::String, api_version::String, subscription_id::String, private_endpoint_connection_name::String; _mediaType=nothing)
    OpenAPI.validate_param("resource_group_name", "private_endpoint_connections_delete", :maxLength, resource_group_name, 90)
    OpenAPI.validate_param("resource_group_name", "private_endpoint_connections_delete", :minLength, resource_group_name, 1)

    OpenAPI.validate_param("account_name", "private_endpoint_connections_delete", :maxLength, account_name, 24)
    OpenAPI.validate_param("account_name", "private_endpoint_connections_delete", :minLength, account_name, 3)

    OpenAPI.validate_param("api_version", "private_endpoint_connections_delete", :minLength, api_version, 1)

    OpenAPI.validate_param("subscription_id", "private_endpoint_connections_delete", :minLength, subscription_id, 1)

    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_private_endpoint_connections_delete_PrivateEndpointConnectionsApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "accountName", account_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "privateEndpointConnectionName", private_endpoint_connection_name)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Deletes the specified private endpoint connection associated with the storage account.

Params:
- resource_group_name::String (required)
- account_name::String (required)
- api_version::String (required)
- subscription_id::String (required)
- private_endpoint_connection_name::String (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function private_endpoint_connections_delete(_api::PrivateEndpointConnectionsApi, resource_group_name::String, account_name::String, api_version::String, subscription_id::String, private_endpoint_connection_name::String; _mediaType=nothing)
    _ctx = _oacinternal_private_endpoint_connections_delete(_api, resource_group_name, account_name, api_version, subscription_id, private_endpoint_connection_name; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function private_endpoint_connections_delete(_api::PrivateEndpointConnectionsApi, response_stream::Channel, resource_group_name::String, account_name::String, api_version::String, subscription_id::String, private_endpoint_connection_name::String; _mediaType=nothing)
    _ctx = _oacinternal_private_endpoint_connections_delete(_api, resource_group_name, account_name, api_version, subscription_id, private_endpoint_connection_name; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_private_endpoint_connections_get_PrivateEndpointConnectionsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => PrivateEndpointConnection,
    Regex("^" * replace("0", "x"=>".") * "\$") => ErrorResponse,
)

function _oacinternal_private_endpoint_connections_get(_api::PrivateEndpointConnectionsApi, resource_group_name::String, account_name::String, api_version::String, subscription_id::String, private_endpoint_connection_name::String; _mediaType=nothing)
    OpenAPI.validate_param("resource_group_name", "private_endpoint_connections_get", :maxLength, resource_group_name, 90)
    OpenAPI.validate_param("resource_group_name", "private_endpoint_connections_get", :minLength, resource_group_name, 1)

    OpenAPI.validate_param("account_name", "private_endpoint_connections_get", :maxLength, account_name, 24)
    OpenAPI.validate_param("account_name", "private_endpoint_connections_get", :minLength, account_name, 3)

    OpenAPI.validate_param("api_version", "private_endpoint_connections_get", :minLength, api_version, 1)

    OpenAPI.validate_param("subscription_id", "private_endpoint_connections_get", :minLength, subscription_id, 1)

    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_private_endpoint_connections_get_PrivateEndpointConnectionsApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "accountName", account_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "privateEndpointConnectionName", private_endpoint_connection_name)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Gets the specified private endpoint connection associated with the storage account.

Params:
- resource_group_name::String (required)
- account_name::String (required)
- api_version::String (required)
- subscription_id::String (required)
- private_endpoint_connection_name::String (required)

Return: PrivateEndpointConnection, OpenAPI.Clients.ApiResponse
"""
function private_endpoint_connections_get(_api::PrivateEndpointConnectionsApi, resource_group_name::String, account_name::String, api_version::String, subscription_id::String, private_endpoint_connection_name::String; _mediaType=nothing)
    _ctx = _oacinternal_private_endpoint_connections_get(_api, resource_group_name, account_name, api_version, subscription_id, private_endpoint_connection_name; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function private_endpoint_connections_get(_api::PrivateEndpointConnectionsApi, response_stream::Channel, resource_group_name::String, account_name::String, api_version::String, subscription_id::String, private_endpoint_connection_name::String; _mediaType=nothing)
    _ctx = _oacinternal_private_endpoint_connections_get(_api, resource_group_name, account_name, api_version, subscription_id, private_endpoint_connection_name; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_private_endpoint_connections_list_PrivateEndpointConnectionsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => PrivateEndpointConnectionListResult,
)

function _oacinternal_private_endpoint_connections_list(_api::PrivateEndpointConnectionsApi, resource_group_name::String, account_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    OpenAPI.validate_param("resource_group_name", "private_endpoint_connections_list", :maxLength, resource_group_name, 90)
    OpenAPI.validate_param("resource_group_name", "private_endpoint_connections_list", :minLength, resource_group_name, 1)

    OpenAPI.validate_param("account_name", "private_endpoint_connections_list", :maxLength, account_name, 24)
    OpenAPI.validate_param("account_name", "private_endpoint_connections_list", :minLength, account_name, 3)

    OpenAPI.validate_param("api_version", "private_endpoint_connections_list", :minLength, api_version, 1)

    OpenAPI.validate_param("subscription_id", "private_endpoint_connections_list", :minLength, subscription_id, 1)

    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_private_endpoint_connections_list_PrivateEndpointConnectionsApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "accountName", account_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""List all the private endpoint connections associated with the storage account.

Params:
- resource_group_name::String (required)
- account_name::String (required)
- api_version::String (required)
- subscription_id::String (required)

Return: PrivateEndpointConnectionListResult, OpenAPI.Clients.ApiResponse
"""
function private_endpoint_connections_list(_api::PrivateEndpointConnectionsApi, resource_group_name::String, account_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_private_endpoint_connections_list(_api, resource_group_name, account_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function private_endpoint_connections_list(_api::PrivateEndpointConnectionsApi, response_stream::Channel, resource_group_name::String, account_name::String, api_version::String, subscription_id::String; _mediaType=nothing)
    _ctx = _oacinternal_private_endpoint_connections_list(_api, resource_group_name, account_name, api_version, subscription_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_private_endpoint_connections_put_PrivateEndpointConnectionsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => PrivateEndpointConnection,
    Regex("^" * replace("0", "x"=>".") * "\$") => ErrorResponse,
)

function _oacinternal_private_endpoint_connections_put(_api::PrivateEndpointConnectionsApi, resource_group_name::String, account_name::String, api_version::String, subscription_id::String, private_endpoint_connection_name::String, properties::PrivateEndpointConnection; _mediaType=nothing)
    OpenAPI.validate_param("resource_group_name", "private_endpoint_connections_put", :maxLength, resource_group_name, 90)
    OpenAPI.validate_param("resource_group_name", "private_endpoint_connections_put", :minLength, resource_group_name, 1)

    OpenAPI.validate_param("account_name", "private_endpoint_connections_put", :maxLength, account_name, 24)
    OpenAPI.validate_param("account_name", "private_endpoint_connections_put", :minLength, account_name, 3)

    OpenAPI.validate_param("api_version", "private_endpoint_connections_put", :minLength, api_version, 1)

    OpenAPI.validate_param("subscription_id", "private_endpoint_connections_put", :minLength, subscription_id, 1)

    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_private_endpoint_connections_put_PrivateEndpointConnectionsApi, "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}", ["azure_auth", ], properties)
    OpenAPI.Clients.set_param(_ctx.path, "resourceGroupName", resource_group_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "accountName", account_name)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "privateEndpointConnectionName", private_endpoint_connection_name)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Update the state of specified private endpoint connection associated with the storage account.

Params:
- resource_group_name::String (required)
- account_name::String (required)
- api_version::String (required)
- subscription_id::String (required)
- private_endpoint_connection_name::String (required)
- properties::PrivateEndpointConnection (required)

Return: PrivateEndpointConnection, OpenAPI.Clients.ApiResponse
"""
function private_endpoint_connections_put(_api::PrivateEndpointConnectionsApi, resource_group_name::String, account_name::String, api_version::String, subscription_id::String, private_endpoint_connection_name::String, properties::PrivateEndpointConnection; _mediaType=nothing)
    _ctx = _oacinternal_private_endpoint_connections_put(_api, resource_group_name, account_name, api_version, subscription_id, private_endpoint_connection_name, properties; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function private_endpoint_connections_put(_api::PrivateEndpointConnectionsApi, response_stream::Channel, resource_group_name::String, account_name::String, api_version::String, subscription_id::String, private_endpoint_connection_name::String, properties::PrivateEndpointConnection; _mediaType=nothing)
    _ctx = _oacinternal_private_endpoint_connections_put(_api, resource_group_name, account_name, api_version, subscription_id, private_endpoint_connection_name, properties; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export private_endpoint_connections_delete
export private_endpoint_connections_get
export private_endpoint_connections_list
export private_endpoint_connections_put
