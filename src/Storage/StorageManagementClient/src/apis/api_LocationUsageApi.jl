# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct LocationUsageApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `LocationUsageApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ LocationUsageApi }) = "https://management.azure.com"

const _returntypes_usages_list_by_location_LocationUsageApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => UsageListResult,
)

function _oacinternal_usages_list_by_location(_api::LocationUsageApi, api_version::String, subscription_id::String, location::String; _mediaType=nothing)
    OpenAPI.validate_param("api_version", "usages_list_by_location", :minLength, api_version, 1)

    OpenAPI.validate_param("subscription_id", "usages_list_by_location", :minLength, subscription_id, 1)

    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_usages_list_by_location_LocationUsageApi, "/subscriptions/{subscriptionId}/providers/Microsoft.Storage/locations/{location}/usages", ["azure_auth", ])
    OpenAPI.Clients.set_param(_ctx.path, "subscriptionId", subscription_id)  # type String
    OpenAPI.Clients.set_param(_ctx.path, "location", location)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "api-version", api_version; style="", is_explode=false)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Gets the current usage count and the limit for the resources of the location under the subscription.

Params:
- api_version::String (required)
- subscription_id::String (required)
- location::String (required)

Return: UsageListResult, OpenAPI.Clients.ApiResponse
"""
function usages_list_by_location(_api::LocationUsageApi, api_version::String, subscription_id::String, location::String; _mediaType=nothing)
    _ctx = _oacinternal_usages_list_by_location(_api, api_version, subscription_id, location; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function usages_list_by_location(_api::LocationUsageApi, response_stream::Channel, api_version::String, subscription_id::String, location::String; _mediaType=nothing)
    _ctx = _oacinternal_usages_list_by_location(_api, api_version, subscription_id, location; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export usages_list_by_location
