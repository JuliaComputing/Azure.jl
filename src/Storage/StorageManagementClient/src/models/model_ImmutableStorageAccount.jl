# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ImmutableStorageAccount
This property enables and defines account-level immutability. Enabling the feature auto-enables Blob Versioning.

    ImmutableStorageAccount(;
        enabled=nothing,
        immutabilityPolicy=nothing,
    )

    - enabled::Bool : A boolean flag which enables account-level immutability. All the containers under such an account have object-level immutability enabled by default.
    - immutabilityPolicy::AccountImmutabilityPolicyProperties
"""
Base.@kwdef mutable struct ImmutableStorageAccount <: OpenAPI.APIModel
    enabled::Union{Nothing, Bool} = nothing
    immutabilityPolicy = nothing # spec type: Union{ Nothing, AccountImmutabilityPolicyProperties }

    function ImmutableStorageAccount(enabled, immutabilityPolicy, )
        o = new(enabled, immutabilityPolicy, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type ImmutableStorageAccount

const _property_types_ImmutableStorageAccount = Dict{Symbol,String}(Symbol("enabled")=>"Bool", Symbol("immutabilityPolicy")=>"AccountImmutabilityPolicyProperties", )
OpenAPI.property_type(::Type{ ImmutableStorageAccount }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ImmutableStorageAccount[name]))}

function OpenAPI.check_required(o::ImmutableStorageAccount)
    true
end

function OpenAPI.validate_properties(o::ImmutableStorageAccount)
    OpenAPI.validate_property(ImmutableStorageAccount, Symbol("enabled"), o.enabled)
    OpenAPI.validate_property(ImmutableStorageAccount, Symbol("immutabilityPolicy"), o.immutabilityPolicy)
end

function OpenAPI.validate_property(::Type{ ImmutableStorageAccount }, name::Symbol, val)


end
