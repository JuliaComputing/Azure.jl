# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""KeyVaultProperties
Properties of key vault.

    KeyVaultProperties(;
        keyname=nothing,
        keyversion=nothing,
        keyvaulturi=nothing,
        currentVersionedKeyIdentifier=nothing,
        lastKeyRotationTimestamp=nothing,
    )

    - keyname::String : The name of KeyVault key.
    - keyversion::String : The version of KeyVault key.
    - keyvaulturi::String : The Uri of KeyVault.
    - currentVersionedKeyIdentifier::String : The object identifier of the current versioned Key Vault Key in use.
    - lastKeyRotationTimestamp::ZonedDateTime : Timestamp of last rotation of the Key Vault Key.
"""
Base.@kwdef mutable struct KeyVaultProperties <: OpenAPI.APIModel
    keyname::Union{Nothing, String} = nothing
    keyversion::Union{Nothing, String} = nothing
    keyvaulturi::Union{Nothing, String} = nothing
    currentVersionedKeyIdentifier::Union{Nothing, String} = nothing
    lastKeyRotationTimestamp::Union{Nothing, ZonedDateTime} = nothing

    function KeyVaultProperties(keyname, keyversion, keyvaulturi, currentVersionedKeyIdentifier, lastKeyRotationTimestamp, )
        OpenAPI.validate_property(KeyVaultProperties, Symbol("keyname"), keyname)
        OpenAPI.validate_property(KeyVaultProperties, Symbol("keyversion"), keyversion)
        OpenAPI.validate_property(KeyVaultProperties, Symbol("keyvaulturi"), keyvaulturi)
        OpenAPI.validate_property(KeyVaultProperties, Symbol("currentVersionedKeyIdentifier"), currentVersionedKeyIdentifier)
        OpenAPI.validate_property(KeyVaultProperties, Symbol("lastKeyRotationTimestamp"), lastKeyRotationTimestamp)
        return new(keyname, keyversion, keyvaulturi, currentVersionedKeyIdentifier, lastKeyRotationTimestamp, )
    end
end # type KeyVaultProperties

const _property_types_KeyVaultProperties = Dict{Symbol,String}(Symbol("keyname")=>"String", Symbol("keyversion")=>"String", Symbol("keyvaulturi")=>"String", Symbol("currentVersionedKeyIdentifier")=>"String", Symbol("lastKeyRotationTimestamp")=>"ZonedDateTime", )
OpenAPI.property_type(::Type{ KeyVaultProperties }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_KeyVaultProperties[name]))}

function check_required(o::KeyVaultProperties)
    true
end

function OpenAPI.validate_property(::Type{ KeyVaultProperties }, name::Symbol, val)
    if name === Symbol("lastKeyRotationTimestamp")
        OpenAPI.validate_param(name, "KeyVaultProperties", :format, val, "date-time")
    end
end
