# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""StorageAccountProperties
Properties of the storage account.

    StorageAccountProperties(;
        provisioningState=nothing,
        primaryEndpoints=nothing,
        primaryLocation=nothing,
        statusOfPrimary=nothing,
        lastGeoFailoverTime=nothing,
        secondaryLocation=nothing,
        statusOfSecondary=nothing,
        creationTime=nothing,
        customDomain=nothing,
        secondaryEndpoints=nothing,
        encryption=nothing,
        accessTier=nothing,
        azureFilesIdentityBasedAuthentication=nothing,
        supportsHttpsTrafficOnly=nothing,
        networkAcls=nothing,
        isHnsEnabled=nothing,
        geoReplicationStats=nothing,
        failoverInProgress=nothing,
        largeFileSharesState=nothing,
        privateEndpointConnections=nothing,
        routingPreference=nothing,
        blobRestoreStatus=nothing,
        allowBlobPublicAccess=nothing,
        minimumTlsVersion=nothing,
    )

    - provisioningState::String : Gets the status of the storage account at the time the operation was called.
    - primaryEndpoints::Endpoints
    - primaryLocation::String : Gets the location of the primary data center for the storage account.
    - statusOfPrimary::String : Gets the status indicating whether the primary location of the storage account is available or unavailable.
    - lastGeoFailoverTime::ZonedDateTime : Gets the timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available if the accountType is Standard_GRS or Standard_RAGRS.
    - secondaryLocation::String : Gets the location of the geo-replicated secondary for the storage account. Only available if the accountType is Standard_GRS or Standard_RAGRS.
    - statusOfSecondary::String : Gets the status indicating whether the secondary location of the storage account is available or unavailable. Only available if the SKU name is Standard_GRS or Standard_RAGRS.
    - creationTime::ZonedDateTime : Gets the creation date and time of the storage account in UTC.
    - customDomain::CustomDomain
    - secondaryEndpoints::Endpoints
    - encryption::Encryption
    - accessTier::String : Required for storage accounts where kind &#x3D; BlobStorage. The access tier used for billing.
    - azureFilesIdentityBasedAuthentication::AzureFilesIdentityBasedAuthentication
    - supportsHttpsTrafficOnly::Bool : Allows https traffic only to storage service if sets to true.
    - networkAcls::NetworkRuleSet
    - isHnsEnabled::Bool : Account HierarchicalNamespace enabled if sets to true.
    - geoReplicationStats::GeoReplicationStats
    - failoverInProgress::Bool : If the failover is in progress, the value will be true, otherwise, it will be null.
    - largeFileSharesState::String : Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.
    - privateEndpointConnections::Vector{PrivateEndpointConnection} : List of private endpoint connection associated with the specified storage account
    - routingPreference::RoutingPreference
    - blobRestoreStatus::BlobRestoreStatus
    - allowBlobPublicAccess::Bool : Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property.
    - minimumTlsVersion::String : Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property.
"""
Base.@kwdef mutable struct StorageAccountProperties <: OpenAPI.APIModel
    provisioningState::Union{Nothing, String} = nothing
    primaryEndpoints = nothing # spec type: Union{ Nothing, Endpoints }
    primaryLocation::Union{Nothing, String} = nothing
    statusOfPrimary::Union{Nothing, String} = nothing
    lastGeoFailoverTime::Union{Nothing, ZonedDateTime} = nothing
    secondaryLocation::Union{Nothing, String} = nothing
    statusOfSecondary::Union{Nothing, String} = nothing
    creationTime::Union{Nothing, ZonedDateTime} = nothing
    customDomain = nothing # spec type: Union{ Nothing, CustomDomain }
    secondaryEndpoints = nothing # spec type: Union{ Nothing, Endpoints }
    encryption = nothing # spec type: Union{ Nothing, Encryption }
    accessTier::Union{Nothing, String} = nothing
    azureFilesIdentityBasedAuthentication = nothing # spec type: Union{ Nothing, AzureFilesIdentityBasedAuthentication }
    supportsHttpsTrafficOnly::Union{Nothing, Bool} = nothing
    networkAcls = nothing # spec type: Union{ Nothing, NetworkRuleSet }
    isHnsEnabled::Union{Nothing, Bool} = nothing
    geoReplicationStats = nothing # spec type: Union{ Nothing, GeoReplicationStats }
    failoverInProgress::Union{Nothing, Bool} = nothing
    largeFileSharesState::Union{Nothing, String} = nothing
    privateEndpointConnections::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{PrivateEndpointConnection} }
    routingPreference = nothing # spec type: Union{ Nothing, RoutingPreference }
    blobRestoreStatus = nothing # spec type: Union{ Nothing, BlobRestoreStatus }
    allowBlobPublicAccess::Union{Nothing, Bool} = nothing
    minimumTlsVersion::Union{Nothing, String} = nothing

    function StorageAccountProperties(provisioningState, primaryEndpoints, primaryLocation, statusOfPrimary, lastGeoFailoverTime, secondaryLocation, statusOfSecondary, creationTime, customDomain, secondaryEndpoints, encryption, accessTier, azureFilesIdentityBasedAuthentication, supportsHttpsTrafficOnly, networkAcls, isHnsEnabled, geoReplicationStats, failoverInProgress, largeFileSharesState, privateEndpointConnections, routingPreference, blobRestoreStatus, allowBlobPublicAccess, minimumTlsVersion, )
        OpenAPI.validate_property(StorageAccountProperties, Symbol("provisioningState"), provisioningState)
        OpenAPI.validate_property(StorageAccountProperties, Symbol("primaryEndpoints"), primaryEndpoints)
        OpenAPI.validate_property(StorageAccountProperties, Symbol("primaryLocation"), primaryLocation)
        OpenAPI.validate_property(StorageAccountProperties, Symbol("statusOfPrimary"), statusOfPrimary)
        OpenAPI.validate_property(StorageAccountProperties, Symbol("lastGeoFailoverTime"), lastGeoFailoverTime)
        OpenAPI.validate_property(StorageAccountProperties, Symbol("secondaryLocation"), secondaryLocation)
        OpenAPI.validate_property(StorageAccountProperties, Symbol("statusOfSecondary"), statusOfSecondary)
        OpenAPI.validate_property(StorageAccountProperties, Symbol("creationTime"), creationTime)
        OpenAPI.validate_property(StorageAccountProperties, Symbol("customDomain"), customDomain)
        OpenAPI.validate_property(StorageAccountProperties, Symbol("secondaryEndpoints"), secondaryEndpoints)
        OpenAPI.validate_property(StorageAccountProperties, Symbol("encryption"), encryption)
        OpenAPI.validate_property(StorageAccountProperties, Symbol("accessTier"), accessTier)
        OpenAPI.validate_property(StorageAccountProperties, Symbol("azureFilesIdentityBasedAuthentication"), azureFilesIdentityBasedAuthentication)
        OpenAPI.validate_property(StorageAccountProperties, Symbol("supportsHttpsTrafficOnly"), supportsHttpsTrafficOnly)
        OpenAPI.validate_property(StorageAccountProperties, Symbol("networkAcls"), networkAcls)
        OpenAPI.validate_property(StorageAccountProperties, Symbol("isHnsEnabled"), isHnsEnabled)
        OpenAPI.validate_property(StorageAccountProperties, Symbol("geoReplicationStats"), geoReplicationStats)
        OpenAPI.validate_property(StorageAccountProperties, Symbol("failoverInProgress"), failoverInProgress)
        OpenAPI.validate_property(StorageAccountProperties, Symbol("largeFileSharesState"), largeFileSharesState)
        OpenAPI.validate_property(StorageAccountProperties, Symbol("privateEndpointConnections"), privateEndpointConnections)
        OpenAPI.validate_property(StorageAccountProperties, Symbol("routingPreference"), routingPreference)
        OpenAPI.validate_property(StorageAccountProperties, Symbol("blobRestoreStatus"), blobRestoreStatus)
        OpenAPI.validate_property(StorageAccountProperties, Symbol("allowBlobPublicAccess"), allowBlobPublicAccess)
        OpenAPI.validate_property(StorageAccountProperties, Symbol("minimumTlsVersion"), minimumTlsVersion)
        return new(provisioningState, primaryEndpoints, primaryLocation, statusOfPrimary, lastGeoFailoverTime, secondaryLocation, statusOfSecondary, creationTime, customDomain, secondaryEndpoints, encryption, accessTier, azureFilesIdentityBasedAuthentication, supportsHttpsTrafficOnly, networkAcls, isHnsEnabled, geoReplicationStats, failoverInProgress, largeFileSharesState, privateEndpointConnections, routingPreference, blobRestoreStatus, allowBlobPublicAccess, minimumTlsVersion, )
    end
end # type StorageAccountProperties

const _property_types_StorageAccountProperties = Dict{Symbol,String}(Symbol("provisioningState")=>"String", Symbol("primaryEndpoints")=>"Endpoints", Symbol("primaryLocation")=>"String", Symbol("statusOfPrimary")=>"String", Symbol("lastGeoFailoverTime")=>"ZonedDateTime", Symbol("secondaryLocation")=>"String", Symbol("statusOfSecondary")=>"String", Symbol("creationTime")=>"ZonedDateTime", Symbol("customDomain")=>"CustomDomain", Symbol("secondaryEndpoints")=>"Endpoints", Symbol("encryption")=>"Encryption", Symbol("accessTier")=>"String", Symbol("azureFilesIdentityBasedAuthentication")=>"AzureFilesIdentityBasedAuthentication", Symbol("supportsHttpsTrafficOnly")=>"Bool", Symbol("networkAcls")=>"NetworkRuleSet", Symbol("isHnsEnabled")=>"Bool", Symbol("geoReplicationStats")=>"GeoReplicationStats", Symbol("failoverInProgress")=>"Bool", Symbol("largeFileSharesState")=>"String", Symbol("privateEndpointConnections")=>"Vector{PrivateEndpointConnection}", Symbol("routingPreference")=>"RoutingPreference", Symbol("blobRestoreStatus")=>"BlobRestoreStatus", Symbol("allowBlobPublicAccess")=>"Bool", Symbol("minimumTlsVersion")=>"String", )
OpenAPI.property_type(::Type{ StorageAccountProperties }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_StorageAccountProperties[name]))}

function check_required(o::StorageAccountProperties)
    true
end

function OpenAPI.validate_property(::Type{ StorageAccountProperties }, name::Symbol, val)
    if name === Symbol("provisioningState")
        OpenAPI.validate_param(name, "StorageAccountProperties", :enum, val, ["Creating", "ResolvingDNS", "Succeeded"])
    end
    if name === Symbol("statusOfPrimary")
        OpenAPI.validate_param(name, "StorageAccountProperties", :enum, val, ["available", "unavailable"])
    end
    if name === Symbol("lastGeoFailoverTime")
        OpenAPI.validate_param(name, "StorageAccountProperties", :format, val, "date-time")
    end
    if name === Symbol("statusOfSecondary")
        OpenAPI.validate_param(name, "StorageAccountProperties", :enum, val, ["available", "unavailable"])
    end
    if name === Symbol("creationTime")
        OpenAPI.validate_param(name, "StorageAccountProperties", :format, val, "date-time")
    end
    if name === Symbol("accessTier")
        OpenAPI.validate_param(name, "StorageAccountProperties", :enum, val, ["Hot", "Cool"])
    end
    if name === Symbol("largeFileSharesState")
        OpenAPI.validate_param(name, "StorageAccountProperties", :enum, val, ["Disabled", "Enabled"])
    end
    if name === Symbol("minimumTlsVersion")
        OpenAPI.validate_param(name, "StorageAccountProperties", :enum, val, ["TLS1_0", "TLS1_1", "TLS1_2"])
    end
end
