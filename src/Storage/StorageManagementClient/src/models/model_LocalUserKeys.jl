# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""LocalUserKeys
The Storage Account Local User keys.

    LocalUserKeys(;
        sshAuthorizedKeys=nothing,
        sharedKey=nothing,
    )

    - sshAuthorizedKeys::Vector{SshPublicKey} : Optional, local user ssh authorized keys for SFTP.
    - sharedKey::String : Auto generated by the server for SMB authentication.
"""
Base.@kwdef mutable struct LocalUserKeys <: OpenAPI.APIModel
    sshAuthorizedKeys::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{SshPublicKey} }
    sharedKey::Union{Nothing, String} = nothing

    function LocalUserKeys(sshAuthorizedKeys, sharedKey, )
        o = new(sshAuthorizedKeys, sharedKey, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type LocalUserKeys

const _property_types_LocalUserKeys = Dict{Symbol,String}(Symbol("sshAuthorizedKeys")=>"Vector{SshPublicKey}", Symbol("sharedKey")=>"String", )
OpenAPI.property_type(::Type{ LocalUserKeys }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_LocalUserKeys[name]))}

function OpenAPI.check_required(o::LocalUserKeys)
    true
end

function OpenAPI.validate_properties(o::LocalUserKeys)
    OpenAPI.validate_property(LocalUserKeys, Symbol("sshAuthorizedKeys"), o.sshAuthorizedKeys)
    OpenAPI.validate_property(LocalUserKeys, Symbol("sharedKey"), o.sharedKey)
end

function OpenAPI.validate_property(::Type{ LocalUserKeys }, name::Symbol, val)


end
