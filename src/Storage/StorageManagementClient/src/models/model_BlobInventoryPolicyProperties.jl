# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""BlobInventoryPolicyProperties
The storage account blob inventory policy properties.

    BlobInventoryPolicyProperties(;
        lastModifiedTime=nothing,
        policy=nothing,
    )

    - lastModifiedTime::ZonedDateTime : Returns the last modified date and time of the blob inventory policy.
    - policy::BlobInventoryPolicySchema
"""
Base.@kwdef mutable struct BlobInventoryPolicyProperties <: OpenAPI.APIModel
    lastModifiedTime::Union{Nothing, ZonedDateTime} = nothing
    policy = nothing # spec type: Union{ Nothing, BlobInventoryPolicySchema }

    function BlobInventoryPolicyProperties(lastModifiedTime, policy, )
        o = new(lastModifiedTime, policy, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type BlobInventoryPolicyProperties

const _property_types_BlobInventoryPolicyProperties = Dict{Symbol,String}(Symbol("lastModifiedTime")=>"ZonedDateTime", Symbol("policy")=>"BlobInventoryPolicySchema", )
OpenAPI.property_type(::Type{ BlobInventoryPolicyProperties }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_BlobInventoryPolicyProperties[name]))}

function OpenAPI.check_required(o::BlobInventoryPolicyProperties)
    o.policy === nothing && (return false)
    true
end

function OpenAPI.validate_properties(o::BlobInventoryPolicyProperties)
    OpenAPI.validate_property(BlobInventoryPolicyProperties, Symbol("lastModifiedTime"), o.lastModifiedTime)
    OpenAPI.validate_property(BlobInventoryPolicyProperties, Symbol("policy"), o.policy)
end

function OpenAPI.validate_property(::Type{ BlobInventoryPolicyProperties }, name::Symbol, val)

    if name === Symbol("lastModifiedTime")
        OpenAPI.validate_param(name, "BlobInventoryPolicyProperties", :format, val, "date-time")
    end

end
