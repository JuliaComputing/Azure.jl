# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ErrorResponseBody
Error response body contract.

    ErrorResponseBody(;
        code=nothing,
        message=nothing,
    )

    - code::String : An identifier for the error. Codes are invariant and are intended to be consumed programmatically.
    - message::String : A message describing the error, intended to be suitable for display in a user interface.
"""
Base.@kwdef mutable struct ErrorResponseBody <: OpenAPI.APIModel
    code::Union{Nothing, String} = nothing
    message::Union{Nothing, String} = nothing

    function ErrorResponseBody(code, message, )
        o = new(code, message, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type ErrorResponseBody

const _property_types_ErrorResponseBody = Dict{Symbol,String}(Symbol("code")=>"String", Symbol("message")=>"String", )
OpenAPI.property_type(::Type{ ErrorResponseBody }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ErrorResponseBody[name]))}

function OpenAPI.check_required(o::ErrorResponseBody)
    true
end

function OpenAPI.validate_properties(o::ErrorResponseBody)
    OpenAPI.validate_property(ErrorResponseBody, Symbol("code"), o.code)
    OpenAPI.validate_property(ErrorResponseBody, Symbol("message"), o.message)
end

function OpenAPI.validate_property(::Type{ ErrorResponseBody }, name::Symbol, val)


end
