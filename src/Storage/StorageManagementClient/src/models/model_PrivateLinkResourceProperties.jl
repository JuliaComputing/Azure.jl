# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""PrivateLinkResourceProperties
Properties of a private link resource.

    PrivateLinkResourceProperties(;
        groupId=nothing,
        requiredMembers=nothing,
        requiredZoneNames=nothing,
    )

    - groupId::String : The private link resource group id.
    - requiredMembers::Vector{String} : The private link resource required member names.
    - requiredZoneNames::Vector{String} : The private link resource Private link DNS zone name.
"""
Base.@kwdef mutable struct PrivateLinkResourceProperties <: OpenAPI.APIModel
    groupId::Union{Nothing, String} = nothing
    requiredMembers::Union{Nothing, Vector{String}} = nothing
    requiredZoneNames::Union{Nothing, Vector{String}} = nothing

    function PrivateLinkResourceProperties(groupId, requiredMembers, requiredZoneNames, )
        o = new(groupId, requiredMembers, requiredZoneNames, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type PrivateLinkResourceProperties

const _property_types_PrivateLinkResourceProperties = Dict{Symbol,String}(Symbol("groupId")=>"String", Symbol("requiredMembers")=>"Vector{String}", Symbol("requiredZoneNames")=>"Vector{String}", )
OpenAPI.property_type(::Type{ PrivateLinkResourceProperties }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_PrivateLinkResourceProperties[name]))}

function OpenAPI.check_required(o::PrivateLinkResourceProperties)
    true
end

function OpenAPI.validate_properties(o::PrivateLinkResourceProperties)
    OpenAPI.validate_property(PrivateLinkResourceProperties, Symbol("groupId"), o.groupId)
    OpenAPI.validate_property(PrivateLinkResourceProperties, Symbol("requiredMembers"), o.requiredMembers)
    OpenAPI.validate_property(PrivateLinkResourceProperties, Symbol("requiredZoneNames"), o.requiredZoneNames)
end

function OpenAPI.validate_property(::Type{ PrivateLinkResourceProperties }, name::Symbol, val)



end
