# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""BlobInventoryPolicySchema
The storage account blob inventory policy rules.

    BlobInventoryPolicySchema(;
        enabled=nothing,
        destination=nothing,
        type=nothing,
        rules=nothing,
    )

    - enabled::Bool : Policy is enabled if set to true.
    - destination::String : Deprecated Property from API version 2021-04-01 onwards, the required destination container name must be specified at the rule level &#39;policy.rule.destination&#39;
    - type::String : The valid value is Inventory
    - rules::Vector{BlobInventoryPolicyRule} : The storage account blob inventory policy rules. The rule is applied when it is enabled.
"""
Base.@kwdef mutable struct BlobInventoryPolicySchema <: OpenAPI.APIModel
    enabled::Union{Nothing, Bool} = nothing
    destination::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing
    rules::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{BlobInventoryPolicyRule} }

    function BlobInventoryPolicySchema(enabled, destination, type, rules, )
        o = new(enabled, destination, type, rules, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type BlobInventoryPolicySchema

const _property_types_BlobInventoryPolicySchema = Dict{Symbol,String}(Symbol("enabled")=>"Bool", Symbol("destination")=>"String", Symbol("type")=>"String", Symbol("rules")=>"Vector{BlobInventoryPolicyRule}", )
OpenAPI.property_type(::Type{ BlobInventoryPolicySchema }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_BlobInventoryPolicySchema[name]))}

function OpenAPI.check_required(o::BlobInventoryPolicySchema)
    o.enabled === nothing && (return false)
    o.type === nothing && (return false)
    o.rules === nothing && (return false)
    true
end

function OpenAPI.validate_properties(o::BlobInventoryPolicySchema)
    OpenAPI.validate_property(BlobInventoryPolicySchema, Symbol("enabled"), o.enabled)
    OpenAPI.validate_property(BlobInventoryPolicySchema, Symbol("destination"), o.destination)
    OpenAPI.validate_property(BlobInventoryPolicySchema, Symbol("type"), o.type)
    OpenAPI.validate_property(BlobInventoryPolicySchema, Symbol("rules"), o.rules)
end

function OpenAPI.validate_property(::Type{ BlobInventoryPolicySchema }, name::Symbol, val)



    if name === Symbol("type")
        OpenAPI.validate_param(name, "BlobInventoryPolicySchema", :enum, val, ["Inventory"])
    end


end
