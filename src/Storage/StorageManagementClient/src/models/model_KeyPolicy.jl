# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""KeyPolicy
KeyPolicy assigned to the storage account.

    KeyPolicy(;
        keyExpirationPeriodInDays=nothing,
    )

    - keyExpirationPeriodInDays::Int64 : The key expiration period in days.
"""
Base.@kwdef mutable struct KeyPolicy <: OpenAPI.APIModel
    keyExpirationPeriodInDays::Union{Nothing, Int64} = nothing

    function KeyPolicy(keyExpirationPeriodInDays, )
        o = new(keyExpirationPeriodInDays, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type KeyPolicy

const _property_types_KeyPolicy = Dict{Symbol,String}(Symbol("keyExpirationPeriodInDays")=>"Int64", )
OpenAPI.property_type(::Type{ KeyPolicy }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_KeyPolicy[name]))}

function OpenAPI.check_required(o::KeyPolicy)
    o.keyExpirationPeriodInDays === nothing && (return false)
    true
end

function OpenAPI.validate_properties(o::KeyPolicy)
    OpenAPI.validate_property(KeyPolicy, Symbol("keyExpirationPeriodInDays"), o.keyExpirationPeriodInDays)
end

function OpenAPI.validate_property(::Type{ KeyPolicy }, name::Symbol, val)

    if name === Symbol("keyExpirationPeriodInDays")
        OpenAPI.validate_param(name, "KeyPolicy", :format, val, "int32")
    end
end
