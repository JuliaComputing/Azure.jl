# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""StorageAccountPropertiesCreateParameters
The parameters used to create the storage account.

    StorageAccountPropertiesCreateParameters(;
        customDomain=nothing,
        encryption=nothing,
        networkAcls=nothing,
        accessTier=nothing,
        azureFilesIdentityBasedAuthentication=nothing,
        supportsHttpsTrafficOnly=nothing,
        isHnsEnabled=nothing,
        largeFileSharesState=nothing,
        routingPreference=nothing,
        allowBlobPublicAccess=nothing,
        minimumTlsVersion=nothing,
    )

    - customDomain::CustomDomain
    - encryption::Encryption
    - networkAcls::NetworkRuleSet
    - accessTier::String : Required for storage accounts where kind &#x3D; BlobStorage. The access tier used for billing.
    - azureFilesIdentityBasedAuthentication::AzureFilesIdentityBasedAuthentication
    - supportsHttpsTrafficOnly::Bool : Allows https traffic only to storage service if sets to true. The default value is true since API version 2019-04-01.
    - isHnsEnabled::Bool : Account HierarchicalNamespace enabled if sets to true.
    - largeFileSharesState::String : Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.
    - routingPreference::RoutingPreference
    - allowBlobPublicAccess::Bool : Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property.
    - minimumTlsVersion::String : Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property.
"""
Base.@kwdef mutable struct StorageAccountPropertiesCreateParameters <: OpenAPI.APIModel
    customDomain = nothing # spec type: Union{ Nothing, CustomDomain }
    encryption = nothing # spec type: Union{ Nothing, Encryption }
    networkAcls = nothing # spec type: Union{ Nothing, NetworkRuleSet }
    accessTier::Union{Nothing, String} = nothing
    azureFilesIdentityBasedAuthentication = nothing # spec type: Union{ Nothing, AzureFilesIdentityBasedAuthentication }
    supportsHttpsTrafficOnly::Union{Nothing, Bool} = nothing
    isHnsEnabled::Union{Nothing, Bool} = nothing
    largeFileSharesState::Union{Nothing, String} = nothing
    routingPreference = nothing # spec type: Union{ Nothing, RoutingPreference }
    allowBlobPublicAccess::Union{Nothing, Bool} = nothing
    minimumTlsVersion::Union{Nothing, String} = nothing

    function StorageAccountPropertiesCreateParameters(customDomain, encryption, networkAcls, accessTier, azureFilesIdentityBasedAuthentication, supportsHttpsTrafficOnly, isHnsEnabled, largeFileSharesState, routingPreference, allowBlobPublicAccess, minimumTlsVersion, )
        OpenAPI.validate_property(StorageAccountPropertiesCreateParameters, Symbol("customDomain"), customDomain)
        OpenAPI.validate_property(StorageAccountPropertiesCreateParameters, Symbol("encryption"), encryption)
        OpenAPI.validate_property(StorageAccountPropertiesCreateParameters, Symbol("networkAcls"), networkAcls)
        OpenAPI.validate_property(StorageAccountPropertiesCreateParameters, Symbol("accessTier"), accessTier)
        OpenAPI.validate_property(StorageAccountPropertiesCreateParameters, Symbol("azureFilesIdentityBasedAuthentication"), azureFilesIdentityBasedAuthentication)
        OpenAPI.validate_property(StorageAccountPropertiesCreateParameters, Symbol("supportsHttpsTrafficOnly"), supportsHttpsTrafficOnly)
        OpenAPI.validate_property(StorageAccountPropertiesCreateParameters, Symbol("isHnsEnabled"), isHnsEnabled)
        OpenAPI.validate_property(StorageAccountPropertiesCreateParameters, Symbol("largeFileSharesState"), largeFileSharesState)
        OpenAPI.validate_property(StorageAccountPropertiesCreateParameters, Symbol("routingPreference"), routingPreference)
        OpenAPI.validate_property(StorageAccountPropertiesCreateParameters, Symbol("allowBlobPublicAccess"), allowBlobPublicAccess)
        OpenAPI.validate_property(StorageAccountPropertiesCreateParameters, Symbol("minimumTlsVersion"), minimumTlsVersion)
        return new(customDomain, encryption, networkAcls, accessTier, azureFilesIdentityBasedAuthentication, supportsHttpsTrafficOnly, isHnsEnabled, largeFileSharesState, routingPreference, allowBlobPublicAccess, minimumTlsVersion, )
    end
end # type StorageAccountPropertiesCreateParameters

const _property_types_StorageAccountPropertiesCreateParameters = Dict{Symbol,String}(Symbol("customDomain")=>"CustomDomain", Symbol("encryption")=>"Encryption", Symbol("networkAcls")=>"NetworkRuleSet", Symbol("accessTier")=>"String", Symbol("azureFilesIdentityBasedAuthentication")=>"AzureFilesIdentityBasedAuthentication", Symbol("supportsHttpsTrafficOnly")=>"Bool", Symbol("isHnsEnabled")=>"Bool", Symbol("largeFileSharesState")=>"String", Symbol("routingPreference")=>"RoutingPreference", Symbol("allowBlobPublicAccess")=>"Bool", Symbol("minimumTlsVersion")=>"String", )
OpenAPI.property_type(::Type{ StorageAccountPropertiesCreateParameters }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_StorageAccountPropertiesCreateParameters[name]))}

function check_required(o::StorageAccountPropertiesCreateParameters)
    true
end

function OpenAPI.validate_property(::Type{ StorageAccountPropertiesCreateParameters }, name::Symbol, val)
    if name === Symbol("accessTier")
        OpenAPI.validate_param(name, "StorageAccountPropertiesCreateParameters", :enum, val, ["Hot", "Cool"])
    end
    if name === Symbol("largeFileSharesState")
        OpenAPI.validate_param(name, "StorageAccountPropertiesCreateParameters", :enum, val, ["Disabled", "Enabled"])
    end
    if name === Symbol("minimumTlsVersion")
        OpenAPI.validate_param(name, "StorageAccountPropertiesCreateParameters", :enum, val, ["TLS1_0", "TLS1_1", "TLS1_2"])
    end
end
