# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Resource

    Resource(;
        id=nothing,
        name=nothing,
        type=nothing,
    )

    - id::String : Fully qualified resource Id for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}
    - name::String : The name of the resource
    - type::String : The type of the resource. Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.
"""
Base.@kwdef mutable struct Resource <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing

    function Resource(id, name, type, )
        OpenAPI.validate_property(Resource, Symbol("id"), id)
        OpenAPI.validate_property(Resource, Symbol("name"), name)
        OpenAPI.validate_property(Resource, Symbol("type"), type)
        return new(id, name, type, )
    end
end # type Resource

const _property_types_Resource = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("name")=>"String", Symbol("type")=>"String", )
OpenAPI.property_type(::Type{ Resource }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Resource[name]))}

function check_required(o::Resource)
    true
end

function OpenAPI.validate_property(::Type{ Resource }, name::Symbol, val)
end
