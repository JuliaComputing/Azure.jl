# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""BlobInventoryPolicyFilter
An object that defines the blob inventory rule filter conditions. For &#39;Blob&#39; definition.objectType all filter properties are applicable, &#39;blobTypes&#39; is required and others are optional. For &#39;Container&#39; definition.objectType only prefixMatch is applicable and is optional.

    BlobInventoryPolicyFilter(;
        prefixMatch=nothing,
        excludePrefix=nothing,
        blobTypes=nothing,
        includeBlobVersions=nothing,
        includeSnapshots=nothing,
        includeDeleted=nothing,
        creationTime=nothing,
    )

    - prefixMatch::Vector{String} : An array of strings with maximum 10 blob prefixes to be included in the inventory.
    - excludePrefix::Vector{String} : An array of strings with maximum 10 blob prefixes to be excluded from the inventory.
    - blobTypes::Vector{String} : An array of predefined enum values. Valid values include blockBlob, appendBlob, pageBlob. Hns accounts does not support pageBlobs. This field is required when definition.objectType property is set to &#39;Blob&#39;.
    - includeBlobVersions::Bool : Includes blob versions in blob inventory when value is set to true. The definition.schemaFields values &#39;VersionId and IsCurrentVersion&#39; are required if this property is set to true, else they must be excluded.
    - includeSnapshots::Bool : Includes blob snapshots in blob inventory when value is set to true. The definition.schemaFields value &#39;Snapshot&#39; is required if this property is set to true, else it must be excluded.
    - includeDeleted::Bool : For &#39;Container&#39; definition.objectType the definition.schemaFields must include &#39;Deleted, Version, DeletedTime and RemainingRetentionDays&#39;. For &#39;Blob&#39; definition.objectType and HNS enabled storage accounts the definition.schemaFields must include &#39;DeletionId, Deleted, DeletedTime and RemainingRetentionDays&#39; and for Hns disabled accounts the definition.schemaFields must include &#39;Deleted and RemainingRetentionDays&#39;, else it must be excluded.
    - creationTime::BlobInventoryCreationTime
"""
Base.@kwdef mutable struct BlobInventoryPolicyFilter <: OpenAPI.APIModel
    prefixMatch::Union{Nothing, Vector{String}} = nothing
    excludePrefix::Union{Nothing, Vector{String}} = nothing
    blobTypes::Union{Nothing, Vector{String}} = nothing
    includeBlobVersions::Union{Nothing, Bool} = nothing
    includeSnapshots::Union{Nothing, Bool} = nothing
    includeDeleted::Union{Nothing, Bool} = nothing
    creationTime = nothing # spec type: Union{ Nothing, BlobInventoryCreationTime }

    function BlobInventoryPolicyFilter(prefixMatch, excludePrefix, blobTypes, includeBlobVersions, includeSnapshots, includeDeleted, creationTime, )
        o = new(prefixMatch, excludePrefix, blobTypes, includeBlobVersions, includeSnapshots, includeDeleted, creationTime, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type BlobInventoryPolicyFilter

const _property_types_BlobInventoryPolicyFilter = Dict{Symbol,String}(Symbol("prefixMatch")=>"Vector{String}", Symbol("excludePrefix")=>"Vector{String}", Symbol("blobTypes")=>"Vector{String}", Symbol("includeBlobVersions")=>"Bool", Symbol("includeSnapshots")=>"Bool", Symbol("includeDeleted")=>"Bool", Symbol("creationTime")=>"BlobInventoryCreationTime", )
OpenAPI.property_type(::Type{ BlobInventoryPolicyFilter }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_BlobInventoryPolicyFilter[name]))}

function OpenAPI.check_required(o::BlobInventoryPolicyFilter)
    true
end

function OpenAPI.validate_properties(o::BlobInventoryPolicyFilter)
    OpenAPI.validate_property(BlobInventoryPolicyFilter, Symbol("prefixMatch"), o.prefixMatch)
    OpenAPI.validate_property(BlobInventoryPolicyFilter, Symbol("excludePrefix"), o.excludePrefix)
    OpenAPI.validate_property(BlobInventoryPolicyFilter, Symbol("blobTypes"), o.blobTypes)
    OpenAPI.validate_property(BlobInventoryPolicyFilter, Symbol("includeBlobVersions"), o.includeBlobVersions)
    OpenAPI.validate_property(BlobInventoryPolicyFilter, Symbol("includeSnapshots"), o.includeSnapshots)
    OpenAPI.validate_property(BlobInventoryPolicyFilter, Symbol("includeDeleted"), o.includeDeleted)
    OpenAPI.validate_property(BlobInventoryPolicyFilter, Symbol("creationTime"), o.creationTime)
end

function OpenAPI.validate_property(::Type{ BlobInventoryPolicyFilter }, name::Symbol, val)







end
