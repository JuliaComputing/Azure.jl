# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ManagementPolicyRule
An object that wraps the Lifecycle rule. Each rule is uniquely defined by name.

    ManagementPolicyRule(;
        enabled=nothing,
        name=nothing,
        type=nothing,
        definition=nothing,
    )

    - enabled::Bool : Rule is enabled if set to true.
    - name::String : A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.
    - type::String : The valid value is Lifecycle
    - definition::ManagementPolicyDefinition
"""
Base.@kwdef mutable struct ManagementPolicyRule <: OpenAPI.APIModel
    enabled::Union{Nothing, Bool} = nothing
    name::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing
    definition = nothing # spec type: Union{ Nothing, ManagementPolicyDefinition }

    function ManagementPolicyRule(enabled, name, type, definition, )
        o = new(enabled, name, type, definition, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type ManagementPolicyRule

const _property_types_ManagementPolicyRule = Dict{Symbol,String}(Symbol("enabled")=>"Bool", Symbol("name")=>"String", Symbol("type")=>"String", Symbol("definition")=>"ManagementPolicyDefinition", )
OpenAPI.property_type(::Type{ ManagementPolicyRule }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ManagementPolicyRule[name]))}

function OpenAPI.check_required(o::ManagementPolicyRule)
    o.name === nothing && (return false)
    o.type === nothing && (return false)
    o.definition === nothing && (return false)
    true
end

function OpenAPI.validate_properties(o::ManagementPolicyRule)
    OpenAPI.validate_property(ManagementPolicyRule, Symbol("enabled"), o.enabled)
    OpenAPI.validate_property(ManagementPolicyRule, Symbol("name"), o.name)
    OpenAPI.validate_property(ManagementPolicyRule, Symbol("type"), o.type)
    OpenAPI.validate_property(ManagementPolicyRule, Symbol("definition"), o.definition)
end

function OpenAPI.validate_property(::Type{ ManagementPolicyRule }, name::Symbol, val)



    if name === Symbol("type")
        OpenAPI.validate_param(name, "ManagementPolicyRule", :enum, val, ["Lifecycle"])
    end


end
