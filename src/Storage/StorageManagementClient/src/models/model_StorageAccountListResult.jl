# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""StorageAccountListResult
The response from the List Storage Accounts operation.

    StorageAccountListResult(;
        value=nothing,
        nextLink=nothing,
    )

    - value::Vector{StorageAccount} : Gets the list of storage accounts and their properties.
    - nextLink::String : Request URL that can be used to query next page of storage accounts. Returned when total number of requested storage accounts exceed maximum page size.
"""
Base.@kwdef mutable struct StorageAccountListResult <: OpenAPI.APIModel
    value::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{StorageAccount} }
    nextLink::Union{Nothing, String} = nothing

    function StorageAccountListResult(value, nextLink, )
        o = new(value, nextLink, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type StorageAccountListResult

const _property_types_StorageAccountListResult = Dict{Symbol,String}(Symbol("value")=>"Vector{StorageAccount}", Symbol("nextLink")=>"String", )
OpenAPI.property_type(::Type{ StorageAccountListResult }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_StorageAccountListResult[name]))}

function OpenAPI.check_required(o::StorageAccountListResult)
    true
end

function OpenAPI.validate_properties(o::StorageAccountListResult)
    OpenAPI.validate_property(StorageAccountListResult, Symbol("value"), o.value)
    OpenAPI.validate_property(StorageAccountListResult, Symbol("nextLink"), o.nextLink)
end

function OpenAPI.validate_property(::Type{ StorageAccountListResult }, name::Symbol, val)


end
