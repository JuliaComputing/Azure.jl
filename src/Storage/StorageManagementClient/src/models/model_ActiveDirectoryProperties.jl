# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ActiveDirectoryProperties
Settings properties for Active Directory (AD).

    ActiveDirectoryProperties(;
        domainName=nothing,
        netBiosDomainName=nothing,
        forestName=nothing,
        domainGuid=nothing,
        domainSid=nothing,
        azureStorageSid=nothing,
    )

    - domainName::String : Specifies the primary domain that the AD DNS server is authoritative for.
    - netBiosDomainName::String : Specifies the NetBIOS domain name.
    - forestName::String : Specifies the Active Directory forest to get.
    - domainGuid::String : Specifies the domain GUID.
    - domainSid::String : Specifies the security identifier (SID).
    - azureStorageSid::String : Specifies the security identifier (SID) for Azure Storage.
"""
Base.@kwdef mutable struct ActiveDirectoryProperties <: OpenAPI.APIModel
    domainName::Union{Nothing, String} = nothing
    netBiosDomainName::Union{Nothing, String} = nothing
    forestName::Union{Nothing, String} = nothing
    domainGuid::Union{Nothing, String} = nothing
    domainSid::Union{Nothing, String} = nothing
    azureStorageSid::Union{Nothing, String} = nothing

    function ActiveDirectoryProperties(domainName, netBiosDomainName, forestName, domainGuid, domainSid, azureStorageSid, )
        OpenAPI.validate_property(ActiveDirectoryProperties, Symbol("domainName"), domainName)
        OpenAPI.validate_property(ActiveDirectoryProperties, Symbol("netBiosDomainName"), netBiosDomainName)
        OpenAPI.validate_property(ActiveDirectoryProperties, Symbol("forestName"), forestName)
        OpenAPI.validate_property(ActiveDirectoryProperties, Symbol("domainGuid"), domainGuid)
        OpenAPI.validate_property(ActiveDirectoryProperties, Symbol("domainSid"), domainSid)
        OpenAPI.validate_property(ActiveDirectoryProperties, Symbol("azureStorageSid"), azureStorageSid)
        return new(domainName, netBiosDomainName, forestName, domainGuid, domainSid, azureStorageSid, )
    end
end # type ActiveDirectoryProperties

const _property_types_ActiveDirectoryProperties = Dict{Symbol,String}(Symbol("domainName")=>"String", Symbol("netBiosDomainName")=>"String", Symbol("forestName")=>"String", Symbol("domainGuid")=>"String", Symbol("domainSid")=>"String", Symbol("azureStorageSid")=>"String", )
OpenAPI.property_type(::Type{ ActiveDirectoryProperties }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ActiveDirectoryProperties[name]))}

function check_required(o::ActiveDirectoryProperties)
    o.domainName === nothing && (return false)
    o.netBiosDomainName === nothing && (return false)
    o.forestName === nothing && (return false)
    o.domainGuid === nothing && (return false)
    o.domainSid === nothing && (return false)
    o.azureStorageSid === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ ActiveDirectoryProperties }, name::Symbol, val)
end
