# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Operation_display
Display metadata associated with the operation.

    OperationDisplay(;
        provider=nothing,
        resource=nothing,
        operation=nothing,
        description=nothing,
    )

    - provider::String : Service provider: Microsoft Storage.
    - resource::String : Resource on which the operation is performed etc.
    - operation::String : Type of operation: get, read, delete, etc.
    - description::String : Description of the operation.
"""
Base.@kwdef mutable struct OperationDisplay <: OpenAPI.APIModel
    provider::Union{Nothing, String} = nothing
    resource::Union{Nothing, String} = nothing
    operation::Union{Nothing, String} = nothing
    description::Union{Nothing, String} = nothing

    function OperationDisplay(provider, resource, operation, description, )
        OpenAPI.validate_property(OperationDisplay, Symbol("provider"), provider)
        OpenAPI.validate_property(OperationDisplay, Symbol("resource"), resource)
        OpenAPI.validate_property(OperationDisplay, Symbol("operation"), operation)
        OpenAPI.validate_property(OperationDisplay, Symbol("description"), description)
        return new(provider, resource, operation, description, )
    end
end # type OperationDisplay

const _property_types_OperationDisplay = Dict{Symbol,String}(Symbol("provider")=>"String", Symbol("resource")=>"String", Symbol("operation")=>"String", Symbol("description")=>"String", )
OpenAPI.property_type(::Type{ OperationDisplay }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_OperationDisplay[name]))}

function check_required(o::OperationDisplay)
    true
end

function OpenAPI.validate_property(::Type{ OperationDisplay }, name::Symbol, val)
end
