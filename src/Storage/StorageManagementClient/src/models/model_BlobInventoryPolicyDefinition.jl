# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""BlobInventoryPolicyDefinition
An object that defines the blob inventory rule.

    BlobInventoryPolicyDefinition(;
        filters=nothing,
        format=nothing,
        schedule=nothing,
        objectType=nothing,
        schemaFields=nothing,
    )

    - filters::BlobInventoryPolicyFilter
    - format::String : This is a required field, it specifies the format for the inventory files.
    - schedule::String : This is a required field. This field is used to schedule an inventory formation.
    - objectType::String : This is a required field. This field specifies the scope of the inventory created either at the blob or container level.
    - schemaFields::Vector{String} : This is a required field. This field specifies the fields and properties of the object to be included in the inventory. The Schema field value &#39;Name&#39; is always required. The valid values for this field for the &#39;Blob&#39; definition.objectType include &#39;Name, Creation-Time, Last-Modified, Content-Length, Content-MD5, BlobType, AccessTier, AccessTierChangeTime, AccessTierInferred, Tags, Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, Snapshot, VersionId, IsCurrentVersion, Metadata, LastAccessTime, Tags, Etag, ContentType, ContentEncoding, ContentLanguage, ContentCRC64, CacheControl, ContentDisposition, LeaseStatus, LeaseState, LeaseDuration, ServerEncrypted, Deleted, DeletionId, DeletedTime, RemainingRetentionDays, ImmutabilityPolicyUntilDate, ImmutabilityPolicyMode, LegalHold, CopyId, CopyStatus, CopySource, CopyProgress, CopyCompletionTime, CopyStatusDescription, CustomerProvidedKeySha256, RehydratePriority, ArchiveStatus, XmsBlobSequenceNumber, EncryptionScope, IncrementalCopy, TagCount&#39;. For Blob object type schema field value &#39;DeletedTime&#39; is applicable only for Hns enabled accounts. The valid values for &#39;Container&#39; definition.objectType include &#39;Name, Last-Modified, Metadata, LeaseStatus, LeaseState, LeaseDuration, PublicAccess, HasImmutabilityPolicy, HasLegalHold, Etag, DefaultEncryptionScope, DenyEncryptionScopeOverride, ImmutableStorageWithVersioningEnabled, Deleted, Version, DeletedTime, RemainingRetentionDays&#39;. Schema field values &#39;Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, DeletionId&#39; are valid only for Hns enabled accounts.Schema field values &#39;Tags, TagCount&#39; are only valid for Non-Hns accounts.
"""
Base.@kwdef mutable struct BlobInventoryPolicyDefinition <: OpenAPI.APIModel
    filters = nothing # spec type: Union{ Nothing, BlobInventoryPolicyFilter }
    format::Union{Nothing, String} = nothing
    schedule::Union{Nothing, String} = nothing
    objectType::Union{Nothing, String} = nothing
    schemaFields::Union{Nothing, Vector{String}} = nothing

    function BlobInventoryPolicyDefinition(filters, format, schedule, objectType, schemaFields, )
        o = new(filters, format, schedule, objectType, schemaFields, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type BlobInventoryPolicyDefinition

const _property_types_BlobInventoryPolicyDefinition = Dict{Symbol,String}(Symbol("filters")=>"BlobInventoryPolicyFilter", Symbol("format")=>"String", Symbol("schedule")=>"String", Symbol("objectType")=>"String", Symbol("schemaFields")=>"Vector{String}", )
OpenAPI.property_type(::Type{ BlobInventoryPolicyDefinition }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_BlobInventoryPolicyDefinition[name]))}

function OpenAPI.check_required(o::BlobInventoryPolicyDefinition)
    o.format === nothing && (return false)
    o.schedule === nothing && (return false)
    o.objectType === nothing && (return false)
    o.schemaFields === nothing && (return false)
    true
end

function OpenAPI.validate_properties(o::BlobInventoryPolicyDefinition)
    OpenAPI.validate_property(BlobInventoryPolicyDefinition, Symbol("filters"), o.filters)
    OpenAPI.validate_property(BlobInventoryPolicyDefinition, Symbol("format"), o.format)
    OpenAPI.validate_property(BlobInventoryPolicyDefinition, Symbol("schedule"), o.schedule)
    OpenAPI.validate_property(BlobInventoryPolicyDefinition, Symbol("objectType"), o.objectType)
    OpenAPI.validate_property(BlobInventoryPolicyDefinition, Symbol("schemaFields"), o.schemaFields)
end

function OpenAPI.validate_property(::Type{ BlobInventoryPolicyDefinition }, name::Symbol, val)


    if name === Symbol("format")
        OpenAPI.validate_param(name, "BlobInventoryPolicyDefinition", :enum, val, ["Csv", "Parquet"])
    end


    if name === Symbol("schedule")
        OpenAPI.validate_param(name, "BlobInventoryPolicyDefinition", :enum, val, ["Daily", "Weekly"])
    end


    if name === Symbol("objectType")
        OpenAPI.validate_param(name, "BlobInventoryPolicyDefinition", :enum, val, ["Blob", "Container"])
    end


end
