# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct PrivateLinkResourceProperties <: SwaggerModel
    groupId::Any # spec type: Union{ Nothing, String } # spec name: groupId
    requiredMembers::Any # spec type: Union{ Nothing, Vector{String} } # spec name: requiredMembers
    requiredZoneNames::Any # spec type: Union{ Nothing, Vector{String} } # spec name: requiredZoneNames

    function PrivateLinkResourceProperties(;groupId=nothing, requiredMembers=nothing, requiredZoneNames=nothing)
        o = new()
        validate_property(PrivateLinkResourceProperties, Symbol("groupId"), groupId)
        setfield!(o, Symbol("groupId"), groupId)
        validate_property(PrivateLinkResourceProperties, Symbol("requiredMembers"), requiredMembers)
        setfield!(o, Symbol("requiredMembers"), requiredMembers)
        validate_property(PrivateLinkResourceProperties, Symbol("requiredZoneNames"), requiredZoneNames)
        setfield!(o, Symbol("requiredZoneNames"), requiredZoneNames)
        o
    end
end # type PrivateLinkResourceProperties

const _property_map_PrivateLinkResourceProperties = Dict{Symbol,Symbol}(Symbol("groupId")=>Symbol("groupId"), Symbol("requiredMembers")=>Symbol("requiredMembers"), Symbol("requiredZoneNames")=>Symbol("requiredZoneNames"))
const _property_types_PrivateLinkResourceProperties = Dict{Symbol,String}(Symbol("groupId")=>"String", Symbol("requiredMembers")=>"Vector{String}", Symbol("requiredZoneNames")=>"Vector{String}")
Base.propertynames(::Type{ PrivateLinkResourceProperties }) = collect(keys(_property_map_PrivateLinkResourceProperties))
Swagger.property_type(::Type{ PrivateLinkResourceProperties }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_PrivateLinkResourceProperties[name]))}
Swagger.field_name(::Type{ PrivateLinkResourceProperties }, property_name::Symbol) =  _property_map_PrivateLinkResourceProperties[property_name]

function check_required(o::PrivateLinkResourceProperties)
    true
end

function validate_property(::Type{ PrivateLinkResourceProperties }, name::Symbol, val)
end
