# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


mutable struct PrivateEndpointConnectionProperties <: SwaggerModel
    privateEndpoint::Any # spec type: Union{ Nothing, PrivateEndpoint } # spec name: privateEndpoint
    privateLinkServiceConnectionState::Any # spec type: Union{ Nothing, PrivateLinkServiceConnectionState } # spec name: privateLinkServiceConnectionState
    provisioningState::Any # spec type: Union{ Nothing, PrivateEndpointConnectionProvisioningState } # spec name: provisioningState

    function PrivateEndpointConnectionProperties(;privateEndpoint=nothing, privateLinkServiceConnectionState=nothing, provisioningState=nothing)
        o = new()
        validate_property(PrivateEndpointConnectionProperties, Symbol("privateEndpoint"), privateEndpoint)
        setfield!(o, Symbol("privateEndpoint"), privateEndpoint)
        validate_property(PrivateEndpointConnectionProperties, Symbol("privateLinkServiceConnectionState"), privateLinkServiceConnectionState)
        setfield!(o, Symbol("privateLinkServiceConnectionState"), privateLinkServiceConnectionState)
        validate_property(PrivateEndpointConnectionProperties, Symbol("provisioningState"), provisioningState)
        setfield!(o, Symbol("provisioningState"), provisioningState)
        o
    end
end # type PrivateEndpointConnectionProperties

const _property_map_PrivateEndpointConnectionProperties = Dict{Symbol,Symbol}(Symbol("privateEndpoint")=>Symbol("privateEndpoint"), Symbol("privateLinkServiceConnectionState")=>Symbol("privateLinkServiceConnectionState"), Symbol("provisioningState")=>Symbol("provisioningState"))
const _property_types_PrivateEndpointConnectionProperties = Dict{Symbol,String}(Symbol("privateEndpoint")=>"PrivateEndpoint", Symbol("privateLinkServiceConnectionState")=>"PrivateLinkServiceConnectionState", Symbol("provisioningState")=>"PrivateEndpointConnectionProvisioningState")
Base.propertynames(::Type{ PrivateEndpointConnectionProperties }) = collect(keys(_property_map_PrivateEndpointConnectionProperties))
Swagger.property_type(::Type{ PrivateEndpointConnectionProperties }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_PrivateEndpointConnectionProperties[name]))}
Swagger.field_name(::Type{ PrivateEndpointConnectionProperties }, property_name::Symbol) =  _property_map_PrivateEndpointConnectionProperties[property_name]

function check_required(o::PrivateEndpointConnectionProperties)
    (getproperty(o, Symbol("privateLinkServiceConnectionState")) === nothing) && (return false)
    true
end

function validate_property(::Type{ PrivateEndpointConnectionProperties }, name::Symbol, val)
end
